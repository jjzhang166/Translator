Terminals unused in grammar

   EXPR_ERROR


Grammar

    0 $accept: start $end

    1 start: /* empty */
    2      | declaration_list stmnt_list
    3      | declaration_list
    4      | stmnt_list
    5      | stmnt_list declaration_list

    6 declaration_list: declaration_block TOK_ENDEXPR
    7                 | declaration_list declaration_block TOK_ENDEXPR
    8                 | declaration_block error

    9 stmnt_list: stmnt
   10           | stmnt_list stmnt

   11 $@1: /* empty */

   12 stmnt_block_start: TOK_OPENBR $@1

   13 $@2: /* empty */

   14 stmnt_block: stmnt_block_start stmnt_list TOK_CLOSEBR $@2
   15            | stmnt_block_start stmnt_list error

   16 $@3: /* empty */

   17 stmnt_block: stmnt_block_start declaration_list TOK_CLOSEBR $@3

   18 $@4: /* empty */

   19 stmnt_block: stmnt_block_start declaration_list stmnt_list TOK_CLOSEBR $@4

   20 expr_or_assignment: expr
   21                   | assignment

   22 expression_statement: TOK_ENDEXPR
   23                     | expr_or_assignment TOK_ENDEXPR
   24                     | expr error

   25 lexemes: TOK_GOTO TOK_IDENTIFIER
   26        | TOK_BREAK
   27        | TOK_CONTINUE
   28        | TOK_RETURN

   29 stmnt: function_def
   30      | expression_statement
   31      | TOK_IDENTIFIER TOK_DOUBLEDOT
   32      | if_stmt
   33      | loop_decl
   34      | switch_stmt
   35      | print_stmt
   36      | read_stmt
   37      | lexemes TOK_ENDEXPR
   38      | lexemes error

   39 declaration_block: declaration_stmt
   40                  | struct_def

   41 declaration_stmt: type TOK_IDENTIFIER

   42 struct_def: struct_head struct_body struct_tail

   43 struct_head: struct_type TOK_IDENTIFIER

   44 struct_type: TOK_STRUCT
   45            | TOK_UNION

   46 struct_body: TOK_OPENBR declaration_list

   47 struct_tail: TOK_CLOSEBR

   48 print_stmt: TOK_PRINT TOK_OPENPAR expr TOK_CLOSEPAR TOK_ENDEXPR
   49           | TOK_PRINT error
   50           | TOK_PRINT '(' expr error
   51           | TOK_PRINT '(' expr ')' error

   52 read_stmt: TOK_READ TOK_OPENPAR left_assign_expr TOK_CLOSEPAR TOK_ENDEXPR

   53 if_stmt: TOK_IF TOK_OPENPAR expr TOK_CLOSEPAR instruction_body
   54        | TOK_IF TOK_OPENPAR expr TOK_CLOSEPAR instruction_body TOK_ELSE instruction_body
   55        | TOK_IF TOK_OPENPAR expr error

   56 loop_decl: for_decl loop_for_expr instruction_body
   57          | while_decl loop_while_expr instruction_body
   58          | do_while_decl instruction_body TOK_WHILE_DECL loop_while_expr TOK_ENDEXPR

   59 loop_while_expr: TOK_OPENPAR expr TOK_CLOSEPAR

   60 loop_for_expr: TOK_OPENPAR expression_statement expression_statement TOK_CLOSEPAR
   61              | TOK_OPENPAR expression_statement expression_statement expr_or_assignment TOK_CLOSEPAR

   62 for_decl: TOK_FOR_DECL

   63 while_decl: TOK_WHILE_DECL

   64 do_while_decl: TOK_DO_DECL

   65 instruction_body: stmnt_block
   66                 | stmnt

   67 type: type_name array

   68 type_name: TOK_ROM_DECL
   69          | TOK_FLOAT_DECL
   70          | TOK_INT_DECL
   71          | struct_type TOK_IDENTIFIER

   72 left_assign_expr: identifier
   73                 | struct_item

   74 assignment: left_assign_expr TOK_ASSIGN_OP expr

   75 expr: left_assign_expr
   76     | const
   77     | function_call
   78     | expr TOK_B_AND expr
   79     | expr TOK_B_OR expr
   80     | expr TOK_B_XOR expr
   81     | TOK_B_NOT expr
   82     | TOK_AR_MINUS expr
   83     | expr TOK_AR_PLUS expr
   84     | expr TOK_AR_MINUS expr
   85     | expr TOK_AR_MUL expr
   86     | expr TOK_AR_DIV expr
   87     | expr TOK_AR_MOD expr
   88     | expr TOK_COMP_OP expr
   89     | TOK_OPENPAR expr error
   90     | TOK_OPENPAR expr TOK_CLOSEPAR

   91 array: /* empty */
   92      | TOK_OPENSQ expr TOK_CLOSESQ array
   93      | TOK_OPENSQ error
   94      | TOK_OPENSQ expr error

   95 struct_item: identifier TOK_DOT TOK_IDENTIFIER

   96 identifier: TOK_IDENTIFIER array

   97 const: TOK_INT_CONST
   98      | TOK_ROM_CONST
   99      | TOK_FLOAT_CONST
  100      | TOK_STRING_LITERAL

  101 switch_stmt: switch_head case_list default TOK_CLOSEBR
  102            | switch_head case_list TOK_CLOSEBR

  103 switch_head: TOK_SWITCH TOK_OPENPAR expr TOK_CLOSEPAR TOK_OPENBR

  104 case_list: case_stmt
  105          | case_stmt case_list

  106 case_stmt: case_head case_body

  107 case_head: TOK_CASE expr TOK_DOUBLEDOT

  108 case_body: instruction_body
  109          | case_stmt

  110 default: default_head instruction_body

  111 default_head: TOK_DEFAULT TOK_DOUBLEDOT

  112 parameter: declaration_stmt
  113          | TOK_IDENTIFIER

  114 parameter_list: parameter
  115               | parameter_list TOK_COMMA parameter

  116 parameter_type_list: parameter_list

  117 declarator: TOK_OPENPAR parameter_type_list TOK_CLOSEPAR
  118           | TOK_OPENPAR TOK_CLOSEPAR

  119 function_call: TOK_IDENTIFIER declarator

  120 function_def_head: type TOK_IDENTIFIER

  121 function_def: function_def_head declarator stmnt_block


Terminals, with rules where they appear

$end (0) 0
'(' (40) 50 51
')' (41) 51
error (256) 8 15 24 38 49 50 51 55 89 93 94
TOK_IDENTIFIER (258) 25 31 41 43 71 95 96 113 119 120
TOK_B_AND (259) 78
TOK_B_OR (260) 79
TOK_B_XOR (261) 80
TOK_B_NOT (262) 81
TOK_AR_PLUS (263) 83
TOK_AR_MINUS (264) 82 84
TOK_AR_MUL (265) 85
TOK_AR_DIV (266) 86
TOK_AR_MOD (267) 87
TOK_ASSIGN_OP (268) 74
TOK_COMP_OP (269) 88
TOK_IF (270) 53 54 55
TOK_ELSE (271) 54
TOK_ENDEXPR (272) 6 7 22 23 37 48 52 58
TOK_OPENPAR (273) 48 52 53 54 55 59 60 61 89 90 103 117 118
TOK_CLOSEPAR (274) 48 52 53 54 59 60 61 90 103 117 118
TOK_OPENBR (275) 12 46 103
TOK_CLOSEBR (276) 14 17 19 47 101 102
TOK_OPENSQ (277) 92 93 94
TOK_CLOSESQ (278) 92
TOK_DOT (279) 95
TOK_COMMA (280) 115
TOK_DOUBLEDOT (281) 31 107 111
TOK_ROM_DECL (282) 68
TOK_INT_DECL (283) 70
TOK_FLOAT_DECL (284) 69
TOK_FOR_DECL (285) 62
TOK_WHILE_DECL (286) 58 63
TOK_DO_DECL (287) 64
TOK_ROM_CONST (288) 98
TOK_INT_CONST (289) 97
TOK_FLOAT_CONST (290) 99
TOK_PRINT (291) 48 49 50 51
TOK_READ (292) 52
TOK_BREAK (293) 26
TOK_CONTINUE (294) 27
TOK_GOTO (295) 25
TOK_RETURN (296) 28
TOK_STRUCT (297) 44
TOK_UNION (298) 45
TOK_SWITCH (299) 103
TOK_CASE (300) 107
TOK_DEFAULT (301) 111
TOK_STRING_LITERAL (302) 100
EXPR_ERROR (303)
STMNT_BLOCK_ERROR (304)
IF_WITHOUT_ELSE (305)
NOTX (306)
UMINUS (307)


Nonterminals, with rules where they appear

$accept (55)
    on left: 0
start (56)
    on left: 1 2 3 4 5, on right: 0
declaration_list (57)
    on left: 6 7 8, on right: 2 3 5 7 17 19 46
stmnt_list (58)
    on left: 9 10, on right: 2 4 5 10 14 15 19
stmnt_block_start (59)
    on left: 12, on right: 14 15 17 19
$@1 (60)
    on left: 11, on right: 12
stmnt_block (61)
    on left: 14 15 17 19, on right: 65 121
$@2 (62)
    on left: 13, on right: 14
$@3 (63)
    on left: 16, on right: 17
$@4 (64)
    on left: 18, on right: 19
expr_or_assignment (65)
    on left: 20 21, on right: 23 61
expression_statement (66)
    on left: 22 23 24, on right: 30 60 61
lexemes (67)
    on left: 25 26 27 28, on right: 37 38
stmnt (68)
    on left: 29 30 31 32 33 34 35 36 37 38, on right: 9 10 66
declaration_block (69)
    on left: 39 40, on right: 6 7 8
declaration_stmt (70)
    on left: 41, on right: 39 112
struct_def (71)
    on left: 42, on right: 40
struct_head (72)
    on left: 43, on right: 42
struct_type (73)
    on left: 44 45, on right: 43 71
struct_body (74)
    on left: 46, on right: 42
struct_tail (75)
    on left: 47, on right: 42
print_stmt (76)
    on left: 48 49 50 51, on right: 35
read_stmt (77)
    on left: 52, on right: 36
if_stmt (78)
    on left: 53 54 55, on right: 32
loop_decl (79)
    on left: 56 57 58, on right: 33
loop_while_expr (80)
    on left: 59, on right: 57 58
loop_for_expr (81)
    on left: 60 61, on right: 56
for_decl (82)
    on left: 62, on right: 56
while_decl (83)
    on left: 63, on right: 57
do_while_decl (84)
    on left: 64, on right: 58
instruction_body (85)
    on left: 65 66, on right: 53 54 56 57 58 108 110
type (86)
    on left: 67, on right: 41 120
type_name (87)
    on left: 68 69 70 71, on right: 67
left_assign_expr (88)
    on left: 72 73, on right: 52 74 75
assignment (89)
    on left: 74, on right: 21
expr (90)
    on left: 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90, on right:
    20 24 48 50 51 53 54 55 59 74 78 79 80 81 82 83 84 85 86 87 88
    89 90 92 94 103 107
array (91)
    on left: 91 92 93 94, on right: 67 92 96
struct_item (92)
    on left: 95, on right: 73
identifier (93)
    on left: 96, on right: 72 95
const (94)
    on left: 97 98 99 100, on right: 76
switch_stmt (95)
    on left: 101 102, on right: 34
switch_head (96)
    on left: 103, on right: 101 102
case_list (97)
    on left: 104 105, on right: 101 102 105
case_stmt (98)
    on left: 106, on right: 104 105 109
case_head (99)
    on left: 107, on right: 106
case_body (100)
    on left: 108 109, on right: 106
default (101)
    on left: 110, on right: 101
default_head (102)
    on left: 111, on right: 110
parameter (103)
    on left: 112 113, on right: 114 115
parameter_list (104)
    on left: 114 115, on right: 115 116
parameter_type_list (105)
    on left: 116, on right: 117
declarator (106)
    on left: 117 118, on right: 119 121
function_call (107)
    on left: 119, on right: 77
function_def_head (108)
    on left: 120, on right: 121
function_def (109)
    on left: 121, on right: 29


state 0

    0 $accept: . start $end

    TOK_IDENTIFIER      shift, and go to state 1
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_IF              shift, and go to state 4
    TOK_ENDEXPR         shift, and go to state 5
    TOK_OPENPAR         shift, and go to state 6
    TOK_ROM_DECL        shift, and go to state 7
    TOK_INT_DECL        shift, and go to state 8
    TOK_FLOAT_DECL      shift, and go to state 9
    TOK_FOR_DECL        shift, and go to state 10
    TOK_WHILE_DECL      shift, and go to state 11
    TOK_DO_DECL         shift, and go to state 12
    TOK_ROM_CONST       shift, and go to state 13
    TOK_INT_CONST       shift, and go to state 14
    TOK_FLOAT_CONST     shift, and go to state 15
    TOK_PRINT           shift, and go to state 16
    TOK_READ            shift, and go to state 17
    TOK_BREAK           shift, and go to state 18
    TOK_CONTINUE        shift, and go to state 19
    TOK_GOTO            shift, and go to state 20
    TOK_RETURN          shift, and go to state 21
    TOK_STRUCT          shift, and go to state 22
    TOK_UNION           shift, and go to state 23
    TOK_SWITCH          shift, and go to state 24
    TOK_STRING_LITERAL  shift, and go to state 25

    $default  reduce using rule 1 (start)

    start                 go to state 26
    declaration_list      go to state 27
    stmnt_list            go to state 28
    expr_or_assignment    go to state 29
    expression_statement  go to state 30
    lexemes               go to state 31
    stmnt                 go to state 32
    declaration_block     go to state 33
    declaration_stmt      go to state 34
    struct_def            go to state 35
    struct_head           go to state 36
    struct_type           go to state 37
    print_stmt            go to state 38
    read_stmt             go to state 39
    if_stmt               go to state 40
    loop_decl             go to state 41
    for_decl              go to state 42
    while_decl            go to state 43
    do_while_decl         go to state 44
    type                  go to state 45
    type_name             go to state 46
    left_assign_expr      go to state 47
    assignment            go to state 48
    expr                  go to state 49
    struct_item           go to state 50
    identifier            go to state 51
    const                 go to state 52
    switch_stmt           go to state 53
    switch_head           go to state 54
    function_call         go to state 55
    function_def_head     go to state 56
    function_def          go to state 57


state 1

   31 stmnt: TOK_IDENTIFIER . TOK_DOUBLEDOT
   96 identifier: TOK_IDENTIFIER . array
  119 function_call: TOK_IDENTIFIER . declarator

    TOK_OPENPAR    shift, and go to state 58
    TOK_OPENSQ     shift, and go to state 59
    TOK_DOUBLEDOT  shift, and go to state 60

    $default  reduce using rule 91 (array)

    array       go to state 61
    declarator  go to state 62


state 2

   81 expr: TOK_B_NOT . expr

    TOK_IDENTIFIER      shift, and go to state 63
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_OPENPAR         shift, and go to state 6
    TOK_ROM_CONST       shift, and go to state 13
    TOK_INT_CONST       shift, and go to state 14
    TOK_FLOAT_CONST     shift, and go to state 15
    TOK_STRING_LITERAL  shift, and go to state 25

    left_assign_expr  go to state 64
    expr              go to state 65
    struct_item       go to state 50
    identifier        go to state 51
    const             go to state 52
    function_call     go to state 55


state 3

   82 expr: TOK_AR_MINUS . expr

    TOK_IDENTIFIER      shift, and go to state 63
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_OPENPAR         shift, and go to state 6
    TOK_ROM_CONST       shift, and go to state 13
    TOK_INT_CONST       shift, and go to state 14
    TOK_FLOAT_CONST     shift, and go to state 15
    TOK_STRING_LITERAL  shift, and go to state 25

    left_assign_expr  go to state 64
    expr              go to state 66
    struct_item       go to state 50
    identifier        go to state 51
    const             go to state 52
    function_call     go to state 55


state 4

   53 if_stmt: TOK_IF . TOK_OPENPAR expr TOK_CLOSEPAR instruction_body
   54        | TOK_IF . TOK_OPENPAR expr TOK_CLOSEPAR instruction_body TOK_ELSE instruction_body
   55        | TOK_IF . TOK_OPENPAR expr error

    TOK_OPENPAR  shift, and go to state 67


state 5

   22 expression_statement: TOK_ENDEXPR .

    $default  reduce using rule 22 (expression_statement)


state 6

   89 expr: TOK_OPENPAR . expr error
   90     | TOK_OPENPAR . expr TOK_CLOSEPAR

    TOK_IDENTIFIER      shift, and go to state 63
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_OPENPAR         shift, and go to state 6
    TOK_ROM_CONST       shift, and go to state 13
    TOK_INT_CONST       shift, and go to state 14
    TOK_FLOAT_CONST     shift, and go to state 15
    TOK_STRING_LITERAL  shift, and go to state 25

    left_assign_expr  go to state 64
    expr              go to state 68
    struct_item       go to state 50
    identifier        go to state 51
    const             go to state 52
    function_call     go to state 55


state 7

   68 type_name: TOK_ROM_DECL .

    $default  reduce using rule 68 (type_name)


state 8

   70 type_name: TOK_INT_DECL .

    $default  reduce using rule 70 (type_name)


state 9

   69 type_name: TOK_FLOAT_DECL .

    $default  reduce using rule 69 (type_name)


state 10

   62 for_decl: TOK_FOR_DECL .

    $default  reduce using rule 62 (for_decl)


state 11

   63 while_decl: TOK_WHILE_DECL .

    $default  reduce using rule 63 (while_decl)


state 12

   64 do_while_decl: TOK_DO_DECL .

    $default  reduce using rule 64 (do_while_decl)


state 13

   98 const: TOK_ROM_CONST .

    $default  reduce using rule 98 (const)


state 14

   97 const: TOK_INT_CONST .

    $default  reduce using rule 97 (const)


state 15

   99 const: TOK_FLOAT_CONST .

    $default  reduce using rule 99 (const)


state 16

   48 print_stmt: TOK_PRINT . TOK_OPENPAR expr TOK_CLOSEPAR TOK_ENDEXPR
   49           | TOK_PRINT . error
   50           | TOK_PRINT . '(' expr error
   51           | TOK_PRINT . '(' expr ')' error

    error        shift, and go to state 69
    TOK_OPENPAR  shift, and go to state 70
    '('          shift, and go to state 71


state 17

   52 read_stmt: TOK_READ . TOK_OPENPAR left_assign_expr TOK_CLOSEPAR TOK_ENDEXPR

    TOK_OPENPAR  shift, and go to state 72


state 18

   26 lexemes: TOK_BREAK .

    $default  reduce using rule 26 (lexemes)


state 19

   27 lexemes: TOK_CONTINUE .

    $default  reduce using rule 27 (lexemes)


state 20

   25 lexemes: TOK_GOTO . TOK_IDENTIFIER

    TOK_IDENTIFIER  shift, and go to state 73


state 21

   28 lexemes: TOK_RETURN .

    $default  reduce using rule 28 (lexemes)


state 22

   44 struct_type: TOK_STRUCT .

    $default  reduce using rule 44 (struct_type)


state 23

   45 struct_type: TOK_UNION .

    $default  reduce using rule 45 (struct_type)


state 24

  103 switch_head: TOK_SWITCH . TOK_OPENPAR expr TOK_CLOSEPAR TOK_OPENBR

    TOK_OPENPAR  shift, and go to state 74


state 25

  100 const: TOK_STRING_LITERAL .

    $default  reduce using rule 100 (const)


state 26

    0 $accept: start . $end

    $end  shift, and go to state 75


state 27

    2 start: declaration_list . stmnt_list
    3      | declaration_list .
    7 declaration_list: declaration_list . declaration_block TOK_ENDEXPR

    TOK_IDENTIFIER      shift, and go to state 1
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_IF              shift, and go to state 4
    TOK_ENDEXPR         shift, and go to state 5
    TOK_OPENPAR         shift, and go to state 6
    TOK_ROM_DECL        shift, and go to state 7
    TOK_INT_DECL        shift, and go to state 8
    TOK_FLOAT_DECL      shift, and go to state 9
    TOK_FOR_DECL        shift, and go to state 10
    TOK_WHILE_DECL      shift, and go to state 11
    TOK_DO_DECL         shift, and go to state 12
    TOK_ROM_CONST       shift, and go to state 13
    TOK_INT_CONST       shift, and go to state 14
    TOK_FLOAT_CONST     shift, and go to state 15
    TOK_PRINT           shift, and go to state 16
    TOK_READ            shift, and go to state 17
    TOK_BREAK           shift, and go to state 18
    TOK_CONTINUE        shift, and go to state 19
    TOK_GOTO            shift, and go to state 20
    TOK_RETURN          shift, and go to state 21
    TOK_STRUCT          shift, and go to state 22
    TOK_UNION           shift, and go to state 23
    TOK_SWITCH          shift, and go to state 24
    TOK_STRING_LITERAL  shift, and go to state 25

    $default  reduce using rule 3 (start)

    stmnt_list            go to state 76
    expr_or_assignment    go to state 29
    expression_statement  go to state 30
    lexemes               go to state 31
    stmnt                 go to state 32
    declaration_block     go to state 77
    declaration_stmt      go to state 34
    struct_def            go to state 35
    struct_head           go to state 36
    struct_type           go to state 37
    print_stmt            go to state 38
    read_stmt             go to state 39
    if_stmt               go to state 40
    loop_decl             go to state 41
    for_decl              go to state 42
    while_decl            go to state 43
    do_while_decl         go to state 44
    type                  go to state 45
    type_name             go to state 46
    left_assign_expr      go to state 47
    assignment            go to state 48
    expr                  go to state 49
    struct_item           go to state 50
    identifier            go to state 51
    const                 go to state 52
    switch_stmt           go to state 53
    switch_head           go to state 54
    function_call         go to state 55
    function_def_head     go to state 56
    function_def          go to state 57


state 28

    4 start: stmnt_list .
    5      | stmnt_list . declaration_list
   10 stmnt_list: stmnt_list . stmnt

    TOK_IDENTIFIER      shift, and go to state 1
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_IF              shift, and go to state 4
    TOK_ENDEXPR         shift, and go to state 5
    TOK_OPENPAR         shift, and go to state 6
    TOK_ROM_DECL        shift, and go to state 7
    TOK_INT_DECL        shift, and go to state 8
    TOK_FLOAT_DECL      shift, and go to state 9
    TOK_FOR_DECL        shift, and go to state 10
    TOK_WHILE_DECL      shift, and go to state 11
    TOK_DO_DECL         shift, and go to state 12
    TOK_ROM_CONST       shift, and go to state 13
    TOK_INT_CONST       shift, and go to state 14
    TOK_FLOAT_CONST     shift, and go to state 15
    TOK_PRINT           shift, and go to state 16
    TOK_READ            shift, and go to state 17
    TOK_BREAK           shift, and go to state 18
    TOK_CONTINUE        shift, and go to state 19
    TOK_GOTO            shift, and go to state 20
    TOK_RETURN          shift, and go to state 21
    TOK_STRUCT          shift, and go to state 22
    TOK_UNION           shift, and go to state 23
    TOK_SWITCH          shift, and go to state 24
    TOK_STRING_LITERAL  shift, and go to state 25

    $default  reduce using rule 4 (start)

    declaration_list      go to state 78
    expr_or_assignment    go to state 29
    expression_statement  go to state 30
    lexemes               go to state 31
    stmnt                 go to state 79
    declaration_block     go to state 33
    declaration_stmt      go to state 34
    struct_def            go to state 35
    struct_head           go to state 36
    struct_type           go to state 37
    print_stmt            go to state 38
    read_stmt             go to state 39
    if_stmt               go to state 40
    loop_decl             go to state 41
    for_decl              go to state 42
    while_decl            go to state 43
    do_while_decl         go to state 44
    type                  go to state 45
    type_name             go to state 46
    left_assign_expr      go to state 47
    assignment            go to state 48
    expr                  go to state 49
    struct_item           go to state 50
    identifier            go to state 51
    const                 go to state 52
    switch_stmt           go to state 53
    switch_head           go to state 54
    function_call         go to state 55
    function_def_head     go to state 56
    function_def          go to state 57


state 29

   23 expression_statement: expr_or_assignment . TOK_ENDEXPR

    TOK_ENDEXPR  shift, and go to state 80


state 30

   30 stmnt: expression_statement .

    $default  reduce using rule 30 (stmnt)


state 31

   37 stmnt: lexemes . TOK_ENDEXPR
   38      | lexemes . error

    error        shift, and go to state 81
    TOK_ENDEXPR  shift, and go to state 82


state 32

    9 stmnt_list: stmnt .

    $default  reduce using rule 9 (stmnt_list)


state 33

    6 declaration_list: declaration_block . TOK_ENDEXPR
    8                 | declaration_block . error

    error        shift, and go to state 83
    TOK_ENDEXPR  shift, and go to state 84


state 34

   39 declaration_block: declaration_stmt .

    $default  reduce using rule 39 (declaration_block)


state 35

   40 declaration_block: struct_def .

    $default  reduce using rule 40 (declaration_block)


state 36

   42 struct_def: struct_head . struct_body struct_tail

    TOK_OPENBR  shift, and go to state 85

    struct_body  go to state 86


state 37

   43 struct_head: struct_type . TOK_IDENTIFIER
   71 type_name: struct_type . TOK_IDENTIFIER

    TOK_IDENTIFIER  shift, and go to state 87


state 38

   35 stmnt: print_stmt .

    $default  reduce using rule 35 (stmnt)


state 39

   36 stmnt: read_stmt .

    $default  reduce using rule 36 (stmnt)


state 40

   32 stmnt: if_stmt .

    $default  reduce using rule 32 (stmnt)


state 41

   33 stmnt: loop_decl .

    $default  reduce using rule 33 (stmnt)


state 42

   56 loop_decl: for_decl . loop_for_expr instruction_body

    TOK_OPENPAR  shift, and go to state 88

    loop_for_expr  go to state 89


state 43

   57 loop_decl: while_decl . loop_while_expr instruction_body

    TOK_OPENPAR  shift, and go to state 90

    loop_while_expr  go to state 91


state 44

   58 loop_decl: do_while_decl . instruction_body TOK_WHILE_DECL loop_while_expr TOK_ENDEXPR

    TOK_IDENTIFIER      shift, and go to state 1
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_IF              shift, and go to state 4
    TOK_ENDEXPR         shift, and go to state 5
    TOK_OPENPAR         shift, and go to state 6
    TOK_OPENBR          shift, and go to state 92
    TOK_ROM_DECL        shift, and go to state 7
    TOK_INT_DECL        shift, and go to state 8
    TOK_FLOAT_DECL      shift, and go to state 9
    TOK_FOR_DECL        shift, and go to state 10
    TOK_WHILE_DECL      shift, and go to state 11
    TOK_DO_DECL         shift, and go to state 12
    TOK_ROM_CONST       shift, and go to state 13
    TOK_INT_CONST       shift, and go to state 14
    TOK_FLOAT_CONST     shift, and go to state 15
    TOK_PRINT           shift, and go to state 16
    TOK_READ            shift, and go to state 17
    TOK_BREAK           shift, and go to state 18
    TOK_CONTINUE        shift, and go to state 19
    TOK_GOTO            shift, and go to state 20
    TOK_RETURN          shift, and go to state 21
    TOK_STRUCT          shift, and go to state 22
    TOK_UNION           shift, and go to state 23
    TOK_SWITCH          shift, and go to state 24
    TOK_STRING_LITERAL  shift, and go to state 25

    stmnt_block_start     go to state 93
    stmnt_block           go to state 94
    expr_or_assignment    go to state 29
    expression_statement  go to state 30
    lexemes               go to state 31
    stmnt                 go to state 95
    struct_type           go to state 96
    print_stmt            go to state 38
    read_stmt             go to state 39
    if_stmt               go to state 40
    loop_decl             go to state 41
    for_decl              go to state 42
    while_decl            go to state 43
    do_while_decl         go to state 44
    instruction_body      go to state 97
    type                  go to state 98
    type_name             go to state 46
    left_assign_expr      go to state 47
    assignment            go to state 48
    expr                  go to state 49
    struct_item           go to state 50
    identifier            go to state 51
    const                 go to state 52
    switch_stmt           go to state 53
    switch_head           go to state 54
    function_call         go to state 55
    function_def_head     go to state 56
    function_def          go to state 57


state 45

   41 declaration_stmt: type . TOK_IDENTIFIER
  120 function_def_head: type . TOK_IDENTIFIER

    TOK_IDENTIFIER  shift, and go to state 99


state 46

   67 type: type_name . array

    TOK_OPENSQ  shift, and go to state 59

    $default  reduce using rule 91 (array)

    array  go to state 100


state 47

   74 assignment: left_assign_expr . TOK_ASSIGN_OP expr
   75 expr: left_assign_expr .

    TOK_ASSIGN_OP  shift, and go to state 101

    $default  reduce using rule 75 (expr)


state 48

   21 expr_or_assignment: assignment .

    $default  reduce using rule 21 (expr_or_assignment)


state 49

   20 expr_or_assignment: expr .
   24 expression_statement: expr . error
   78 expr: expr . TOK_B_AND expr
   79     | expr . TOK_B_OR expr
   80     | expr . TOK_B_XOR expr
   83     | expr . TOK_AR_PLUS expr
   84     | expr . TOK_AR_MINUS expr
   85     | expr . TOK_AR_MUL expr
   86     | expr . TOK_AR_DIV expr
   87     | expr . TOK_AR_MOD expr
   88     | expr . TOK_COMP_OP expr

    error         shift, and go to state 102
    TOK_B_AND     shift, and go to state 103
    TOK_B_OR      shift, and go to state 104
    TOK_B_XOR     shift, and go to state 105
    TOK_AR_PLUS   shift, and go to state 106
    TOK_AR_MINUS  shift, and go to state 107
    TOK_AR_MUL    shift, and go to state 108
    TOK_AR_DIV    shift, and go to state 109
    TOK_AR_MOD    shift, and go to state 110
    TOK_COMP_OP   shift, and go to state 111

    TOK_ENDEXPR  reduce using rule 20 (expr_or_assignment)


state 50

   73 left_assign_expr: struct_item .

    $default  reduce using rule 73 (left_assign_expr)


state 51

   72 left_assign_expr: identifier .
   95 struct_item: identifier . TOK_DOT TOK_IDENTIFIER

    TOK_DOT  shift, and go to state 112

    $default  reduce using rule 72 (left_assign_expr)


state 52

   76 expr: const .

    $default  reduce using rule 76 (expr)


state 53

   34 stmnt: switch_stmt .

    $default  reduce using rule 34 (stmnt)


state 54

  101 switch_stmt: switch_head . case_list default TOK_CLOSEBR
  102            | switch_head . case_list TOK_CLOSEBR

    TOK_CASE  shift, and go to state 113

    case_list  go to state 114
    case_stmt  go to state 115
    case_head  go to state 116


state 55

   77 expr: function_call .

    $default  reduce using rule 77 (expr)


state 56

  121 function_def: function_def_head . declarator stmnt_block

    TOK_OPENPAR  shift, and go to state 58

    declarator  go to state 117


state 57

   29 stmnt: function_def .

    $default  reduce using rule 29 (stmnt)


state 58

  117 declarator: TOK_OPENPAR . parameter_type_list TOK_CLOSEPAR
  118           | TOK_OPENPAR . TOK_CLOSEPAR

    TOK_IDENTIFIER  shift, and go to state 118
    TOK_CLOSEPAR    shift, and go to state 119
    TOK_ROM_DECL    shift, and go to state 7
    TOK_INT_DECL    shift, and go to state 8
    TOK_FLOAT_DECL  shift, and go to state 9
    TOK_STRUCT      shift, and go to state 22
    TOK_UNION       shift, and go to state 23

    declaration_stmt     go to state 120
    struct_type          go to state 96
    type                 go to state 121
    type_name            go to state 46
    parameter            go to state 122
    parameter_list       go to state 123
    parameter_type_list  go to state 124


state 59

   92 array: TOK_OPENSQ . expr TOK_CLOSESQ array
   93      | TOK_OPENSQ . error
   94      | TOK_OPENSQ . expr error

    error               shift, and go to state 125
    TOK_IDENTIFIER      shift, and go to state 63
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_OPENPAR         shift, and go to state 6
    TOK_ROM_CONST       shift, and go to state 13
    TOK_INT_CONST       shift, and go to state 14
    TOK_FLOAT_CONST     shift, and go to state 15
    TOK_STRING_LITERAL  shift, and go to state 25

    left_assign_expr  go to state 64
    expr              go to state 126
    struct_item       go to state 50
    identifier        go to state 51
    const             go to state 52
    function_call     go to state 55


state 60

   31 stmnt: TOK_IDENTIFIER TOK_DOUBLEDOT .

    $default  reduce using rule 31 (stmnt)


state 61

   96 identifier: TOK_IDENTIFIER array .

    $default  reduce using rule 96 (identifier)


state 62

  119 function_call: TOK_IDENTIFIER declarator .

    $default  reduce using rule 119 (function_call)


state 63

   96 identifier: TOK_IDENTIFIER . array
  119 function_call: TOK_IDENTIFIER . declarator

    TOK_OPENPAR  shift, and go to state 58
    TOK_OPENSQ   shift, and go to state 59

    $default  reduce using rule 91 (array)

    array       go to state 61
    declarator  go to state 62


state 64

   75 expr: left_assign_expr .

    $default  reduce using rule 75 (expr)


state 65

   78 expr: expr . TOK_B_AND expr
   79     | expr . TOK_B_OR expr
   80     | expr . TOK_B_XOR expr
   81     | TOK_B_NOT expr .
   83     | expr . TOK_AR_PLUS expr
   84     | expr . TOK_AR_MINUS expr
   85     | expr . TOK_AR_MUL expr
   86     | expr . TOK_AR_DIV expr
   87     | expr . TOK_AR_MOD expr
   88     | expr . TOK_COMP_OP expr

    $default  reduce using rule 81 (expr)


state 66

   78 expr: expr . TOK_B_AND expr
   79     | expr . TOK_B_OR expr
   80     | expr . TOK_B_XOR expr
   82     | TOK_AR_MINUS expr .
   83     | expr . TOK_AR_PLUS expr
   84     | expr . TOK_AR_MINUS expr
   85     | expr . TOK_AR_MUL expr
   86     | expr . TOK_AR_DIV expr
   87     | expr . TOK_AR_MOD expr
   88     | expr . TOK_COMP_OP expr

    $default  reduce using rule 82 (expr)


state 67

   53 if_stmt: TOK_IF TOK_OPENPAR . expr TOK_CLOSEPAR instruction_body
   54        | TOK_IF TOK_OPENPAR . expr TOK_CLOSEPAR instruction_body TOK_ELSE instruction_body
   55        | TOK_IF TOK_OPENPAR . expr error

    TOK_IDENTIFIER      shift, and go to state 63
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_OPENPAR         shift, and go to state 6
    TOK_ROM_CONST       shift, and go to state 13
    TOK_INT_CONST       shift, and go to state 14
    TOK_FLOAT_CONST     shift, and go to state 15
    TOK_STRING_LITERAL  shift, and go to state 25

    left_assign_expr  go to state 64
    expr              go to state 127
    struct_item       go to state 50
    identifier        go to state 51
    const             go to state 52
    function_call     go to state 55


state 68

   78 expr: expr . TOK_B_AND expr
   79     | expr . TOK_B_OR expr
   80     | expr . TOK_B_XOR expr
   83     | expr . TOK_AR_PLUS expr
   84     | expr . TOK_AR_MINUS expr
   85     | expr . TOK_AR_MUL expr
   86     | expr . TOK_AR_DIV expr
   87     | expr . TOK_AR_MOD expr
   88     | expr . TOK_COMP_OP expr
   89     | TOK_OPENPAR expr . error
   90     | TOK_OPENPAR expr . TOK_CLOSEPAR

    error         shift, and go to state 128
    TOK_B_AND     shift, and go to state 103
    TOK_B_OR      shift, and go to state 104
    TOK_B_XOR     shift, and go to state 105
    TOK_AR_PLUS   shift, and go to state 106
    TOK_AR_MINUS  shift, and go to state 107
    TOK_AR_MUL    shift, and go to state 108
    TOK_AR_DIV    shift, and go to state 109
    TOK_AR_MOD    shift, and go to state 110
    TOK_COMP_OP   shift, and go to state 111
    TOK_CLOSEPAR  shift, and go to state 129


state 69

   49 print_stmt: TOK_PRINT error .

    $default  reduce using rule 49 (print_stmt)


state 70

   48 print_stmt: TOK_PRINT TOK_OPENPAR . expr TOK_CLOSEPAR TOK_ENDEXPR

    TOK_IDENTIFIER      shift, and go to state 63
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_OPENPAR         shift, and go to state 6
    TOK_ROM_CONST       shift, and go to state 13
    TOK_INT_CONST       shift, and go to state 14
    TOK_FLOAT_CONST     shift, and go to state 15
    TOK_STRING_LITERAL  shift, and go to state 25

    left_assign_expr  go to state 64
    expr              go to state 130
    struct_item       go to state 50
    identifier        go to state 51
    const             go to state 52
    function_call     go to state 55


state 71

   50 print_stmt: TOK_PRINT '(' . expr error
   51           | TOK_PRINT '(' . expr ')' error

    TOK_IDENTIFIER      shift, and go to state 63
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_OPENPAR         shift, and go to state 6
    TOK_ROM_CONST       shift, and go to state 13
    TOK_INT_CONST       shift, and go to state 14
    TOK_FLOAT_CONST     shift, and go to state 15
    TOK_STRING_LITERAL  shift, and go to state 25

    left_assign_expr  go to state 64
    expr              go to state 131
    struct_item       go to state 50
    identifier        go to state 51
    const             go to state 52
    function_call     go to state 55


state 72

   52 read_stmt: TOK_READ TOK_OPENPAR . left_assign_expr TOK_CLOSEPAR TOK_ENDEXPR

    TOK_IDENTIFIER  shift, and go to state 132

    left_assign_expr  go to state 133
    struct_item       go to state 50
    identifier        go to state 51


state 73

   25 lexemes: TOK_GOTO TOK_IDENTIFIER .

    $default  reduce using rule 25 (lexemes)


state 74

  103 switch_head: TOK_SWITCH TOK_OPENPAR . expr TOK_CLOSEPAR TOK_OPENBR

    TOK_IDENTIFIER      shift, and go to state 63
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_OPENPAR         shift, and go to state 6
    TOK_ROM_CONST       shift, and go to state 13
    TOK_INT_CONST       shift, and go to state 14
    TOK_FLOAT_CONST     shift, and go to state 15
    TOK_STRING_LITERAL  shift, and go to state 25

    left_assign_expr  go to state 64
    expr              go to state 134
    struct_item       go to state 50
    identifier        go to state 51
    const             go to state 52
    function_call     go to state 55


state 75

    0 $accept: start $end .

    $default  accept


state 76

    2 start: declaration_list stmnt_list .
   10 stmnt_list: stmnt_list . stmnt

    TOK_IDENTIFIER      shift, and go to state 1
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_IF              shift, and go to state 4
    TOK_ENDEXPR         shift, and go to state 5
    TOK_OPENPAR         shift, and go to state 6
    TOK_ROM_DECL        shift, and go to state 7
    TOK_INT_DECL        shift, and go to state 8
    TOK_FLOAT_DECL      shift, and go to state 9
    TOK_FOR_DECL        shift, and go to state 10
    TOK_WHILE_DECL      shift, and go to state 11
    TOK_DO_DECL         shift, and go to state 12
    TOK_ROM_CONST       shift, and go to state 13
    TOK_INT_CONST       shift, and go to state 14
    TOK_FLOAT_CONST     shift, and go to state 15
    TOK_PRINT           shift, and go to state 16
    TOK_READ            shift, and go to state 17
    TOK_BREAK           shift, and go to state 18
    TOK_CONTINUE        shift, and go to state 19
    TOK_GOTO            shift, and go to state 20
    TOK_RETURN          shift, and go to state 21
    TOK_STRUCT          shift, and go to state 22
    TOK_UNION           shift, and go to state 23
    TOK_SWITCH          shift, and go to state 24
    TOK_STRING_LITERAL  shift, and go to state 25

    $default  reduce using rule 2 (start)

    expr_or_assignment    go to state 29
    expression_statement  go to state 30
    lexemes               go to state 31
    stmnt                 go to state 79
    struct_type           go to state 96
    print_stmt            go to state 38
    read_stmt             go to state 39
    if_stmt               go to state 40
    loop_decl             go to state 41
    for_decl              go to state 42
    while_decl            go to state 43
    do_while_decl         go to state 44
    type                  go to state 98
    type_name             go to state 46
    left_assign_expr      go to state 47
    assignment            go to state 48
    expr                  go to state 49
    struct_item           go to state 50
    identifier            go to state 51
    const                 go to state 52
    switch_stmt           go to state 53
    switch_head           go to state 54
    function_call         go to state 55
    function_def_head     go to state 56
    function_def          go to state 57


state 77

    7 declaration_list: declaration_list declaration_block . TOK_ENDEXPR

    TOK_ENDEXPR  shift, and go to state 135


state 78

    5 start: stmnt_list declaration_list .
    7 declaration_list: declaration_list . declaration_block TOK_ENDEXPR

    TOK_ROM_DECL    shift, and go to state 7
    TOK_INT_DECL    shift, and go to state 8
    TOK_FLOAT_DECL  shift, and go to state 9
    TOK_STRUCT      shift, and go to state 22
    TOK_UNION       shift, and go to state 23

    $default  reduce using rule 5 (start)

    declaration_block  go to state 77
    declaration_stmt   go to state 34
    struct_def         go to state 35
    struct_head        go to state 36
    struct_type        go to state 37
    type               go to state 121
    type_name          go to state 46


state 79

   10 stmnt_list: stmnt_list stmnt .

    $default  reduce using rule 10 (stmnt_list)


state 80

   23 expression_statement: expr_or_assignment TOK_ENDEXPR .

    $default  reduce using rule 23 (expression_statement)


state 81

   38 stmnt: lexemes error .

    $default  reduce using rule 38 (stmnt)


state 82

   37 stmnt: lexemes TOK_ENDEXPR .

    $default  reduce using rule 37 (stmnt)


state 83

    8 declaration_list: declaration_block error .

    $default  reduce using rule 8 (declaration_list)


state 84

    6 declaration_list: declaration_block TOK_ENDEXPR .

    $default  reduce using rule 6 (declaration_list)


state 85

   46 struct_body: TOK_OPENBR . declaration_list

    TOK_ROM_DECL    shift, and go to state 7
    TOK_INT_DECL    shift, and go to state 8
    TOK_FLOAT_DECL  shift, and go to state 9
    TOK_STRUCT      shift, and go to state 22
    TOK_UNION       shift, and go to state 23

    declaration_list   go to state 136
    declaration_block  go to state 33
    declaration_stmt   go to state 34
    struct_def         go to state 35
    struct_head        go to state 36
    struct_type        go to state 37
    type               go to state 121
    type_name          go to state 46


state 86

   42 struct_def: struct_head struct_body . struct_tail

    TOK_CLOSEBR  shift, and go to state 137

    struct_tail  go to state 138


state 87

   43 struct_head: struct_type TOK_IDENTIFIER .
   71 type_name: struct_type TOK_IDENTIFIER .

    TOK_OPENBR  reduce using rule 43 (struct_head)
    $default    reduce using rule 71 (type_name)


state 88

   60 loop_for_expr: TOK_OPENPAR . expression_statement expression_statement TOK_CLOSEPAR
   61              | TOK_OPENPAR . expression_statement expression_statement expr_or_assignment TOK_CLOSEPAR

    TOK_IDENTIFIER      shift, and go to state 63
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_ENDEXPR         shift, and go to state 5
    TOK_OPENPAR         shift, and go to state 6
    TOK_ROM_CONST       shift, and go to state 13
    TOK_INT_CONST       shift, and go to state 14
    TOK_FLOAT_CONST     shift, and go to state 15
    TOK_STRING_LITERAL  shift, and go to state 25

    expr_or_assignment    go to state 29
    expression_statement  go to state 139
    left_assign_expr      go to state 47
    assignment            go to state 48
    expr                  go to state 49
    struct_item           go to state 50
    identifier            go to state 51
    const                 go to state 52
    function_call         go to state 55


state 89

   56 loop_decl: for_decl loop_for_expr . instruction_body

    TOK_IDENTIFIER      shift, and go to state 1
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_IF              shift, and go to state 4
    TOK_ENDEXPR         shift, and go to state 5
    TOK_OPENPAR         shift, and go to state 6
    TOK_OPENBR          shift, and go to state 92
    TOK_ROM_DECL        shift, and go to state 7
    TOK_INT_DECL        shift, and go to state 8
    TOK_FLOAT_DECL      shift, and go to state 9
    TOK_FOR_DECL        shift, and go to state 10
    TOK_WHILE_DECL      shift, and go to state 11
    TOK_DO_DECL         shift, and go to state 12
    TOK_ROM_CONST       shift, and go to state 13
    TOK_INT_CONST       shift, and go to state 14
    TOK_FLOAT_CONST     shift, and go to state 15
    TOK_PRINT           shift, and go to state 16
    TOK_READ            shift, and go to state 17
    TOK_BREAK           shift, and go to state 18
    TOK_CONTINUE        shift, and go to state 19
    TOK_GOTO            shift, and go to state 20
    TOK_RETURN          shift, and go to state 21
    TOK_STRUCT          shift, and go to state 22
    TOK_UNION           shift, and go to state 23
    TOK_SWITCH          shift, and go to state 24
    TOK_STRING_LITERAL  shift, and go to state 25

    stmnt_block_start     go to state 93
    stmnt_block           go to state 94
    expr_or_assignment    go to state 29
    expression_statement  go to state 30
    lexemes               go to state 31
    stmnt                 go to state 95
    struct_type           go to state 96
    print_stmt            go to state 38
    read_stmt             go to state 39
    if_stmt               go to state 40
    loop_decl             go to state 41
    for_decl              go to state 42
    while_decl            go to state 43
    do_while_decl         go to state 44
    instruction_body      go to state 140
    type                  go to state 98
    type_name             go to state 46
    left_assign_expr      go to state 47
    assignment            go to state 48
    expr                  go to state 49
    struct_item           go to state 50
    identifier            go to state 51
    const                 go to state 52
    switch_stmt           go to state 53
    switch_head           go to state 54
    function_call         go to state 55
    function_def_head     go to state 56
    function_def          go to state 57


state 90

   59 loop_while_expr: TOK_OPENPAR . expr TOK_CLOSEPAR

    TOK_IDENTIFIER      shift, and go to state 63
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_OPENPAR         shift, and go to state 6
    TOK_ROM_CONST       shift, and go to state 13
    TOK_INT_CONST       shift, and go to state 14
    TOK_FLOAT_CONST     shift, and go to state 15
    TOK_STRING_LITERAL  shift, and go to state 25

    left_assign_expr  go to state 64
    expr              go to state 141
    struct_item       go to state 50
    identifier        go to state 51
    const             go to state 52
    function_call     go to state 55


state 91

   57 loop_decl: while_decl loop_while_expr . instruction_body

    TOK_IDENTIFIER      shift, and go to state 1
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_IF              shift, and go to state 4
    TOK_ENDEXPR         shift, and go to state 5
    TOK_OPENPAR         shift, and go to state 6
    TOK_OPENBR          shift, and go to state 92
    TOK_ROM_DECL        shift, and go to state 7
    TOK_INT_DECL        shift, and go to state 8
    TOK_FLOAT_DECL      shift, and go to state 9
    TOK_FOR_DECL        shift, and go to state 10
    TOK_WHILE_DECL      shift, and go to state 11
    TOK_DO_DECL         shift, and go to state 12
    TOK_ROM_CONST       shift, and go to state 13
    TOK_INT_CONST       shift, and go to state 14
    TOK_FLOAT_CONST     shift, and go to state 15
    TOK_PRINT           shift, and go to state 16
    TOK_READ            shift, and go to state 17
    TOK_BREAK           shift, and go to state 18
    TOK_CONTINUE        shift, and go to state 19
    TOK_GOTO            shift, and go to state 20
    TOK_RETURN          shift, and go to state 21
    TOK_STRUCT          shift, and go to state 22
    TOK_UNION           shift, and go to state 23
    TOK_SWITCH          shift, and go to state 24
    TOK_STRING_LITERAL  shift, and go to state 25

    stmnt_block_start     go to state 93
    stmnt_block           go to state 94
    expr_or_assignment    go to state 29
    expression_statement  go to state 30
    lexemes               go to state 31
    stmnt                 go to state 95
    struct_type           go to state 96
    print_stmt            go to state 38
    read_stmt             go to state 39
    if_stmt               go to state 40
    loop_decl             go to state 41
    for_decl              go to state 42
    while_decl            go to state 43
    do_while_decl         go to state 44
    instruction_body      go to state 142
    type                  go to state 98
    type_name             go to state 46
    left_assign_expr      go to state 47
    assignment            go to state 48
    expr                  go to state 49
    struct_item           go to state 50
    identifier            go to state 51
    const                 go to state 52
    switch_stmt           go to state 53
    switch_head           go to state 54
    function_call         go to state 55
    function_def_head     go to state 56
    function_def          go to state 57


state 92

   12 stmnt_block_start: TOK_OPENBR . $@1

    $default  reduce using rule 11 ($@1)

    $@1  go to state 143


state 93

   14 stmnt_block: stmnt_block_start . stmnt_list TOK_CLOSEBR $@2
   15            | stmnt_block_start . stmnt_list error
   17            | stmnt_block_start . declaration_list TOK_CLOSEBR $@3
   19            | stmnt_block_start . declaration_list stmnt_list TOK_CLOSEBR $@4

    TOK_IDENTIFIER      shift, and go to state 1
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_IF              shift, and go to state 4
    TOK_ENDEXPR         shift, and go to state 5
    TOK_OPENPAR         shift, and go to state 6
    TOK_ROM_DECL        shift, and go to state 7
    TOK_INT_DECL        shift, and go to state 8
    TOK_FLOAT_DECL      shift, and go to state 9
    TOK_FOR_DECL        shift, and go to state 10
    TOK_WHILE_DECL      shift, and go to state 11
    TOK_DO_DECL         shift, and go to state 12
    TOK_ROM_CONST       shift, and go to state 13
    TOK_INT_CONST       shift, and go to state 14
    TOK_FLOAT_CONST     shift, and go to state 15
    TOK_PRINT           shift, and go to state 16
    TOK_READ            shift, and go to state 17
    TOK_BREAK           shift, and go to state 18
    TOK_CONTINUE        shift, and go to state 19
    TOK_GOTO            shift, and go to state 20
    TOK_RETURN          shift, and go to state 21
    TOK_STRUCT          shift, and go to state 22
    TOK_UNION           shift, and go to state 23
    TOK_SWITCH          shift, and go to state 24
    TOK_STRING_LITERAL  shift, and go to state 25

    declaration_list      go to state 144
    stmnt_list            go to state 145
    expr_or_assignment    go to state 29
    expression_statement  go to state 30
    lexemes               go to state 31
    stmnt                 go to state 32
    declaration_block     go to state 33
    declaration_stmt      go to state 34
    struct_def            go to state 35
    struct_head           go to state 36
    struct_type           go to state 37
    print_stmt            go to state 38
    read_stmt             go to state 39
    if_stmt               go to state 40
    loop_decl             go to state 41
    for_decl              go to state 42
    while_decl            go to state 43
    do_while_decl         go to state 44
    type                  go to state 45
    type_name             go to state 46
    left_assign_expr      go to state 47
    assignment            go to state 48
    expr                  go to state 49
    struct_item           go to state 50
    identifier            go to state 51
    const                 go to state 52
    switch_stmt           go to state 53
    switch_head           go to state 54
    function_call         go to state 55
    function_def_head     go to state 56
    function_def          go to state 57


state 94

   65 instruction_body: stmnt_block .

    $default  reduce using rule 65 (instruction_body)


state 95

   66 instruction_body: stmnt .

    $default  reduce using rule 66 (instruction_body)


state 96

   71 type_name: struct_type . TOK_IDENTIFIER

    TOK_IDENTIFIER  shift, and go to state 146


state 97

   58 loop_decl: do_while_decl instruction_body . TOK_WHILE_DECL loop_while_expr TOK_ENDEXPR

    TOK_WHILE_DECL  shift, and go to state 147


state 98

  120 function_def_head: type . TOK_IDENTIFIER

    TOK_IDENTIFIER  shift, and go to state 148


state 99

   41 declaration_stmt: type TOK_IDENTIFIER .
  120 function_def_head: type TOK_IDENTIFIER .

    TOK_OPENPAR  reduce using rule 120 (function_def_head)
    $default     reduce using rule 41 (declaration_stmt)


state 100

   67 type: type_name array .

    $default  reduce using rule 67 (type)


state 101

   74 assignment: left_assign_expr TOK_ASSIGN_OP . expr

    TOK_IDENTIFIER      shift, and go to state 63
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_OPENPAR         shift, and go to state 6
    TOK_ROM_CONST       shift, and go to state 13
    TOK_INT_CONST       shift, and go to state 14
    TOK_FLOAT_CONST     shift, and go to state 15
    TOK_STRING_LITERAL  shift, and go to state 25

    left_assign_expr  go to state 64
    expr              go to state 149
    struct_item       go to state 50
    identifier        go to state 51
    const             go to state 52
    function_call     go to state 55


state 102

   24 expression_statement: expr error .

    $default  reduce using rule 24 (expression_statement)


state 103

   78 expr: expr TOK_B_AND . expr

    TOK_IDENTIFIER      shift, and go to state 63
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_OPENPAR         shift, and go to state 6
    TOK_ROM_CONST       shift, and go to state 13
    TOK_INT_CONST       shift, and go to state 14
    TOK_FLOAT_CONST     shift, and go to state 15
    TOK_STRING_LITERAL  shift, and go to state 25

    left_assign_expr  go to state 64
    expr              go to state 150
    struct_item       go to state 50
    identifier        go to state 51
    const             go to state 52
    function_call     go to state 55


state 104

   79 expr: expr TOK_B_OR . expr

    TOK_IDENTIFIER      shift, and go to state 63
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_OPENPAR         shift, and go to state 6
    TOK_ROM_CONST       shift, and go to state 13
    TOK_INT_CONST       shift, and go to state 14
    TOK_FLOAT_CONST     shift, and go to state 15
    TOK_STRING_LITERAL  shift, and go to state 25

    left_assign_expr  go to state 64
    expr              go to state 151
    struct_item       go to state 50
    identifier        go to state 51
    const             go to state 52
    function_call     go to state 55


state 105

   80 expr: expr TOK_B_XOR . expr

    TOK_IDENTIFIER      shift, and go to state 63
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_OPENPAR         shift, and go to state 6
    TOK_ROM_CONST       shift, and go to state 13
    TOK_INT_CONST       shift, and go to state 14
    TOK_FLOAT_CONST     shift, and go to state 15
    TOK_STRING_LITERAL  shift, and go to state 25

    left_assign_expr  go to state 64
    expr              go to state 152
    struct_item       go to state 50
    identifier        go to state 51
    const             go to state 52
    function_call     go to state 55


state 106

   83 expr: expr TOK_AR_PLUS . expr

    TOK_IDENTIFIER      shift, and go to state 63
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_OPENPAR         shift, and go to state 6
    TOK_ROM_CONST       shift, and go to state 13
    TOK_INT_CONST       shift, and go to state 14
    TOK_FLOAT_CONST     shift, and go to state 15
    TOK_STRING_LITERAL  shift, and go to state 25

    left_assign_expr  go to state 64
    expr              go to state 153
    struct_item       go to state 50
    identifier        go to state 51
    const             go to state 52
    function_call     go to state 55


state 107

   84 expr: expr TOK_AR_MINUS . expr

    TOK_IDENTIFIER      shift, and go to state 63
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_OPENPAR         shift, and go to state 6
    TOK_ROM_CONST       shift, and go to state 13
    TOK_INT_CONST       shift, and go to state 14
    TOK_FLOAT_CONST     shift, and go to state 15
    TOK_STRING_LITERAL  shift, and go to state 25

    left_assign_expr  go to state 64
    expr              go to state 154
    struct_item       go to state 50
    identifier        go to state 51
    const             go to state 52
    function_call     go to state 55


state 108

   85 expr: expr TOK_AR_MUL . expr

    TOK_IDENTIFIER      shift, and go to state 63
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_OPENPAR         shift, and go to state 6
    TOK_ROM_CONST       shift, and go to state 13
    TOK_INT_CONST       shift, and go to state 14
    TOK_FLOAT_CONST     shift, and go to state 15
    TOK_STRING_LITERAL  shift, and go to state 25

    left_assign_expr  go to state 64
    expr              go to state 155
    struct_item       go to state 50
    identifier        go to state 51
    const             go to state 52
    function_call     go to state 55


state 109

   86 expr: expr TOK_AR_DIV . expr

    TOK_IDENTIFIER      shift, and go to state 63
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_OPENPAR         shift, and go to state 6
    TOK_ROM_CONST       shift, and go to state 13
    TOK_INT_CONST       shift, and go to state 14
    TOK_FLOAT_CONST     shift, and go to state 15
    TOK_STRING_LITERAL  shift, and go to state 25

    left_assign_expr  go to state 64
    expr              go to state 156
    struct_item       go to state 50
    identifier        go to state 51
    const             go to state 52
    function_call     go to state 55


state 110

   87 expr: expr TOK_AR_MOD . expr

    TOK_IDENTIFIER      shift, and go to state 63
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_OPENPAR         shift, and go to state 6
    TOK_ROM_CONST       shift, and go to state 13
    TOK_INT_CONST       shift, and go to state 14
    TOK_FLOAT_CONST     shift, and go to state 15
    TOK_STRING_LITERAL  shift, and go to state 25

    left_assign_expr  go to state 64
    expr              go to state 157
    struct_item       go to state 50
    identifier        go to state 51
    const             go to state 52
    function_call     go to state 55


state 111

   88 expr: expr TOK_COMP_OP . expr

    TOK_IDENTIFIER      shift, and go to state 63
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_OPENPAR         shift, and go to state 6
    TOK_ROM_CONST       shift, and go to state 13
    TOK_INT_CONST       shift, and go to state 14
    TOK_FLOAT_CONST     shift, and go to state 15
    TOK_STRING_LITERAL  shift, and go to state 25

    left_assign_expr  go to state 64
    expr              go to state 158
    struct_item       go to state 50
    identifier        go to state 51
    const             go to state 52
    function_call     go to state 55


state 112

   95 struct_item: identifier TOK_DOT . TOK_IDENTIFIER

    TOK_IDENTIFIER  shift, and go to state 159


state 113

  107 case_head: TOK_CASE . expr TOK_DOUBLEDOT

    TOK_IDENTIFIER      shift, and go to state 63
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_OPENPAR         shift, and go to state 6
    TOK_ROM_CONST       shift, and go to state 13
    TOK_INT_CONST       shift, and go to state 14
    TOK_FLOAT_CONST     shift, and go to state 15
    TOK_STRING_LITERAL  shift, and go to state 25

    left_assign_expr  go to state 64
    expr              go to state 160
    struct_item       go to state 50
    identifier        go to state 51
    const             go to state 52
    function_call     go to state 55


state 114

  101 switch_stmt: switch_head case_list . default TOK_CLOSEBR
  102            | switch_head case_list . TOK_CLOSEBR

    TOK_CLOSEBR  shift, and go to state 161
    TOK_DEFAULT  shift, and go to state 162

    default       go to state 163
    default_head  go to state 164


state 115

  104 case_list: case_stmt .
  105          | case_stmt . case_list

    TOK_CASE  shift, and go to state 113

    $default  reduce using rule 104 (case_list)

    case_list  go to state 165
    case_stmt  go to state 115
    case_head  go to state 116


state 116

  106 case_stmt: case_head . case_body

    TOK_IDENTIFIER      shift, and go to state 1
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_IF              shift, and go to state 4
    TOK_ENDEXPR         shift, and go to state 5
    TOK_OPENPAR         shift, and go to state 6
    TOK_OPENBR          shift, and go to state 92
    TOK_ROM_DECL        shift, and go to state 7
    TOK_INT_DECL        shift, and go to state 8
    TOK_FLOAT_DECL      shift, and go to state 9
    TOK_FOR_DECL        shift, and go to state 10
    TOK_WHILE_DECL      shift, and go to state 11
    TOK_DO_DECL         shift, and go to state 12
    TOK_ROM_CONST       shift, and go to state 13
    TOK_INT_CONST       shift, and go to state 14
    TOK_FLOAT_CONST     shift, and go to state 15
    TOK_PRINT           shift, and go to state 16
    TOK_READ            shift, and go to state 17
    TOK_BREAK           shift, and go to state 18
    TOK_CONTINUE        shift, and go to state 19
    TOK_GOTO            shift, and go to state 20
    TOK_RETURN          shift, and go to state 21
    TOK_STRUCT          shift, and go to state 22
    TOK_UNION           shift, and go to state 23
    TOK_SWITCH          shift, and go to state 24
    TOK_CASE            shift, and go to state 113
    TOK_STRING_LITERAL  shift, and go to state 25

    stmnt_block_start     go to state 93
    stmnt_block           go to state 94
    expr_or_assignment    go to state 29
    expression_statement  go to state 30
    lexemes               go to state 31
    stmnt                 go to state 95
    struct_type           go to state 96
    print_stmt            go to state 38
    read_stmt             go to state 39
    if_stmt               go to state 40
    loop_decl             go to state 41
    for_decl              go to state 42
    while_decl            go to state 43
    do_while_decl         go to state 44
    instruction_body      go to state 166
    type                  go to state 98
    type_name             go to state 46
    left_assign_expr      go to state 47
    assignment            go to state 48
    expr                  go to state 49
    struct_item           go to state 50
    identifier            go to state 51
    const                 go to state 52
    switch_stmt           go to state 53
    switch_head           go to state 54
    case_stmt             go to state 167
    case_head             go to state 116
    case_body             go to state 168
    function_call         go to state 55
    function_def_head     go to state 56
    function_def          go to state 57


state 117

  121 function_def: function_def_head declarator . stmnt_block

    TOK_OPENBR  shift, and go to state 92

    stmnt_block_start  go to state 93
    stmnt_block        go to state 169


state 118

  113 parameter: TOK_IDENTIFIER .

    $default  reduce using rule 113 (parameter)


state 119

  118 declarator: TOK_OPENPAR TOK_CLOSEPAR .

    $default  reduce using rule 118 (declarator)


state 120

  112 parameter: declaration_stmt .

    $default  reduce using rule 112 (parameter)


state 121

   41 declaration_stmt: type . TOK_IDENTIFIER

    TOK_IDENTIFIER  shift, and go to state 170


state 122

  114 parameter_list: parameter .

    $default  reduce using rule 114 (parameter_list)


state 123

  115 parameter_list: parameter_list . TOK_COMMA parameter
  116 parameter_type_list: parameter_list .

    TOK_COMMA  shift, and go to state 171

    $default  reduce using rule 116 (parameter_type_list)


state 124

  117 declarator: TOK_OPENPAR parameter_type_list . TOK_CLOSEPAR

    TOK_CLOSEPAR  shift, and go to state 172


state 125

   93 array: TOK_OPENSQ error .

    $default  reduce using rule 93 (array)


state 126

   78 expr: expr . TOK_B_AND expr
   79     | expr . TOK_B_OR expr
   80     | expr . TOK_B_XOR expr
   83     | expr . TOK_AR_PLUS expr
   84     | expr . TOK_AR_MINUS expr
   85     | expr . TOK_AR_MUL expr
   86     | expr . TOK_AR_DIV expr
   87     | expr . TOK_AR_MOD expr
   88     | expr . TOK_COMP_OP expr
   92 array: TOK_OPENSQ expr . TOK_CLOSESQ array
   94      | TOK_OPENSQ expr . error

    error         shift, and go to state 173
    TOK_B_AND     shift, and go to state 103
    TOK_B_OR      shift, and go to state 104
    TOK_B_XOR     shift, and go to state 105
    TOK_AR_PLUS   shift, and go to state 106
    TOK_AR_MINUS  shift, and go to state 107
    TOK_AR_MUL    shift, and go to state 108
    TOK_AR_DIV    shift, and go to state 109
    TOK_AR_MOD    shift, and go to state 110
    TOK_COMP_OP   shift, and go to state 111
    TOK_CLOSESQ   shift, and go to state 174


state 127

   53 if_stmt: TOK_IF TOK_OPENPAR expr . TOK_CLOSEPAR instruction_body
   54        | TOK_IF TOK_OPENPAR expr . TOK_CLOSEPAR instruction_body TOK_ELSE instruction_body
   55        | TOK_IF TOK_OPENPAR expr . error
   78 expr: expr . TOK_B_AND expr
   79     | expr . TOK_B_OR expr
   80     | expr . TOK_B_XOR expr
   83     | expr . TOK_AR_PLUS expr
   84     | expr . TOK_AR_MINUS expr
   85     | expr . TOK_AR_MUL expr
   86     | expr . TOK_AR_DIV expr
   87     | expr . TOK_AR_MOD expr
   88     | expr . TOK_COMP_OP expr

    error         shift, and go to state 175
    TOK_B_AND     shift, and go to state 103
    TOK_B_OR      shift, and go to state 104
    TOK_B_XOR     shift, and go to state 105
    TOK_AR_PLUS   shift, and go to state 106
    TOK_AR_MINUS  shift, and go to state 107
    TOK_AR_MUL    shift, and go to state 108
    TOK_AR_DIV    shift, and go to state 109
    TOK_AR_MOD    shift, and go to state 110
    TOK_COMP_OP   shift, and go to state 111
    TOK_CLOSEPAR  shift, and go to state 176


state 128

   89 expr: TOK_OPENPAR expr error .

    $default  reduce using rule 89 (expr)


state 129

   90 expr: TOK_OPENPAR expr TOK_CLOSEPAR .

    $default  reduce using rule 90 (expr)


state 130

   48 print_stmt: TOK_PRINT TOK_OPENPAR expr . TOK_CLOSEPAR TOK_ENDEXPR
   78 expr: expr . TOK_B_AND expr
   79     | expr . TOK_B_OR expr
   80     | expr . TOK_B_XOR expr
   83     | expr . TOK_AR_PLUS expr
   84     | expr . TOK_AR_MINUS expr
   85     | expr . TOK_AR_MUL expr
   86     | expr . TOK_AR_DIV expr
   87     | expr . TOK_AR_MOD expr
   88     | expr . TOK_COMP_OP expr

    TOK_B_AND     shift, and go to state 103
    TOK_B_OR      shift, and go to state 104
    TOK_B_XOR     shift, and go to state 105
    TOK_AR_PLUS   shift, and go to state 106
    TOK_AR_MINUS  shift, and go to state 107
    TOK_AR_MUL    shift, and go to state 108
    TOK_AR_DIV    shift, and go to state 109
    TOK_AR_MOD    shift, and go to state 110
    TOK_COMP_OP   shift, and go to state 111
    TOK_CLOSEPAR  shift, and go to state 177


state 131

   50 print_stmt: TOK_PRINT '(' expr . error
   51           | TOK_PRINT '(' expr . ')' error
   78 expr: expr . TOK_B_AND expr
   79     | expr . TOK_B_OR expr
   80     | expr . TOK_B_XOR expr
   83     | expr . TOK_AR_PLUS expr
   84     | expr . TOK_AR_MINUS expr
   85     | expr . TOK_AR_MUL expr
   86     | expr . TOK_AR_DIV expr
   87     | expr . TOK_AR_MOD expr
   88     | expr . TOK_COMP_OP expr

    error         shift, and go to state 178
    TOK_B_AND     shift, and go to state 103
    TOK_B_OR      shift, and go to state 104
    TOK_B_XOR     shift, and go to state 105
    TOK_AR_PLUS   shift, and go to state 106
    TOK_AR_MINUS  shift, and go to state 107
    TOK_AR_MUL    shift, and go to state 108
    TOK_AR_DIV    shift, and go to state 109
    TOK_AR_MOD    shift, and go to state 110
    TOK_COMP_OP   shift, and go to state 111
    ')'           shift, and go to state 179


state 132

   96 identifier: TOK_IDENTIFIER . array

    TOK_OPENSQ  shift, and go to state 59

    $default  reduce using rule 91 (array)

    array  go to state 61


state 133

   52 read_stmt: TOK_READ TOK_OPENPAR left_assign_expr . TOK_CLOSEPAR TOK_ENDEXPR

    TOK_CLOSEPAR  shift, and go to state 180


state 134

   78 expr: expr . TOK_B_AND expr
   79     | expr . TOK_B_OR expr
   80     | expr . TOK_B_XOR expr
   83     | expr . TOK_AR_PLUS expr
   84     | expr . TOK_AR_MINUS expr
   85     | expr . TOK_AR_MUL expr
   86     | expr . TOK_AR_DIV expr
   87     | expr . TOK_AR_MOD expr
   88     | expr . TOK_COMP_OP expr
  103 switch_head: TOK_SWITCH TOK_OPENPAR expr . TOK_CLOSEPAR TOK_OPENBR

    TOK_B_AND     shift, and go to state 103
    TOK_B_OR      shift, and go to state 104
    TOK_B_XOR     shift, and go to state 105
    TOK_AR_PLUS   shift, and go to state 106
    TOK_AR_MINUS  shift, and go to state 107
    TOK_AR_MUL    shift, and go to state 108
    TOK_AR_DIV    shift, and go to state 109
    TOK_AR_MOD    shift, and go to state 110
    TOK_COMP_OP   shift, and go to state 111
    TOK_CLOSEPAR  shift, and go to state 181


state 135

    7 declaration_list: declaration_list declaration_block TOK_ENDEXPR .

    $default  reduce using rule 7 (declaration_list)


state 136

    7 declaration_list: declaration_list . declaration_block TOK_ENDEXPR
   46 struct_body: TOK_OPENBR declaration_list .

    TOK_ROM_DECL    shift, and go to state 7
    TOK_INT_DECL    shift, and go to state 8
    TOK_FLOAT_DECL  shift, and go to state 9
    TOK_STRUCT      shift, and go to state 22
    TOK_UNION       shift, and go to state 23

    $default  reduce using rule 46 (struct_body)

    declaration_block  go to state 77
    declaration_stmt   go to state 34
    struct_def         go to state 35
    struct_head        go to state 36
    struct_type        go to state 37
    type               go to state 121
    type_name          go to state 46


state 137

   47 struct_tail: TOK_CLOSEBR .

    $default  reduce using rule 47 (struct_tail)


state 138

   42 struct_def: struct_head struct_body struct_tail .

    $default  reduce using rule 42 (struct_def)


state 139

   60 loop_for_expr: TOK_OPENPAR expression_statement . expression_statement TOK_CLOSEPAR
   61              | TOK_OPENPAR expression_statement . expression_statement expr_or_assignment TOK_CLOSEPAR

    TOK_IDENTIFIER      shift, and go to state 63
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_ENDEXPR         shift, and go to state 5
    TOK_OPENPAR         shift, and go to state 6
    TOK_ROM_CONST       shift, and go to state 13
    TOK_INT_CONST       shift, and go to state 14
    TOK_FLOAT_CONST     shift, and go to state 15
    TOK_STRING_LITERAL  shift, and go to state 25

    expr_or_assignment    go to state 29
    expression_statement  go to state 182
    left_assign_expr      go to state 47
    assignment            go to state 48
    expr                  go to state 49
    struct_item           go to state 50
    identifier            go to state 51
    const                 go to state 52
    function_call         go to state 55


state 140

   56 loop_decl: for_decl loop_for_expr instruction_body .

    $default  reduce using rule 56 (loop_decl)


state 141

   59 loop_while_expr: TOK_OPENPAR expr . TOK_CLOSEPAR
   78 expr: expr . TOK_B_AND expr
   79     | expr . TOK_B_OR expr
   80     | expr . TOK_B_XOR expr
   83     | expr . TOK_AR_PLUS expr
   84     | expr . TOK_AR_MINUS expr
   85     | expr . TOK_AR_MUL expr
   86     | expr . TOK_AR_DIV expr
   87     | expr . TOK_AR_MOD expr
   88     | expr . TOK_COMP_OP expr

    TOK_B_AND     shift, and go to state 103
    TOK_B_OR      shift, and go to state 104
    TOK_B_XOR     shift, and go to state 105
    TOK_AR_PLUS   shift, and go to state 106
    TOK_AR_MINUS  shift, and go to state 107
    TOK_AR_MUL    shift, and go to state 108
    TOK_AR_DIV    shift, and go to state 109
    TOK_AR_MOD    shift, and go to state 110
    TOK_COMP_OP   shift, and go to state 111
    TOK_CLOSEPAR  shift, and go to state 183


state 142

   57 loop_decl: while_decl loop_while_expr instruction_body .

    $default  reduce using rule 57 (loop_decl)


state 143

   12 stmnt_block_start: TOK_OPENBR $@1 .

    $default  reduce using rule 12 (stmnt_block_start)


state 144

    7 declaration_list: declaration_list . declaration_block TOK_ENDEXPR
   17 stmnt_block: stmnt_block_start declaration_list . TOK_CLOSEBR $@3
   19            | stmnt_block_start declaration_list . stmnt_list TOK_CLOSEBR $@4

    TOK_IDENTIFIER      shift, and go to state 1
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_IF              shift, and go to state 4
    TOK_ENDEXPR         shift, and go to state 5
    TOK_OPENPAR         shift, and go to state 6
    TOK_CLOSEBR         shift, and go to state 184
    TOK_ROM_DECL        shift, and go to state 7
    TOK_INT_DECL        shift, and go to state 8
    TOK_FLOAT_DECL      shift, and go to state 9
    TOK_FOR_DECL        shift, and go to state 10
    TOK_WHILE_DECL      shift, and go to state 11
    TOK_DO_DECL         shift, and go to state 12
    TOK_ROM_CONST       shift, and go to state 13
    TOK_INT_CONST       shift, and go to state 14
    TOK_FLOAT_CONST     shift, and go to state 15
    TOK_PRINT           shift, and go to state 16
    TOK_READ            shift, and go to state 17
    TOK_BREAK           shift, and go to state 18
    TOK_CONTINUE        shift, and go to state 19
    TOK_GOTO            shift, and go to state 20
    TOK_RETURN          shift, and go to state 21
    TOK_STRUCT          shift, and go to state 22
    TOK_UNION           shift, and go to state 23
    TOK_SWITCH          shift, and go to state 24
    TOK_STRING_LITERAL  shift, and go to state 25

    stmnt_list            go to state 185
    expr_or_assignment    go to state 29
    expression_statement  go to state 30
    lexemes               go to state 31
    stmnt                 go to state 32
    declaration_block     go to state 77
    declaration_stmt      go to state 34
    struct_def            go to state 35
    struct_head           go to state 36
    struct_type           go to state 37
    print_stmt            go to state 38
    read_stmt             go to state 39
    if_stmt               go to state 40
    loop_decl             go to state 41
    for_decl              go to state 42
    while_decl            go to state 43
    do_while_decl         go to state 44
    type                  go to state 45
    type_name             go to state 46
    left_assign_expr      go to state 47
    assignment            go to state 48
    expr                  go to state 49
    struct_item           go to state 50
    identifier            go to state 51
    const                 go to state 52
    switch_stmt           go to state 53
    switch_head           go to state 54
    function_call         go to state 55
    function_def_head     go to state 56
    function_def          go to state 57


state 145

   10 stmnt_list: stmnt_list . stmnt
   14 stmnt_block: stmnt_block_start stmnt_list . TOK_CLOSEBR $@2
   15            | stmnt_block_start stmnt_list . error

    error               shift, and go to state 186
    TOK_IDENTIFIER      shift, and go to state 1
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_IF              shift, and go to state 4
    TOK_ENDEXPR         shift, and go to state 5
    TOK_OPENPAR         shift, and go to state 6
    TOK_CLOSEBR         shift, and go to state 187
    TOK_ROM_DECL        shift, and go to state 7
    TOK_INT_DECL        shift, and go to state 8
    TOK_FLOAT_DECL      shift, and go to state 9
    TOK_FOR_DECL        shift, and go to state 10
    TOK_WHILE_DECL      shift, and go to state 11
    TOK_DO_DECL         shift, and go to state 12
    TOK_ROM_CONST       shift, and go to state 13
    TOK_INT_CONST       shift, and go to state 14
    TOK_FLOAT_CONST     shift, and go to state 15
    TOK_PRINT           shift, and go to state 16
    TOK_READ            shift, and go to state 17
    TOK_BREAK           shift, and go to state 18
    TOK_CONTINUE        shift, and go to state 19
    TOK_GOTO            shift, and go to state 20
    TOK_RETURN          shift, and go to state 21
    TOK_STRUCT          shift, and go to state 22
    TOK_UNION           shift, and go to state 23
    TOK_SWITCH          shift, and go to state 24
    TOK_STRING_LITERAL  shift, and go to state 25

    expr_or_assignment    go to state 29
    expression_statement  go to state 30
    lexemes               go to state 31
    stmnt                 go to state 79
    struct_type           go to state 96
    print_stmt            go to state 38
    read_stmt             go to state 39
    if_stmt               go to state 40
    loop_decl             go to state 41
    for_decl              go to state 42
    while_decl            go to state 43
    do_while_decl         go to state 44
    type                  go to state 98
    type_name             go to state 46
    left_assign_expr      go to state 47
    assignment            go to state 48
    expr                  go to state 49
    struct_item           go to state 50
    identifier            go to state 51
    const                 go to state 52
    switch_stmt           go to state 53
    switch_head           go to state 54
    function_call         go to state 55
    function_def_head     go to state 56
    function_def          go to state 57


state 146

   71 type_name: struct_type TOK_IDENTIFIER .

    $default  reduce using rule 71 (type_name)


state 147

   58 loop_decl: do_while_decl instruction_body TOK_WHILE_DECL . loop_while_expr TOK_ENDEXPR

    TOK_OPENPAR  shift, and go to state 90

    loop_while_expr  go to state 188


state 148

  120 function_def_head: type TOK_IDENTIFIER .

    $default  reduce using rule 120 (function_def_head)


state 149

   74 assignment: left_assign_expr TOK_ASSIGN_OP expr .
   78 expr: expr . TOK_B_AND expr
   79     | expr . TOK_B_OR expr
   80     | expr . TOK_B_XOR expr
   83     | expr . TOK_AR_PLUS expr
   84     | expr . TOK_AR_MINUS expr
   85     | expr . TOK_AR_MUL expr
   86     | expr . TOK_AR_DIV expr
   87     | expr . TOK_AR_MOD expr
   88     | expr . TOK_COMP_OP expr

    TOK_B_AND     shift, and go to state 103
    TOK_B_OR      shift, and go to state 104
    TOK_B_XOR     shift, and go to state 105
    TOK_AR_PLUS   shift, and go to state 106
    TOK_AR_MINUS  shift, and go to state 107
    TOK_AR_MUL    shift, and go to state 108
    TOK_AR_DIV    shift, and go to state 109
    TOK_AR_MOD    shift, and go to state 110
    TOK_COMP_OP   shift, and go to state 111

    $default  reduce using rule 74 (assignment)


state 150

   78 expr: expr . TOK_B_AND expr
   78     | expr TOK_B_AND expr .
   79     | expr . TOK_B_OR expr
   80     | expr . TOK_B_XOR expr
   83     | expr . TOK_AR_PLUS expr
   84     | expr . TOK_AR_MINUS expr
   85     | expr . TOK_AR_MUL expr
   86     | expr . TOK_AR_DIV expr
   87     | expr . TOK_AR_MOD expr
   88     | expr . TOK_COMP_OP expr

    $default  reduce using rule 78 (expr)


state 151

   78 expr: expr . TOK_B_AND expr
   79     | expr . TOK_B_OR expr
   79     | expr TOK_B_OR expr .
   80     | expr . TOK_B_XOR expr
   83     | expr . TOK_AR_PLUS expr
   84     | expr . TOK_AR_MINUS expr
   85     | expr . TOK_AR_MUL expr
   86     | expr . TOK_AR_DIV expr
   87     | expr . TOK_AR_MOD expr
   88     | expr . TOK_COMP_OP expr

    TOK_B_AND   shift, and go to state 103
    TOK_AR_MUL  shift, and go to state 108
    TOK_AR_DIV  shift, and go to state 109

    $default  reduce using rule 79 (expr)


state 152

   78 expr: expr . TOK_B_AND expr
   79     | expr . TOK_B_OR expr
   80     | expr . TOK_B_XOR expr
   80     | expr TOK_B_XOR expr .
   83     | expr . TOK_AR_PLUS expr
   84     | expr . TOK_AR_MINUS expr
   85     | expr . TOK_AR_MUL expr
   86     | expr . TOK_AR_DIV expr
   87     | expr . TOK_AR_MOD expr
   88     | expr . TOK_COMP_OP expr

    TOK_B_AND   shift, and go to state 103
    TOK_AR_MUL  shift, and go to state 108
    TOK_AR_DIV  shift, and go to state 109

    $default  reduce using rule 80 (expr)


state 153

   78 expr: expr . TOK_B_AND expr
   79     | expr . TOK_B_OR expr
   80     | expr . TOK_B_XOR expr
   83     | expr . TOK_AR_PLUS expr
   83     | expr TOK_AR_PLUS expr .
   84     | expr . TOK_AR_MINUS expr
   85     | expr . TOK_AR_MUL expr
   86     | expr . TOK_AR_DIV expr
   87     | expr . TOK_AR_MOD expr
   88     | expr . TOK_COMP_OP expr

    TOK_B_AND   shift, and go to state 103
    TOK_AR_MUL  shift, and go to state 108
    TOK_AR_DIV  shift, and go to state 109

    $default  reduce using rule 83 (expr)


state 154

   78 expr: expr . TOK_B_AND expr
   79     | expr . TOK_B_OR expr
   80     | expr . TOK_B_XOR expr
   83     | expr . TOK_AR_PLUS expr
   84     | expr . TOK_AR_MINUS expr
   84     | expr TOK_AR_MINUS expr .
   85     | expr . TOK_AR_MUL expr
   86     | expr . TOK_AR_DIV expr
   87     | expr . TOK_AR_MOD expr
   88     | expr . TOK_COMP_OP expr

    TOK_B_AND   shift, and go to state 103
    TOK_AR_MUL  shift, and go to state 108
    TOK_AR_DIV  shift, and go to state 109

    $default  reduce using rule 84 (expr)


state 155

   78 expr: expr . TOK_B_AND expr
   79     | expr . TOK_B_OR expr
   80     | expr . TOK_B_XOR expr
   83     | expr . TOK_AR_PLUS expr
   84     | expr . TOK_AR_MINUS expr
   85     | expr . TOK_AR_MUL expr
   85     | expr TOK_AR_MUL expr .
   86     | expr . TOK_AR_DIV expr
   87     | expr . TOK_AR_MOD expr
   88     | expr . TOK_COMP_OP expr

    $default  reduce using rule 85 (expr)


state 156

   78 expr: expr . TOK_B_AND expr
   79     | expr . TOK_B_OR expr
   80     | expr . TOK_B_XOR expr
   83     | expr . TOK_AR_PLUS expr
   84     | expr . TOK_AR_MINUS expr
   85     | expr . TOK_AR_MUL expr
   86     | expr . TOK_AR_DIV expr
   86     | expr TOK_AR_DIV expr .
   87     | expr . TOK_AR_MOD expr
   88     | expr . TOK_COMP_OP expr

    $default  reduce using rule 86 (expr)


state 157

   78 expr: expr . TOK_B_AND expr
   79     | expr . TOK_B_OR expr
   80     | expr . TOK_B_XOR expr
   83     | expr . TOK_AR_PLUS expr
   84     | expr . TOK_AR_MINUS expr
   85     | expr . TOK_AR_MUL expr
   86     | expr . TOK_AR_DIV expr
   87     | expr . TOK_AR_MOD expr
   87     | expr TOK_AR_MOD expr .
   88     | expr . TOK_COMP_OP expr

    TOK_B_AND     shift, and go to state 103
    TOK_B_OR      shift, and go to state 104
    TOK_B_XOR     shift, and go to state 105
    TOK_AR_PLUS   shift, and go to state 106
    TOK_AR_MINUS  shift, and go to state 107
    TOK_AR_MUL    shift, and go to state 108
    TOK_AR_DIV    shift, and go to state 109

    $default  reduce using rule 87 (expr)


state 158

   78 expr: expr . TOK_B_AND expr
   79     | expr . TOK_B_OR expr
   80     | expr . TOK_B_XOR expr
   83     | expr . TOK_AR_PLUS expr
   84     | expr . TOK_AR_MINUS expr
   85     | expr . TOK_AR_MUL expr
   86     | expr . TOK_AR_DIV expr
   87     | expr . TOK_AR_MOD expr
   88     | expr . TOK_COMP_OP expr
   88     | expr TOK_COMP_OP expr .

    TOK_B_AND     shift, and go to state 103
    TOK_B_OR      shift, and go to state 104
    TOK_B_XOR     shift, and go to state 105
    TOK_AR_PLUS   shift, and go to state 106
    TOK_AR_MINUS  shift, and go to state 107
    TOK_AR_MUL    shift, and go to state 108
    TOK_AR_DIV    shift, and go to state 109
    TOK_AR_MOD    shift, and go to state 110

    $default  reduce using rule 88 (expr)


state 159

   95 struct_item: identifier TOK_DOT TOK_IDENTIFIER .

    $default  reduce using rule 95 (struct_item)


state 160

   78 expr: expr . TOK_B_AND expr
   79     | expr . TOK_B_OR expr
   80     | expr . TOK_B_XOR expr
   83     | expr . TOK_AR_PLUS expr
   84     | expr . TOK_AR_MINUS expr
   85     | expr . TOK_AR_MUL expr
   86     | expr . TOK_AR_DIV expr
   87     | expr . TOK_AR_MOD expr
   88     | expr . TOK_COMP_OP expr
  107 case_head: TOK_CASE expr . TOK_DOUBLEDOT

    TOK_B_AND      shift, and go to state 103
    TOK_B_OR       shift, and go to state 104
    TOK_B_XOR      shift, and go to state 105
    TOK_AR_PLUS    shift, and go to state 106
    TOK_AR_MINUS   shift, and go to state 107
    TOK_AR_MUL     shift, and go to state 108
    TOK_AR_DIV     shift, and go to state 109
    TOK_AR_MOD     shift, and go to state 110
    TOK_COMP_OP    shift, and go to state 111
    TOK_DOUBLEDOT  shift, and go to state 189


state 161

  102 switch_stmt: switch_head case_list TOK_CLOSEBR .

    $default  reduce using rule 102 (switch_stmt)


state 162

  111 default_head: TOK_DEFAULT . TOK_DOUBLEDOT

    TOK_DOUBLEDOT  shift, and go to state 190


state 163

  101 switch_stmt: switch_head case_list default . TOK_CLOSEBR

    TOK_CLOSEBR  shift, and go to state 191


state 164

  110 default: default_head . instruction_body

    TOK_IDENTIFIER      shift, and go to state 1
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_IF              shift, and go to state 4
    TOK_ENDEXPR         shift, and go to state 5
    TOK_OPENPAR         shift, and go to state 6
    TOK_OPENBR          shift, and go to state 92
    TOK_ROM_DECL        shift, and go to state 7
    TOK_INT_DECL        shift, and go to state 8
    TOK_FLOAT_DECL      shift, and go to state 9
    TOK_FOR_DECL        shift, and go to state 10
    TOK_WHILE_DECL      shift, and go to state 11
    TOK_DO_DECL         shift, and go to state 12
    TOK_ROM_CONST       shift, and go to state 13
    TOK_INT_CONST       shift, and go to state 14
    TOK_FLOAT_CONST     shift, and go to state 15
    TOK_PRINT           shift, and go to state 16
    TOK_READ            shift, and go to state 17
    TOK_BREAK           shift, and go to state 18
    TOK_CONTINUE        shift, and go to state 19
    TOK_GOTO            shift, and go to state 20
    TOK_RETURN          shift, and go to state 21
    TOK_STRUCT          shift, and go to state 22
    TOK_UNION           shift, and go to state 23
    TOK_SWITCH          shift, and go to state 24
    TOK_STRING_LITERAL  shift, and go to state 25

    stmnt_block_start     go to state 93
    stmnt_block           go to state 94
    expr_or_assignment    go to state 29
    expression_statement  go to state 30
    lexemes               go to state 31
    stmnt                 go to state 95
    struct_type           go to state 96
    print_stmt            go to state 38
    read_stmt             go to state 39
    if_stmt               go to state 40
    loop_decl             go to state 41
    for_decl              go to state 42
    while_decl            go to state 43
    do_while_decl         go to state 44
    instruction_body      go to state 192
    type                  go to state 98
    type_name             go to state 46
    left_assign_expr      go to state 47
    assignment            go to state 48
    expr                  go to state 49
    struct_item           go to state 50
    identifier            go to state 51
    const                 go to state 52
    switch_stmt           go to state 53
    switch_head           go to state 54
    function_call         go to state 55
    function_def_head     go to state 56
    function_def          go to state 57


state 165

  105 case_list: case_stmt case_list .

    $default  reduce using rule 105 (case_list)


state 166

  108 case_body: instruction_body .

    $default  reduce using rule 108 (case_body)


state 167

  109 case_body: case_stmt .

    $default  reduce using rule 109 (case_body)


state 168

  106 case_stmt: case_head case_body .

    $default  reduce using rule 106 (case_stmt)


state 169

  121 function_def: function_def_head declarator stmnt_block .

    $default  reduce using rule 121 (function_def)


state 170

   41 declaration_stmt: type TOK_IDENTIFIER .

    $default  reduce using rule 41 (declaration_stmt)


state 171

  115 parameter_list: parameter_list TOK_COMMA . parameter

    TOK_IDENTIFIER  shift, and go to state 118
    TOK_ROM_DECL    shift, and go to state 7
    TOK_INT_DECL    shift, and go to state 8
    TOK_FLOAT_DECL  shift, and go to state 9
    TOK_STRUCT      shift, and go to state 22
    TOK_UNION       shift, and go to state 23

    declaration_stmt  go to state 120
    struct_type       go to state 96
    type              go to state 121
    type_name         go to state 46
    parameter         go to state 193


state 172

  117 declarator: TOK_OPENPAR parameter_type_list TOK_CLOSEPAR .

    $default  reduce using rule 117 (declarator)


state 173

   94 array: TOK_OPENSQ expr error .

    $default  reduce using rule 94 (array)


state 174

   92 array: TOK_OPENSQ expr TOK_CLOSESQ . array

    TOK_OPENSQ  shift, and go to state 59

    $default  reduce using rule 91 (array)

    array  go to state 194


state 175

   55 if_stmt: TOK_IF TOK_OPENPAR expr error .

    $default  reduce using rule 55 (if_stmt)


state 176

   53 if_stmt: TOK_IF TOK_OPENPAR expr TOK_CLOSEPAR . instruction_body
   54        | TOK_IF TOK_OPENPAR expr TOK_CLOSEPAR . instruction_body TOK_ELSE instruction_body

    TOK_IDENTIFIER      shift, and go to state 1
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_IF              shift, and go to state 4
    TOK_ENDEXPR         shift, and go to state 5
    TOK_OPENPAR         shift, and go to state 6
    TOK_OPENBR          shift, and go to state 92
    TOK_ROM_DECL        shift, and go to state 7
    TOK_INT_DECL        shift, and go to state 8
    TOK_FLOAT_DECL      shift, and go to state 9
    TOK_FOR_DECL        shift, and go to state 10
    TOK_WHILE_DECL      shift, and go to state 11
    TOK_DO_DECL         shift, and go to state 12
    TOK_ROM_CONST       shift, and go to state 13
    TOK_INT_CONST       shift, and go to state 14
    TOK_FLOAT_CONST     shift, and go to state 15
    TOK_PRINT           shift, and go to state 16
    TOK_READ            shift, and go to state 17
    TOK_BREAK           shift, and go to state 18
    TOK_CONTINUE        shift, and go to state 19
    TOK_GOTO            shift, and go to state 20
    TOK_RETURN          shift, and go to state 21
    TOK_STRUCT          shift, and go to state 22
    TOK_UNION           shift, and go to state 23
    TOK_SWITCH          shift, and go to state 24
    TOK_STRING_LITERAL  shift, and go to state 25

    stmnt_block_start     go to state 93
    stmnt_block           go to state 94
    expr_or_assignment    go to state 29
    expression_statement  go to state 30
    lexemes               go to state 31
    stmnt                 go to state 95
    struct_type           go to state 96
    print_stmt            go to state 38
    read_stmt             go to state 39
    if_stmt               go to state 40
    loop_decl             go to state 41
    for_decl              go to state 42
    while_decl            go to state 43
    do_while_decl         go to state 44
    instruction_body      go to state 195
    type                  go to state 98
    type_name             go to state 46
    left_assign_expr      go to state 47
    assignment            go to state 48
    expr                  go to state 49
    struct_item           go to state 50
    identifier            go to state 51
    const                 go to state 52
    switch_stmt           go to state 53
    switch_head           go to state 54
    function_call         go to state 55
    function_def_head     go to state 56
    function_def          go to state 57


state 177

   48 print_stmt: TOK_PRINT TOK_OPENPAR expr TOK_CLOSEPAR . TOK_ENDEXPR

    TOK_ENDEXPR  shift, and go to state 196


state 178

   50 print_stmt: TOK_PRINT '(' expr error .

    $default  reduce using rule 50 (print_stmt)


state 179

   51 print_stmt: TOK_PRINT '(' expr ')' . error

    error  shift, and go to state 197


state 180

   52 read_stmt: TOK_READ TOK_OPENPAR left_assign_expr TOK_CLOSEPAR . TOK_ENDEXPR

    TOK_ENDEXPR  shift, and go to state 198


state 181

  103 switch_head: TOK_SWITCH TOK_OPENPAR expr TOK_CLOSEPAR . TOK_OPENBR

    TOK_OPENBR  shift, and go to state 199


state 182

   60 loop_for_expr: TOK_OPENPAR expression_statement expression_statement . TOK_CLOSEPAR
   61              | TOK_OPENPAR expression_statement expression_statement . expr_or_assignment TOK_CLOSEPAR

    TOK_IDENTIFIER      shift, and go to state 63
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_OPENPAR         shift, and go to state 6
    TOK_CLOSEPAR        shift, and go to state 200
    TOK_ROM_CONST       shift, and go to state 13
    TOK_INT_CONST       shift, and go to state 14
    TOK_FLOAT_CONST     shift, and go to state 15
    TOK_STRING_LITERAL  shift, and go to state 25

    expr_or_assignment  go to state 201
    left_assign_expr    go to state 47
    assignment          go to state 48
    expr                go to state 202
    struct_item         go to state 50
    identifier          go to state 51
    const               go to state 52
    function_call       go to state 55


state 183

   59 loop_while_expr: TOK_OPENPAR expr TOK_CLOSEPAR .

    $default  reduce using rule 59 (loop_while_expr)


state 184

   17 stmnt_block: stmnt_block_start declaration_list TOK_CLOSEBR . $@3

    $default  reduce using rule 16 ($@3)

    $@3  go to state 203


state 185

   10 stmnt_list: stmnt_list . stmnt
   19 stmnt_block: stmnt_block_start declaration_list stmnt_list . TOK_CLOSEBR $@4

    TOK_IDENTIFIER      shift, and go to state 1
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_IF              shift, and go to state 4
    TOK_ENDEXPR         shift, and go to state 5
    TOK_OPENPAR         shift, and go to state 6
    TOK_CLOSEBR         shift, and go to state 204
    TOK_ROM_DECL        shift, and go to state 7
    TOK_INT_DECL        shift, and go to state 8
    TOK_FLOAT_DECL      shift, and go to state 9
    TOK_FOR_DECL        shift, and go to state 10
    TOK_WHILE_DECL      shift, and go to state 11
    TOK_DO_DECL         shift, and go to state 12
    TOK_ROM_CONST       shift, and go to state 13
    TOK_INT_CONST       shift, and go to state 14
    TOK_FLOAT_CONST     shift, and go to state 15
    TOK_PRINT           shift, and go to state 16
    TOK_READ            shift, and go to state 17
    TOK_BREAK           shift, and go to state 18
    TOK_CONTINUE        shift, and go to state 19
    TOK_GOTO            shift, and go to state 20
    TOK_RETURN          shift, and go to state 21
    TOK_STRUCT          shift, and go to state 22
    TOK_UNION           shift, and go to state 23
    TOK_SWITCH          shift, and go to state 24
    TOK_STRING_LITERAL  shift, and go to state 25

    expr_or_assignment    go to state 29
    expression_statement  go to state 30
    lexemes               go to state 31
    stmnt                 go to state 79
    struct_type           go to state 96
    print_stmt            go to state 38
    read_stmt             go to state 39
    if_stmt               go to state 40
    loop_decl             go to state 41
    for_decl              go to state 42
    while_decl            go to state 43
    do_while_decl         go to state 44
    type                  go to state 98
    type_name             go to state 46
    left_assign_expr      go to state 47
    assignment            go to state 48
    expr                  go to state 49
    struct_item           go to state 50
    identifier            go to state 51
    const                 go to state 52
    switch_stmt           go to state 53
    switch_head           go to state 54
    function_call         go to state 55
    function_def_head     go to state 56
    function_def          go to state 57


state 186

   15 stmnt_block: stmnt_block_start stmnt_list error .

    $default  reduce using rule 15 (stmnt_block)


state 187

   14 stmnt_block: stmnt_block_start stmnt_list TOK_CLOSEBR . $@2

    $default  reduce using rule 13 ($@2)

    $@2  go to state 205


state 188

   58 loop_decl: do_while_decl instruction_body TOK_WHILE_DECL loop_while_expr . TOK_ENDEXPR

    TOK_ENDEXPR  shift, and go to state 206


state 189

  107 case_head: TOK_CASE expr TOK_DOUBLEDOT .

    $default  reduce using rule 107 (case_head)


state 190

  111 default_head: TOK_DEFAULT TOK_DOUBLEDOT .

    $default  reduce using rule 111 (default_head)


state 191

  101 switch_stmt: switch_head case_list default TOK_CLOSEBR .

    $default  reduce using rule 101 (switch_stmt)


state 192

  110 default: default_head instruction_body .

    $default  reduce using rule 110 (default)


state 193

  115 parameter_list: parameter_list TOK_COMMA parameter .

    $default  reduce using rule 115 (parameter_list)


state 194

   92 array: TOK_OPENSQ expr TOK_CLOSESQ array .

    $default  reduce using rule 92 (array)


state 195

   53 if_stmt: TOK_IF TOK_OPENPAR expr TOK_CLOSEPAR instruction_body .
   54        | TOK_IF TOK_OPENPAR expr TOK_CLOSEPAR instruction_body . TOK_ELSE instruction_body

    TOK_ELSE  shift, and go to state 207

    $default  reduce using rule 53 (if_stmt)


state 196

   48 print_stmt: TOK_PRINT TOK_OPENPAR expr TOK_CLOSEPAR TOK_ENDEXPR .

    $default  reduce using rule 48 (print_stmt)


state 197

   51 print_stmt: TOK_PRINT '(' expr ')' error .

    $default  reduce using rule 51 (print_stmt)


state 198

   52 read_stmt: TOK_READ TOK_OPENPAR left_assign_expr TOK_CLOSEPAR TOK_ENDEXPR .

    $default  reduce using rule 52 (read_stmt)


state 199

  103 switch_head: TOK_SWITCH TOK_OPENPAR expr TOK_CLOSEPAR TOK_OPENBR .

    $default  reduce using rule 103 (switch_head)


state 200

   60 loop_for_expr: TOK_OPENPAR expression_statement expression_statement TOK_CLOSEPAR .

    $default  reduce using rule 60 (loop_for_expr)


state 201

   61 loop_for_expr: TOK_OPENPAR expression_statement expression_statement expr_or_assignment . TOK_CLOSEPAR

    TOK_CLOSEPAR  shift, and go to state 208


state 202

   20 expr_or_assignment: expr .
   78 expr: expr . TOK_B_AND expr
   79     | expr . TOK_B_OR expr
   80     | expr . TOK_B_XOR expr
   83     | expr . TOK_AR_PLUS expr
   84     | expr . TOK_AR_MINUS expr
   85     | expr . TOK_AR_MUL expr
   86     | expr . TOK_AR_DIV expr
   87     | expr . TOK_AR_MOD expr
   88     | expr . TOK_COMP_OP expr

    TOK_B_AND     shift, and go to state 103
    TOK_B_OR      shift, and go to state 104
    TOK_B_XOR     shift, and go to state 105
    TOK_AR_PLUS   shift, and go to state 106
    TOK_AR_MINUS  shift, and go to state 107
    TOK_AR_MUL    shift, and go to state 108
    TOK_AR_DIV    shift, and go to state 109
    TOK_AR_MOD    shift, and go to state 110
    TOK_COMP_OP   shift, and go to state 111

    $default  reduce using rule 20 (expr_or_assignment)


state 203

   17 stmnt_block: stmnt_block_start declaration_list TOK_CLOSEBR $@3 .

    $default  reduce using rule 17 (stmnt_block)


state 204

   19 stmnt_block: stmnt_block_start declaration_list stmnt_list TOK_CLOSEBR . $@4

    $default  reduce using rule 18 ($@4)

    $@4  go to state 209


state 205

   14 stmnt_block: stmnt_block_start stmnt_list TOK_CLOSEBR $@2 .

    $default  reduce using rule 14 (stmnt_block)


state 206

   58 loop_decl: do_while_decl instruction_body TOK_WHILE_DECL loop_while_expr TOK_ENDEXPR .

    $default  reduce using rule 58 (loop_decl)


state 207

   54 if_stmt: TOK_IF TOK_OPENPAR expr TOK_CLOSEPAR instruction_body TOK_ELSE . instruction_body

    TOK_IDENTIFIER      shift, and go to state 1
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_IF              shift, and go to state 4
    TOK_ENDEXPR         shift, and go to state 5
    TOK_OPENPAR         shift, and go to state 6
    TOK_OPENBR          shift, and go to state 92
    TOK_ROM_DECL        shift, and go to state 7
    TOK_INT_DECL        shift, and go to state 8
    TOK_FLOAT_DECL      shift, and go to state 9
    TOK_FOR_DECL        shift, and go to state 10
    TOK_WHILE_DECL      shift, and go to state 11
    TOK_DO_DECL         shift, and go to state 12
    TOK_ROM_CONST       shift, and go to state 13
    TOK_INT_CONST       shift, and go to state 14
    TOK_FLOAT_CONST     shift, and go to state 15
    TOK_PRINT           shift, and go to state 16
    TOK_READ            shift, and go to state 17
    TOK_BREAK           shift, and go to state 18
    TOK_CONTINUE        shift, and go to state 19
    TOK_GOTO            shift, and go to state 20
    TOK_RETURN          shift, and go to state 21
    TOK_STRUCT          shift, and go to state 22
    TOK_UNION           shift, and go to state 23
    TOK_SWITCH          shift, and go to state 24
    TOK_STRING_LITERAL  shift, and go to state 25

    stmnt_block_start     go to state 93
    stmnt_block           go to state 94
    expr_or_assignment    go to state 29
    expression_statement  go to state 30
    lexemes               go to state 31
    stmnt                 go to state 95
    struct_type           go to state 96
    print_stmt            go to state 38
    read_stmt             go to state 39
    if_stmt               go to state 40
    loop_decl             go to state 41
    for_decl              go to state 42
    while_decl            go to state 43
    do_while_decl         go to state 44
    instruction_body      go to state 210
    type                  go to state 98
    type_name             go to state 46
    left_assign_expr      go to state 47
    assignment            go to state 48
    expr                  go to state 49
    struct_item           go to state 50
    identifier            go to state 51
    const                 go to state 52
    switch_stmt           go to state 53
    switch_head           go to state 54
    function_call         go to state 55
    function_def_head     go to state 56
    function_def          go to state 57


state 208

   61 loop_for_expr: TOK_OPENPAR expression_statement expression_statement expr_or_assignment TOK_CLOSEPAR .

    $default  reduce using rule 61 (loop_for_expr)


state 209

   19 stmnt_block: stmnt_block_start declaration_list stmnt_list TOK_CLOSEBR $@4 .

    $default  reduce using rule 19 (stmnt_block)


state 210

   54 if_stmt: TOK_IF TOK_OPENPAR expr TOK_CLOSEPAR instruction_body TOK_ELSE instruction_body .

    $default  reduce using rule 54 (if_stmt)
