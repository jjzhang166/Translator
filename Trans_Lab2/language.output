Terminals unused in grammar

   EXPR_ERROR


Grammar

    0 $accept: start $end

    1 start: /* empty */
    2      | declaration_list stmnt_list
    3      | declaration_list functions_def_list stmnt_list
    4      | declaration_list
    5      | stmnt_list
    6      | stmnt_list declaration_list

    7 functions_def_list: function_def
    8                   | functions_def_list function_def

    9 declaration_list: declaration_block TOK_ENDEXPR
   10                 | declaration_list declaration_block TOK_ENDEXPR
   11                 | declaration_block error

   12 stmnt_list: stmnt
   13           | stmnt_list stmnt

   14 $@1: /* empty */

   15 stmnt_block_start: TOK_OPENBR $@1

   16 $@2: /* empty */

   17 stmnt_block: stmnt_block_start stmnt_list TOK_CLOSEBR $@2
   18            | stmnt_block_start stmnt_list error

   19 $@3: /* empty */

   20 stmnt_block: stmnt_block_start declaration_list TOK_CLOSEBR $@3

   21 $@4: /* empty */

   22 stmnt_block: stmnt_block_start declaration_list stmnt_list TOK_CLOSEBR $@4
   23            | stmnt_block_start declaration_list stmnt_list error

   24 expr_or_assignment: expr
   25                   | assignment

   26 expression_statement: TOK_ENDEXPR
   27                     | expr_or_assignment TOK_ENDEXPR
   28                     | expr error

   29 lexemes: TOK_GOTO TOK_IDENTIFIER
   30        | TOK_BREAK
   31        | TOK_CONTINUE
   32        | TOK_RETURN
   33        | TOK_RETURN expr

   34 stmnt: expression_statement
   35      | TOK_IDENTIFIER TOK_DOUBLEDOT
   36      | if_stmt
   37      | loop_decl
   38      | switch_stmt
   39      | print_stmt
   40      | read_stmt
   41      | lexemes TOK_ENDEXPR
   42      | lexemes error

   43 declaration_block: declaration_stmt
   44                  | struct_def

   45 declaration_stmt: type TOK_IDENTIFIER

   46 struct_def: struct_head struct_body struct_tail
   47           | struct_head error
   48           | struct_head struct_body error

   49 struct_head: struct_type TOK_IDENTIFIER
   50            | struct_type error

   51 struct_type: TOK_STRUCT
   52            | TOK_UNION

   53 struct_body: TOK_OPENBR declaration_list

   54 struct_tail: TOK_CLOSEBR

   55 print_stmt: TOK_PRINT TOK_OPENPAR expr TOK_CLOSEPAR TOK_ENDEXPR
   56           | TOK_PRINT error
   57           | TOK_PRINT TOK_OPENPAR expr error
   58           | TOK_PRINT TOK_OPENPAR expr TOK_CLOSEPAR error

   59 read_stmt: TOK_READ TOK_OPENPAR left_assign_expr TOK_CLOSEPAR TOK_ENDEXPR
   60          | TOK_READ error
   61          | TOK_READ TOK_OPENPAR left_assign_expr error
   62          | TOK_READ TOK_OPENPAR left_assign_expr TOK_CLOSEPAR error

   63 if_stmt: TOK_IF TOK_OPENPAR expr TOK_CLOSEPAR instruction_body
   64        | TOK_IF TOK_OPENPAR expr TOK_CLOSEPAR instruction_body TOK_ELSE instruction_body
   65        | TOK_IF TOK_OPENPAR expr error

   66 loop_decl: for_decl loop_for_expr instruction_body
   67          | while_decl loop_while_expr instruction_body
   68          | do_while_decl instruction_body TOK_WHILE_DECL loop_while_expr TOK_ENDEXPR

   69 loop_while_expr: TOK_OPENPAR expr TOK_CLOSEPAR

   70 loop_for_expr: TOK_OPENPAR expression_statement expression_statement TOK_CLOSEPAR
   71              | TOK_OPENPAR expression_statement expression_statement expr_or_assignment TOK_CLOSEPAR

   72 for_decl: TOK_FOR_DECL

   73 while_decl: TOK_WHILE_DECL

   74 do_while_decl: TOK_DO_DECL

   75 instruction_body: stmnt_block
   76                 | stmnt

   77 type: type_name array

   78 type_name: TOK_ROM_DECL
   79          | TOK_FLOAT_DECL
   80          | TOK_INT_DECL
   81          | TOK_VOID_DECL
   82          | struct_type TOK_IDENTIFIER

   83 left_assign_expr: identifier
   84                 | struct_item

   85 assignment: left_assign_expr TOK_ASSIGN_OP expr

   86 expr: left_assign_expr
   87     | const
   88     | function_call
   89     | expr TOK_B_AND expr
   90     | expr TOK_B_OR expr
   91     | expr TOK_B_XOR expr
   92     | TOK_B_NOT expr
   93     | TOK_AR_MINUS expr
   94     | expr TOK_AR_PLUS expr
   95     | expr TOK_AR_MINUS expr
   96     | expr TOK_AR_MUL expr
   97     | expr TOK_AR_DIV expr
   98     | expr TOK_AR_MOD expr
   99     | expr TOK_COMP_OP expr
  100     | TOK_OPENPAR expr error
  101     | TOK_OPENPAR expr TOK_CLOSEPAR

  102 array: /* empty */
  103      | TOK_OPENSQ expr TOK_CLOSESQ array
  104      | TOK_OPENSQ error
  105      | TOK_OPENSQ expr error

  106 struct_item: identifier TOK_DOT TOK_IDENTIFIER

  107 identifier: TOK_IDENTIFIER array

  108 const: TOK_INT_CONST
  109      | TOK_ROM_CONST
  110      | TOK_FLOAT_CONST
  111      | TOK_STRING_LITERAL

  112 switch_stmt: switch_head case_list default TOK_CLOSEBR
  113            | switch_head case_list TOK_CLOSEBR

  114 switch_head: TOK_SWITCH TOK_OPENPAR expr TOK_CLOSEPAR TOK_OPENBR

  115 case_list: case_stmt
  116          | case_stmt case_list

  117 case_stmt: case_head case_body

  118 case_head: TOK_CASE expr TOK_DOUBLEDOT

  119 case_body: instruction_body
  120          | case_stmt

  121 default: default_head instruction_body

  122 default_head: TOK_DEFAULT TOK_DOUBLEDOT

  123 parameter: declaration_stmt
  124          | expr

  125 parameter_list: parameter
  126               | parameter_list TOK_COMMA parameter

  127 parameter_type_list: parameter_list

  128 declarator: TOK_OPENPAR parameter_type_list TOK_CLOSEPAR
  129           | TOK_OPENPAR TOK_CLOSEPAR

  130 function_call: TOK_IDENTIFIER declarator

  131 function_def_head: type TOK_IDENTIFIER

  132 func_declarator: declarator

  133 function_def: function_def_head func_declarator stmnt_block
  134             | function_def_head func_declarator error


Terminals, with rules where they appear

$end (0) 0
error (256) 11 18 23 28 42 47 48 50 56 57 58 60 61 62 65 100 104 105
    134
TOK_IDENTIFIER (258) 29 35 45 49 82 106 107 130 131
TOK_B_AND (259) 89
TOK_B_OR (260) 90
TOK_B_XOR (261) 91
TOK_B_NOT (262) 92
TOK_AR_PLUS (263) 94
TOK_AR_MINUS (264) 93 95
TOK_AR_MUL (265) 96
TOK_AR_DIV (266) 97
TOK_AR_MOD (267) 98
TOK_ASSIGN_OP (268) 85
TOK_COMP_OP (269) 99
TOK_IF (270) 63 64 65
TOK_ELSE (271) 64
TOK_ENDEXPR (272) 9 10 26 27 41 55 59 68
TOK_OPENPAR (273) 55 57 58 59 61 62 63 64 65 69 70 71 100 101 114 128
    129
TOK_CLOSEPAR (274) 55 58 59 62 63 64 69 70 71 101 114 128 129
TOK_OPENBR (275) 15 53 114
TOK_CLOSEBR (276) 17 20 22 54 112 113
TOK_OPENSQ (277) 103 104 105
TOK_CLOSESQ (278) 103
TOK_DOT (279) 106
TOK_COMMA (280) 126
TOK_DOUBLEDOT (281) 35 118 122
TOK_ROM_DECL (282) 78
TOK_INT_DECL (283) 80
TOK_FLOAT_DECL (284) 79
TOK_VOID_DECL (285) 81
TOK_FOR_DECL (286) 72
TOK_WHILE_DECL (287) 68 73
TOK_DO_DECL (288) 74
TOK_ROM_CONST (289) 109
TOK_INT_CONST (290) 108
TOK_FLOAT_CONST (291) 110
TOK_PRINT (292) 55 56 57 58
TOK_READ (293) 59 60 61 62
TOK_BREAK (294) 30
TOK_CONTINUE (295) 31
TOK_GOTO (296) 29
TOK_RETURN (297) 32 33
TOK_STRUCT (298) 51
TOK_UNION (299) 52
TOK_SWITCH (300) 114
TOK_CASE (301) 118
TOK_DEFAULT (302) 122
TOK_STRING_LITERAL (303) 111
EXPR_ERROR (304)
STMNT_BLOCK_ERROR (305)
IF_WITHOUT_ELSE (306)
NOTX (307)
UMINUS (308)


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
start (55)
    on left: 1 2 3 4 5 6, on right: 0
functions_def_list (56)
    on left: 7 8, on right: 3 8
declaration_list (57)
    on left: 9 10 11, on right: 2 3 4 6 10 20 22 23 53
stmnt_list (58)
    on left: 12 13, on right: 2 3 5 6 13 17 18 22 23
stmnt_block_start (59)
    on left: 15, on right: 17 18 20 22 23
$@1 (60)
    on left: 14, on right: 15
stmnt_block (61)
    on left: 17 18 20 22 23, on right: 75 133
$@2 (62)
    on left: 16, on right: 17
$@3 (63)
    on left: 19, on right: 20
$@4 (64)
    on left: 21, on right: 22
expr_or_assignment (65)
    on left: 24 25, on right: 27 71
expression_statement (66)
    on left: 26 27 28, on right: 34 70 71
lexemes (67)
    on left: 29 30 31 32 33, on right: 41 42
stmnt (68)
    on left: 34 35 36 37 38 39 40 41 42, on right: 12 13 76
declaration_block (69)
    on left: 43 44, on right: 9 10 11
declaration_stmt (70)
    on left: 45, on right: 43 123
struct_def (71)
    on left: 46 47 48, on right: 44
struct_head (72)
    on left: 49 50, on right: 46 47 48
struct_type (73)
    on left: 51 52, on right: 49 50 82
struct_body (74)
    on left: 53, on right: 46 48
struct_tail (75)
    on left: 54, on right: 46
print_stmt (76)
    on left: 55 56 57 58, on right: 39
read_stmt (77)
    on left: 59 60 61 62, on right: 40
if_stmt (78)
    on left: 63 64 65, on right: 36
loop_decl (79)
    on left: 66 67 68, on right: 37
loop_while_expr (80)
    on left: 69, on right: 67 68
loop_for_expr (81)
    on left: 70 71, on right: 66
for_decl (82)
    on left: 72, on right: 66
while_decl (83)
    on left: 73, on right: 67
do_while_decl (84)
    on left: 74, on right: 68
instruction_body (85)
    on left: 75 76, on right: 63 64 66 67 68 119 121
type (86)
    on left: 77, on right: 45 131
type_name (87)
    on left: 78 79 80 81 82, on right: 77
left_assign_expr (88)
    on left: 83 84, on right: 59 61 62 85 86
assignment (89)
    on left: 85, on right: 25
expr (90)
    on left: 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101, on right:
    24 28 33 55 57 58 63 64 65 69 85 89 90 91 92 93 94 95 96 97 98
    99 100 101 103 105 114 118 124
array (91)
    on left: 102 103 104 105, on right: 77 103 107
struct_item (92)
    on left: 106, on right: 84
identifier (93)
    on left: 107, on right: 83 106
const (94)
    on left: 108 109 110 111, on right: 87
switch_stmt (95)
    on left: 112 113, on right: 38
switch_head (96)
    on left: 114, on right: 112 113
case_list (97)
    on left: 115 116, on right: 112 113 116
case_stmt (98)
    on left: 117, on right: 115 116 120
case_head (99)
    on left: 118, on right: 117
case_body (100)
    on left: 119 120, on right: 117
default (101)
    on left: 121, on right: 112
default_head (102)
    on left: 122, on right: 121
parameter (103)
    on left: 123 124, on right: 125 126
parameter_list (104)
    on left: 125 126, on right: 126 127
parameter_type_list (105)
    on left: 127, on right: 128
declarator (106)
    on left: 128 129, on right: 130 132
function_call (107)
    on left: 130, on right: 88
function_def_head (108)
    on left: 131, on right: 133 134
func_declarator (109)
    on left: 132, on right: 133 134
function_def (110)
    on left: 133 134, on right: 7 8


state 0

    0 $accept: . start $end

    TOK_IDENTIFIER      shift, and go to state 1
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_IF              shift, and go to state 4
    TOK_ENDEXPR         shift, and go to state 5
    TOK_OPENPAR         shift, and go to state 6
    TOK_ROM_DECL        shift, and go to state 7
    TOK_INT_DECL        shift, and go to state 8
    TOK_FLOAT_DECL      shift, and go to state 9
    TOK_VOID_DECL       shift, and go to state 10
    TOK_FOR_DECL        shift, and go to state 11
    TOK_WHILE_DECL      shift, and go to state 12
    TOK_DO_DECL         shift, and go to state 13
    TOK_ROM_CONST       shift, and go to state 14
    TOK_INT_CONST       shift, and go to state 15
    TOK_FLOAT_CONST     shift, and go to state 16
    TOK_PRINT           shift, and go to state 17
    TOK_READ            shift, and go to state 18
    TOK_BREAK           shift, and go to state 19
    TOK_CONTINUE        shift, and go to state 20
    TOK_GOTO            shift, and go to state 21
    TOK_RETURN          shift, and go to state 22
    TOK_STRUCT          shift, and go to state 23
    TOK_UNION           shift, and go to state 24
    TOK_SWITCH          shift, and go to state 25
    TOK_STRING_LITERAL  shift, and go to state 26

    $default  reduce using rule 1 (start)

    start                 go to state 27
    declaration_list      go to state 28
    stmnt_list            go to state 29
    expr_or_assignment    go to state 30
    expression_statement  go to state 31
    lexemes               go to state 32
    stmnt                 go to state 33
    declaration_block     go to state 34
    declaration_stmt      go to state 35
    struct_def            go to state 36
    struct_head           go to state 37
    struct_type           go to state 38
    print_stmt            go to state 39
    read_stmt             go to state 40
    if_stmt               go to state 41
    loop_decl             go to state 42
    for_decl              go to state 43
    while_decl            go to state 44
    do_while_decl         go to state 45
    type                  go to state 46
    type_name             go to state 47
    left_assign_expr      go to state 48
    assignment            go to state 49
    expr                  go to state 50
    struct_item           go to state 51
    identifier            go to state 52
    const                 go to state 53
    switch_stmt           go to state 54
    switch_head           go to state 55
    function_call         go to state 56


state 1

   35 stmnt: TOK_IDENTIFIER . TOK_DOUBLEDOT
  107 identifier: TOK_IDENTIFIER . array
  130 function_call: TOK_IDENTIFIER . declarator

    TOK_OPENPAR    shift, and go to state 57
    TOK_OPENSQ     shift, and go to state 58
    TOK_DOUBLEDOT  shift, and go to state 59

    $default  reduce using rule 102 (array)

    array       go to state 60
    declarator  go to state 61


state 2

   92 expr: TOK_B_NOT . expr

    TOK_IDENTIFIER      shift, and go to state 62
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_OPENPAR         shift, and go to state 6
    TOK_ROM_CONST       shift, and go to state 14
    TOK_INT_CONST       shift, and go to state 15
    TOK_FLOAT_CONST     shift, and go to state 16
    TOK_STRING_LITERAL  shift, and go to state 26

    left_assign_expr  go to state 63
    expr              go to state 64
    struct_item       go to state 51
    identifier        go to state 52
    const             go to state 53
    function_call     go to state 56


state 3

   93 expr: TOK_AR_MINUS . expr

    TOK_IDENTIFIER      shift, and go to state 62
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_OPENPAR         shift, and go to state 6
    TOK_ROM_CONST       shift, and go to state 14
    TOK_INT_CONST       shift, and go to state 15
    TOK_FLOAT_CONST     shift, and go to state 16
    TOK_STRING_LITERAL  shift, and go to state 26

    left_assign_expr  go to state 63
    expr              go to state 65
    struct_item       go to state 51
    identifier        go to state 52
    const             go to state 53
    function_call     go to state 56


state 4

   63 if_stmt: TOK_IF . TOK_OPENPAR expr TOK_CLOSEPAR instruction_body
   64        | TOK_IF . TOK_OPENPAR expr TOK_CLOSEPAR instruction_body TOK_ELSE instruction_body
   65        | TOK_IF . TOK_OPENPAR expr error

    TOK_OPENPAR  shift, and go to state 66


state 5

   26 expression_statement: TOK_ENDEXPR .

    $default  reduce using rule 26 (expression_statement)


state 6

  100 expr: TOK_OPENPAR . expr error
  101     | TOK_OPENPAR . expr TOK_CLOSEPAR

    TOK_IDENTIFIER      shift, and go to state 62
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_OPENPAR         shift, and go to state 6
    TOK_ROM_CONST       shift, and go to state 14
    TOK_INT_CONST       shift, and go to state 15
    TOK_FLOAT_CONST     shift, and go to state 16
    TOK_STRING_LITERAL  shift, and go to state 26

    left_assign_expr  go to state 63
    expr              go to state 67
    struct_item       go to state 51
    identifier        go to state 52
    const             go to state 53
    function_call     go to state 56


state 7

   78 type_name: TOK_ROM_DECL .

    $default  reduce using rule 78 (type_name)


state 8

   80 type_name: TOK_INT_DECL .

    $default  reduce using rule 80 (type_name)


state 9

   79 type_name: TOK_FLOAT_DECL .

    $default  reduce using rule 79 (type_name)


state 10

   81 type_name: TOK_VOID_DECL .

    $default  reduce using rule 81 (type_name)


state 11

   72 for_decl: TOK_FOR_DECL .

    $default  reduce using rule 72 (for_decl)


state 12

   73 while_decl: TOK_WHILE_DECL .

    $default  reduce using rule 73 (while_decl)


state 13

   74 do_while_decl: TOK_DO_DECL .

    $default  reduce using rule 74 (do_while_decl)


state 14

  109 const: TOK_ROM_CONST .

    $default  reduce using rule 109 (const)


state 15

  108 const: TOK_INT_CONST .

    $default  reduce using rule 108 (const)


state 16

  110 const: TOK_FLOAT_CONST .

    $default  reduce using rule 110 (const)


state 17

   55 print_stmt: TOK_PRINT . TOK_OPENPAR expr TOK_CLOSEPAR TOK_ENDEXPR
   56           | TOK_PRINT . error
   57           | TOK_PRINT . TOK_OPENPAR expr error
   58           | TOK_PRINT . TOK_OPENPAR expr TOK_CLOSEPAR error

    error        shift, and go to state 68
    TOK_OPENPAR  shift, and go to state 69


state 18

   59 read_stmt: TOK_READ . TOK_OPENPAR left_assign_expr TOK_CLOSEPAR TOK_ENDEXPR
   60          | TOK_READ . error
   61          | TOK_READ . TOK_OPENPAR left_assign_expr error
   62          | TOK_READ . TOK_OPENPAR left_assign_expr TOK_CLOSEPAR error

    error        shift, and go to state 70
    TOK_OPENPAR  shift, and go to state 71


state 19

   30 lexemes: TOK_BREAK .

    $default  reduce using rule 30 (lexemes)


state 20

   31 lexemes: TOK_CONTINUE .

    $default  reduce using rule 31 (lexemes)


state 21

   29 lexemes: TOK_GOTO . TOK_IDENTIFIER

    TOK_IDENTIFIER  shift, and go to state 72


state 22

   32 lexemes: TOK_RETURN .
   33        | TOK_RETURN . expr

    TOK_IDENTIFIER      shift, and go to state 62
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_OPENPAR         shift, and go to state 6
    TOK_ROM_CONST       shift, and go to state 14
    TOK_INT_CONST       shift, and go to state 15
    TOK_FLOAT_CONST     shift, and go to state 16
    TOK_STRING_LITERAL  shift, and go to state 26

    $default  reduce using rule 32 (lexemes)

    left_assign_expr  go to state 63
    expr              go to state 73
    struct_item       go to state 51
    identifier        go to state 52
    const             go to state 53
    function_call     go to state 56


state 23

   51 struct_type: TOK_STRUCT .

    $default  reduce using rule 51 (struct_type)


state 24

   52 struct_type: TOK_UNION .

    $default  reduce using rule 52 (struct_type)


state 25

  114 switch_head: TOK_SWITCH . TOK_OPENPAR expr TOK_CLOSEPAR TOK_OPENBR

    TOK_OPENPAR  shift, and go to state 74


state 26

  111 const: TOK_STRING_LITERAL .

    $default  reduce using rule 111 (const)


state 27

    0 $accept: start . $end

    $end  shift, and go to state 75


state 28

    2 start: declaration_list . stmnt_list
    3      | declaration_list . functions_def_list stmnt_list
    4      | declaration_list .
   10 declaration_list: declaration_list . declaration_block TOK_ENDEXPR

    TOK_IDENTIFIER      shift, and go to state 1
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_IF              shift, and go to state 4
    TOK_ENDEXPR         shift, and go to state 5
    TOK_OPENPAR         shift, and go to state 6
    TOK_ROM_DECL        shift, and go to state 7
    TOK_INT_DECL        shift, and go to state 8
    TOK_FLOAT_DECL      shift, and go to state 9
    TOK_VOID_DECL       shift, and go to state 10
    TOK_FOR_DECL        shift, and go to state 11
    TOK_WHILE_DECL      shift, and go to state 12
    TOK_DO_DECL         shift, and go to state 13
    TOK_ROM_CONST       shift, and go to state 14
    TOK_INT_CONST       shift, and go to state 15
    TOK_FLOAT_CONST     shift, and go to state 16
    TOK_PRINT           shift, and go to state 17
    TOK_READ            shift, and go to state 18
    TOK_BREAK           shift, and go to state 19
    TOK_CONTINUE        shift, and go to state 20
    TOK_GOTO            shift, and go to state 21
    TOK_RETURN          shift, and go to state 22
    TOK_STRUCT          shift, and go to state 23
    TOK_UNION           shift, and go to state 24
    TOK_SWITCH          shift, and go to state 25
    TOK_STRING_LITERAL  shift, and go to state 26

    $default  reduce using rule 4 (start)

    functions_def_list    go to state 76
    stmnt_list            go to state 77
    expr_or_assignment    go to state 30
    expression_statement  go to state 31
    lexemes               go to state 32
    stmnt                 go to state 33
    declaration_block     go to state 78
    declaration_stmt      go to state 35
    struct_def            go to state 36
    struct_head           go to state 37
    struct_type           go to state 38
    print_stmt            go to state 39
    read_stmt             go to state 40
    if_stmt               go to state 41
    loop_decl             go to state 42
    for_decl              go to state 43
    while_decl            go to state 44
    do_while_decl         go to state 45
    type                  go to state 79
    type_name             go to state 47
    left_assign_expr      go to state 48
    assignment            go to state 49
    expr                  go to state 50
    struct_item           go to state 51
    identifier            go to state 52
    const                 go to state 53
    switch_stmt           go to state 54
    switch_head           go to state 55
    function_call         go to state 56
    function_def_head     go to state 80
    function_def          go to state 81


state 29

    5 start: stmnt_list .
    6      | stmnt_list . declaration_list
   13 stmnt_list: stmnt_list . stmnt

    TOK_IDENTIFIER      shift, and go to state 1
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_IF              shift, and go to state 4
    TOK_ENDEXPR         shift, and go to state 5
    TOK_OPENPAR         shift, and go to state 6
    TOK_ROM_DECL        shift, and go to state 7
    TOK_INT_DECL        shift, and go to state 8
    TOK_FLOAT_DECL      shift, and go to state 9
    TOK_VOID_DECL       shift, and go to state 10
    TOK_FOR_DECL        shift, and go to state 11
    TOK_WHILE_DECL      shift, and go to state 12
    TOK_DO_DECL         shift, and go to state 13
    TOK_ROM_CONST       shift, and go to state 14
    TOK_INT_CONST       shift, and go to state 15
    TOK_FLOAT_CONST     shift, and go to state 16
    TOK_PRINT           shift, and go to state 17
    TOK_READ            shift, and go to state 18
    TOK_BREAK           shift, and go to state 19
    TOK_CONTINUE        shift, and go to state 20
    TOK_GOTO            shift, and go to state 21
    TOK_RETURN          shift, and go to state 22
    TOK_STRUCT          shift, and go to state 23
    TOK_UNION           shift, and go to state 24
    TOK_SWITCH          shift, and go to state 25
    TOK_STRING_LITERAL  shift, and go to state 26

    $default  reduce using rule 5 (start)

    declaration_list      go to state 82
    expr_or_assignment    go to state 30
    expression_statement  go to state 31
    lexemes               go to state 32
    stmnt                 go to state 83
    declaration_block     go to state 34
    declaration_stmt      go to state 35
    struct_def            go to state 36
    struct_head           go to state 37
    struct_type           go to state 38
    print_stmt            go to state 39
    read_stmt             go to state 40
    if_stmt               go to state 41
    loop_decl             go to state 42
    for_decl              go to state 43
    while_decl            go to state 44
    do_while_decl         go to state 45
    type                  go to state 46
    type_name             go to state 47
    left_assign_expr      go to state 48
    assignment            go to state 49
    expr                  go to state 50
    struct_item           go to state 51
    identifier            go to state 52
    const                 go to state 53
    switch_stmt           go to state 54
    switch_head           go to state 55
    function_call         go to state 56


state 30

   27 expression_statement: expr_or_assignment . TOK_ENDEXPR

    TOK_ENDEXPR  shift, and go to state 84


state 31

   34 stmnt: expression_statement .

    $default  reduce using rule 34 (stmnt)


state 32

   41 stmnt: lexemes . TOK_ENDEXPR
   42      | lexemes . error

    error        shift, and go to state 85
    TOK_ENDEXPR  shift, and go to state 86


state 33

   12 stmnt_list: stmnt .

    $default  reduce using rule 12 (stmnt_list)


state 34

    9 declaration_list: declaration_block . TOK_ENDEXPR
   11                 | declaration_block . error

    error        shift, and go to state 87
    TOK_ENDEXPR  shift, and go to state 88


state 35

   43 declaration_block: declaration_stmt .

    $default  reduce using rule 43 (declaration_block)


state 36

   44 declaration_block: struct_def .

    $default  reduce using rule 44 (declaration_block)


state 37

   46 struct_def: struct_head . struct_body struct_tail
   47           | struct_head . error
   48           | struct_head . struct_body error

    error       shift, and go to state 89
    TOK_OPENBR  shift, and go to state 90

    struct_body  go to state 91


state 38

   49 struct_head: struct_type . TOK_IDENTIFIER
   50            | struct_type . error
   82 type_name: struct_type . TOK_IDENTIFIER

    error           shift, and go to state 92
    TOK_IDENTIFIER  shift, and go to state 93


state 39

   39 stmnt: print_stmt .

    $default  reduce using rule 39 (stmnt)


state 40

   40 stmnt: read_stmt .

    $default  reduce using rule 40 (stmnt)


state 41

   36 stmnt: if_stmt .

    $default  reduce using rule 36 (stmnt)


state 42

   37 stmnt: loop_decl .

    $default  reduce using rule 37 (stmnt)


state 43

   66 loop_decl: for_decl . loop_for_expr instruction_body

    TOK_OPENPAR  shift, and go to state 94

    loop_for_expr  go to state 95


state 44

   67 loop_decl: while_decl . loop_while_expr instruction_body

    TOK_OPENPAR  shift, and go to state 96

    loop_while_expr  go to state 97


state 45

   68 loop_decl: do_while_decl . instruction_body TOK_WHILE_DECL loop_while_expr TOK_ENDEXPR

    TOK_IDENTIFIER      shift, and go to state 1
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_IF              shift, and go to state 4
    TOK_ENDEXPR         shift, and go to state 5
    TOK_OPENPAR         shift, and go to state 6
    TOK_OPENBR          shift, and go to state 98
    TOK_FOR_DECL        shift, and go to state 11
    TOK_WHILE_DECL      shift, and go to state 12
    TOK_DO_DECL         shift, and go to state 13
    TOK_ROM_CONST       shift, and go to state 14
    TOK_INT_CONST       shift, and go to state 15
    TOK_FLOAT_CONST     shift, and go to state 16
    TOK_PRINT           shift, and go to state 17
    TOK_READ            shift, and go to state 18
    TOK_BREAK           shift, and go to state 19
    TOK_CONTINUE        shift, and go to state 20
    TOK_GOTO            shift, and go to state 21
    TOK_RETURN          shift, and go to state 22
    TOK_SWITCH          shift, and go to state 25
    TOK_STRING_LITERAL  shift, and go to state 26

    stmnt_block_start     go to state 99
    stmnt_block           go to state 100
    expr_or_assignment    go to state 30
    expression_statement  go to state 31
    lexemes               go to state 32
    stmnt                 go to state 101
    print_stmt            go to state 39
    read_stmt             go to state 40
    if_stmt               go to state 41
    loop_decl             go to state 42
    for_decl              go to state 43
    while_decl            go to state 44
    do_while_decl         go to state 45
    instruction_body      go to state 102
    left_assign_expr      go to state 48
    assignment            go to state 49
    expr                  go to state 50
    struct_item           go to state 51
    identifier            go to state 52
    const                 go to state 53
    switch_stmt           go to state 54
    switch_head           go to state 55
    function_call         go to state 56


state 46

   45 declaration_stmt: type . TOK_IDENTIFIER

    TOK_IDENTIFIER  shift, and go to state 103


state 47

   77 type: type_name . array

    TOK_OPENSQ  shift, and go to state 58

    $default  reduce using rule 102 (array)

    array  go to state 104


state 48

   85 assignment: left_assign_expr . TOK_ASSIGN_OP expr
   86 expr: left_assign_expr .

    TOK_ASSIGN_OP  shift, and go to state 105

    $default  reduce using rule 86 (expr)


state 49

   25 expr_or_assignment: assignment .

    $default  reduce using rule 25 (expr_or_assignment)


state 50

   24 expr_or_assignment: expr .
   28 expression_statement: expr . error
   89 expr: expr . TOK_B_AND expr
   90     | expr . TOK_B_OR expr
   91     | expr . TOK_B_XOR expr
   94     | expr . TOK_AR_PLUS expr
   95     | expr . TOK_AR_MINUS expr
   96     | expr . TOK_AR_MUL expr
   97     | expr . TOK_AR_DIV expr
   98     | expr . TOK_AR_MOD expr
   99     | expr . TOK_COMP_OP expr

    error         shift, and go to state 106
    TOK_B_AND     shift, and go to state 107
    TOK_B_OR      shift, and go to state 108
    TOK_B_XOR     shift, and go to state 109
    TOK_AR_PLUS   shift, and go to state 110
    TOK_AR_MINUS  shift, and go to state 111
    TOK_AR_MUL    shift, and go to state 112
    TOK_AR_DIV    shift, and go to state 113
    TOK_AR_MOD    shift, and go to state 114
    TOK_COMP_OP   shift, and go to state 115

    TOK_ENDEXPR  reduce using rule 24 (expr_or_assignment)


state 51

   84 left_assign_expr: struct_item .

    $default  reduce using rule 84 (left_assign_expr)


state 52

   83 left_assign_expr: identifier .
  106 struct_item: identifier . TOK_DOT TOK_IDENTIFIER

    TOK_DOT  shift, and go to state 116

    $default  reduce using rule 83 (left_assign_expr)


state 53

   87 expr: const .

    $default  reduce using rule 87 (expr)


state 54

   38 stmnt: switch_stmt .

    $default  reduce using rule 38 (stmnt)


state 55

  112 switch_stmt: switch_head . case_list default TOK_CLOSEBR
  113            | switch_head . case_list TOK_CLOSEBR

    TOK_CASE  shift, and go to state 117

    case_list  go to state 118
    case_stmt  go to state 119
    case_head  go to state 120


state 56

   88 expr: function_call .

    $default  reduce using rule 88 (expr)


state 57

  128 declarator: TOK_OPENPAR . parameter_type_list TOK_CLOSEPAR
  129           | TOK_OPENPAR . TOK_CLOSEPAR

    TOK_IDENTIFIER      shift, and go to state 62
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_OPENPAR         shift, and go to state 6
    TOK_CLOSEPAR        shift, and go to state 121
    TOK_ROM_DECL        shift, and go to state 7
    TOK_INT_DECL        shift, and go to state 8
    TOK_FLOAT_DECL      shift, and go to state 9
    TOK_VOID_DECL       shift, and go to state 10
    TOK_ROM_CONST       shift, and go to state 14
    TOK_INT_CONST       shift, and go to state 15
    TOK_FLOAT_CONST     shift, and go to state 16
    TOK_STRUCT          shift, and go to state 23
    TOK_UNION           shift, and go to state 24
    TOK_STRING_LITERAL  shift, and go to state 26

    declaration_stmt     go to state 122
    struct_type          go to state 123
    type                 go to state 46
    type_name            go to state 47
    left_assign_expr     go to state 63
    expr                 go to state 124
    struct_item          go to state 51
    identifier           go to state 52
    const                go to state 53
    parameter            go to state 125
    parameter_list       go to state 126
    parameter_type_list  go to state 127
    function_call        go to state 56


state 58

  103 array: TOK_OPENSQ . expr TOK_CLOSESQ array
  104      | TOK_OPENSQ . error
  105      | TOK_OPENSQ . expr error

    error               shift, and go to state 128
    TOK_IDENTIFIER      shift, and go to state 62
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_OPENPAR         shift, and go to state 6
    TOK_ROM_CONST       shift, and go to state 14
    TOK_INT_CONST       shift, and go to state 15
    TOK_FLOAT_CONST     shift, and go to state 16
    TOK_STRING_LITERAL  shift, and go to state 26

    left_assign_expr  go to state 63
    expr              go to state 129
    struct_item       go to state 51
    identifier        go to state 52
    const             go to state 53
    function_call     go to state 56


state 59

   35 stmnt: TOK_IDENTIFIER TOK_DOUBLEDOT .

    $default  reduce using rule 35 (stmnt)


state 60

  107 identifier: TOK_IDENTIFIER array .

    $default  reduce using rule 107 (identifier)


state 61

  130 function_call: TOK_IDENTIFIER declarator .

    $default  reduce using rule 130 (function_call)


state 62

  107 identifier: TOK_IDENTIFIER . array
  130 function_call: TOK_IDENTIFIER . declarator

    TOK_OPENPAR  shift, and go to state 57
    TOK_OPENSQ   shift, and go to state 58

    $default  reduce using rule 102 (array)

    array       go to state 60
    declarator  go to state 61


state 63

   86 expr: left_assign_expr .

    $default  reduce using rule 86 (expr)


state 64

   89 expr: expr . TOK_B_AND expr
   90     | expr . TOK_B_OR expr
   91     | expr . TOK_B_XOR expr
   92     | TOK_B_NOT expr .
   94     | expr . TOK_AR_PLUS expr
   95     | expr . TOK_AR_MINUS expr
   96     | expr . TOK_AR_MUL expr
   97     | expr . TOK_AR_DIV expr
   98     | expr . TOK_AR_MOD expr
   99     | expr . TOK_COMP_OP expr

    $default  reduce using rule 92 (expr)


state 65

   89 expr: expr . TOK_B_AND expr
   90     | expr . TOK_B_OR expr
   91     | expr . TOK_B_XOR expr
   93     | TOK_AR_MINUS expr .
   94     | expr . TOK_AR_PLUS expr
   95     | expr . TOK_AR_MINUS expr
   96     | expr . TOK_AR_MUL expr
   97     | expr . TOK_AR_DIV expr
   98     | expr . TOK_AR_MOD expr
   99     | expr . TOK_COMP_OP expr

    $default  reduce using rule 93 (expr)


state 66

   63 if_stmt: TOK_IF TOK_OPENPAR . expr TOK_CLOSEPAR instruction_body
   64        | TOK_IF TOK_OPENPAR . expr TOK_CLOSEPAR instruction_body TOK_ELSE instruction_body
   65        | TOK_IF TOK_OPENPAR . expr error

    TOK_IDENTIFIER      shift, and go to state 62
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_OPENPAR         shift, and go to state 6
    TOK_ROM_CONST       shift, and go to state 14
    TOK_INT_CONST       shift, and go to state 15
    TOK_FLOAT_CONST     shift, and go to state 16
    TOK_STRING_LITERAL  shift, and go to state 26

    left_assign_expr  go to state 63
    expr              go to state 130
    struct_item       go to state 51
    identifier        go to state 52
    const             go to state 53
    function_call     go to state 56


state 67

   89 expr: expr . TOK_B_AND expr
   90     | expr . TOK_B_OR expr
   91     | expr . TOK_B_XOR expr
   94     | expr . TOK_AR_PLUS expr
   95     | expr . TOK_AR_MINUS expr
   96     | expr . TOK_AR_MUL expr
   97     | expr . TOK_AR_DIV expr
   98     | expr . TOK_AR_MOD expr
   99     | expr . TOK_COMP_OP expr
  100     | TOK_OPENPAR expr . error
  101     | TOK_OPENPAR expr . TOK_CLOSEPAR

    error         shift, and go to state 131
    TOK_B_AND     shift, and go to state 107
    TOK_B_OR      shift, and go to state 108
    TOK_B_XOR     shift, and go to state 109
    TOK_AR_PLUS   shift, and go to state 110
    TOK_AR_MINUS  shift, and go to state 111
    TOK_AR_MUL    shift, and go to state 112
    TOK_AR_DIV    shift, and go to state 113
    TOK_AR_MOD    shift, and go to state 114
    TOK_COMP_OP   shift, and go to state 115
    TOK_CLOSEPAR  shift, and go to state 132


state 68

   56 print_stmt: TOK_PRINT error .

    $default  reduce using rule 56 (print_stmt)


state 69

   55 print_stmt: TOK_PRINT TOK_OPENPAR . expr TOK_CLOSEPAR TOK_ENDEXPR
   57           | TOK_PRINT TOK_OPENPAR . expr error
   58           | TOK_PRINT TOK_OPENPAR . expr TOK_CLOSEPAR error

    TOK_IDENTIFIER      shift, and go to state 62
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_OPENPAR         shift, and go to state 6
    TOK_ROM_CONST       shift, and go to state 14
    TOK_INT_CONST       shift, and go to state 15
    TOK_FLOAT_CONST     shift, and go to state 16
    TOK_STRING_LITERAL  shift, and go to state 26

    left_assign_expr  go to state 63
    expr              go to state 133
    struct_item       go to state 51
    identifier        go to state 52
    const             go to state 53
    function_call     go to state 56


state 70

   60 read_stmt: TOK_READ error .

    $default  reduce using rule 60 (read_stmt)


state 71

   59 read_stmt: TOK_READ TOK_OPENPAR . left_assign_expr TOK_CLOSEPAR TOK_ENDEXPR
   61          | TOK_READ TOK_OPENPAR . left_assign_expr error
   62          | TOK_READ TOK_OPENPAR . left_assign_expr TOK_CLOSEPAR error

    TOK_IDENTIFIER  shift, and go to state 134

    left_assign_expr  go to state 135
    struct_item       go to state 51
    identifier        go to state 52


state 72

   29 lexemes: TOK_GOTO TOK_IDENTIFIER .

    $default  reduce using rule 29 (lexemes)


state 73

   33 lexemes: TOK_RETURN expr .
   89 expr: expr . TOK_B_AND expr
   90     | expr . TOK_B_OR expr
   91     | expr . TOK_B_XOR expr
   94     | expr . TOK_AR_PLUS expr
   95     | expr . TOK_AR_MINUS expr
   96     | expr . TOK_AR_MUL expr
   97     | expr . TOK_AR_DIV expr
   98     | expr . TOK_AR_MOD expr
   99     | expr . TOK_COMP_OP expr

    TOK_B_AND     shift, and go to state 107
    TOK_B_OR      shift, and go to state 108
    TOK_B_XOR     shift, and go to state 109
    TOK_AR_PLUS   shift, and go to state 110
    TOK_AR_MINUS  shift, and go to state 111
    TOK_AR_MUL    shift, and go to state 112
    TOK_AR_DIV    shift, and go to state 113
    TOK_AR_MOD    shift, and go to state 114
    TOK_COMP_OP   shift, and go to state 115

    $default  reduce using rule 33 (lexemes)


state 74

  114 switch_head: TOK_SWITCH TOK_OPENPAR . expr TOK_CLOSEPAR TOK_OPENBR

    TOK_IDENTIFIER      shift, and go to state 62
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_OPENPAR         shift, and go to state 6
    TOK_ROM_CONST       shift, and go to state 14
    TOK_INT_CONST       shift, and go to state 15
    TOK_FLOAT_CONST     shift, and go to state 16
    TOK_STRING_LITERAL  shift, and go to state 26

    left_assign_expr  go to state 63
    expr              go to state 136
    struct_item       go to state 51
    identifier        go to state 52
    const             go to state 53
    function_call     go to state 56


state 75

    0 $accept: start $end .

    $default  accept


state 76

    3 start: declaration_list functions_def_list . stmnt_list
    8 functions_def_list: functions_def_list . function_def

    TOK_IDENTIFIER      shift, and go to state 1
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_IF              shift, and go to state 4
    TOK_ENDEXPR         shift, and go to state 5
    TOK_OPENPAR         shift, and go to state 6
    TOK_ROM_DECL        shift, and go to state 7
    TOK_INT_DECL        shift, and go to state 8
    TOK_FLOAT_DECL      shift, and go to state 9
    TOK_VOID_DECL       shift, and go to state 10
    TOK_FOR_DECL        shift, and go to state 11
    TOK_WHILE_DECL      shift, and go to state 12
    TOK_DO_DECL         shift, and go to state 13
    TOK_ROM_CONST       shift, and go to state 14
    TOK_INT_CONST       shift, and go to state 15
    TOK_FLOAT_CONST     shift, and go to state 16
    TOK_PRINT           shift, and go to state 17
    TOK_READ            shift, and go to state 18
    TOK_BREAK           shift, and go to state 19
    TOK_CONTINUE        shift, and go to state 20
    TOK_GOTO            shift, and go to state 21
    TOK_RETURN          shift, and go to state 22
    TOK_STRUCT          shift, and go to state 23
    TOK_UNION           shift, and go to state 24
    TOK_SWITCH          shift, and go to state 25
    TOK_STRING_LITERAL  shift, and go to state 26

    stmnt_list            go to state 137
    expr_or_assignment    go to state 30
    expression_statement  go to state 31
    lexemes               go to state 32
    stmnt                 go to state 33
    struct_type           go to state 123
    print_stmt            go to state 39
    read_stmt             go to state 40
    if_stmt               go to state 41
    loop_decl             go to state 42
    for_decl              go to state 43
    while_decl            go to state 44
    do_while_decl         go to state 45
    type                  go to state 138
    type_name             go to state 47
    left_assign_expr      go to state 48
    assignment            go to state 49
    expr                  go to state 50
    struct_item           go to state 51
    identifier            go to state 52
    const                 go to state 53
    switch_stmt           go to state 54
    switch_head           go to state 55
    function_call         go to state 56
    function_def_head     go to state 80
    function_def          go to state 139


state 77

    2 start: declaration_list stmnt_list .
   13 stmnt_list: stmnt_list . stmnt

    TOK_IDENTIFIER      shift, and go to state 1
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_IF              shift, and go to state 4
    TOK_ENDEXPR         shift, and go to state 5
    TOK_OPENPAR         shift, and go to state 6
    TOK_FOR_DECL        shift, and go to state 11
    TOK_WHILE_DECL      shift, and go to state 12
    TOK_DO_DECL         shift, and go to state 13
    TOK_ROM_CONST       shift, and go to state 14
    TOK_INT_CONST       shift, and go to state 15
    TOK_FLOAT_CONST     shift, and go to state 16
    TOK_PRINT           shift, and go to state 17
    TOK_READ            shift, and go to state 18
    TOK_BREAK           shift, and go to state 19
    TOK_CONTINUE        shift, and go to state 20
    TOK_GOTO            shift, and go to state 21
    TOK_RETURN          shift, and go to state 22
    TOK_SWITCH          shift, and go to state 25
    TOK_STRING_LITERAL  shift, and go to state 26

    $default  reduce using rule 2 (start)

    expr_or_assignment    go to state 30
    expression_statement  go to state 31
    lexemes               go to state 32
    stmnt                 go to state 83
    print_stmt            go to state 39
    read_stmt             go to state 40
    if_stmt               go to state 41
    loop_decl             go to state 42
    for_decl              go to state 43
    while_decl            go to state 44
    do_while_decl         go to state 45
    left_assign_expr      go to state 48
    assignment            go to state 49
    expr                  go to state 50
    struct_item           go to state 51
    identifier            go to state 52
    const                 go to state 53
    switch_stmt           go to state 54
    switch_head           go to state 55
    function_call         go to state 56


state 78

   10 declaration_list: declaration_list declaration_block . TOK_ENDEXPR

    TOK_ENDEXPR  shift, and go to state 140


state 79

   45 declaration_stmt: type . TOK_IDENTIFIER
  131 function_def_head: type . TOK_IDENTIFIER

    TOK_IDENTIFIER  shift, and go to state 141


state 80

  133 function_def: function_def_head . func_declarator stmnt_block
  134             | function_def_head . func_declarator error

    TOK_OPENPAR  shift, and go to state 57

    declarator       go to state 142
    func_declarator  go to state 143


state 81

    7 functions_def_list: function_def .

    $default  reduce using rule 7 (functions_def_list)


state 82

    6 start: stmnt_list declaration_list .
   10 declaration_list: declaration_list . declaration_block TOK_ENDEXPR

    TOK_ROM_DECL    shift, and go to state 7
    TOK_INT_DECL    shift, and go to state 8
    TOK_FLOAT_DECL  shift, and go to state 9
    TOK_VOID_DECL   shift, and go to state 10
    TOK_STRUCT      shift, and go to state 23
    TOK_UNION       shift, and go to state 24

    $default  reduce using rule 6 (start)

    declaration_block  go to state 78
    declaration_stmt   go to state 35
    struct_def         go to state 36
    struct_head        go to state 37
    struct_type        go to state 38
    type               go to state 46
    type_name          go to state 47


state 83

   13 stmnt_list: stmnt_list stmnt .

    $default  reduce using rule 13 (stmnt_list)


state 84

   27 expression_statement: expr_or_assignment TOK_ENDEXPR .

    $default  reduce using rule 27 (expression_statement)


state 85

   42 stmnt: lexemes error .

    $default  reduce using rule 42 (stmnt)


state 86

   41 stmnt: lexemes TOK_ENDEXPR .

    $default  reduce using rule 41 (stmnt)


state 87

   11 declaration_list: declaration_block error .

    $default  reduce using rule 11 (declaration_list)


state 88

    9 declaration_list: declaration_block TOK_ENDEXPR .

    $default  reduce using rule 9 (declaration_list)


state 89

   47 struct_def: struct_head error .

    $default  reduce using rule 47 (struct_def)


state 90

   53 struct_body: TOK_OPENBR . declaration_list

    TOK_ROM_DECL    shift, and go to state 7
    TOK_INT_DECL    shift, and go to state 8
    TOK_FLOAT_DECL  shift, and go to state 9
    TOK_VOID_DECL   shift, and go to state 10
    TOK_STRUCT      shift, and go to state 23
    TOK_UNION       shift, and go to state 24

    declaration_list   go to state 144
    declaration_block  go to state 34
    declaration_stmt   go to state 35
    struct_def         go to state 36
    struct_head        go to state 37
    struct_type        go to state 38
    type               go to state 46
    type_name          go to state 47


state 91

   46 struct_def: struct_head struct_body . struct_tail
   48           | struct_head struct_body . error

    error        shift, and go to state 145
    TOK_CLOSEBR  shift, and go to state 146

    struct_tail  go to state 147


state 92

   50 struct_head: struct_type error .

    $default  reduce using rule 50 (struct_head)


state 93

   49 struct_head: struct_type TOK_IDENTIFIER .
   82 type_name: struct_type TOK_IDENTIFIER .

    TOK_IDENTIFIER  reduce using rule 82 (type_name)
    TOK_OPENSQ      reduce using rule 82 (type_name)
    $default        reduce using rule 49 (struct_head)


state 94

   70 loop_for_expr: TOK_OPENPAR . expression_statement expression_statement TOK_CLOSEPAR
   71              | TOK_OPENPAR . expression_statement expression_statement expr_or_assignment TOK_CLOSEPAR

    TOK_IDENTIFIER      shift, and go to state 62
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_ENDEXPR         shift, and go to state 5
    TOK_OPENPAR         shift, and go to state 6
    TOK_ROM_CONST       shift, and go to state 14
    TOK_INT_CONST       shift, and go to state 15
    TOK_FLOAT_CONST     shift, and go to state 16
    TOK_STRING_LITERAL  shift, and go to state 26

    expr_or_assignment    go to state 30
    expression_statement  go to state 148
    left_assign_expr      go to state 48
    assignment            go to state 49
    expr                  go to state 50
    struct_item           go to state 51
    identifier            go to state 52
    const                 go to state 53
    function_call         go to state 56


state 95

   66 loop_decl: for_decl loop_for_expr . instruction_body

    TOK_IDENTIFIER      shift, and go to state 1
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_IF              shift, and go to state 4
    TOK_ENDEXPR         shift, and go to state 5
    TOK_OPENPAR         shift, and go to state 6
    TOK_OPENBR          shift, and go to state 98
    TOK_FOR_DECL        shift, and go to state 11
    TOK_WHILE_DECL      shift, and go to state 12
    TOK_DO_DECL         shift, and go to state 13
    TOK_ROM_CONST       shift, and go to state 14
    TOK_INT_CONST       shift, and go to state 15
    TOK_FLOAT_CONST     shift, and go to state 16
    TOK_PRINT           shift, and go to state 17
    TOK_READ            shift, and go to state 18
    TOK_BREAK           shift, and go to state 19
    TOK_CONTINUE        shift, and go to state 20
    TOK_GOTO            shift, and go to state 21
    TOK_RETURN          shift, and go to state 22
    TOK_SWITCH          shift, and go to state 25
    TOK_STRING_LITERAL  shift, and go to state 26

    stmnt_block_start     go to state 99
    stmnt_block           go to state 100
    expr_or_assignment    go to state 30
    expression_statement  go to state 31
    lexemes               go to state 32
    stmnt                 go to state 101
    print_stmt            go to state 39
    read_stmt             go to state 40
    if_stmt               go to state 41
    loop_decl             go to state 42
    for_decl              go to state 43
    while_decl            go to state 44
    do_while_decl         go to state 45
    instruction_body      go to state 149
    left_assign_expr      go to state 48
    assignment            go to state 49
    expr                  go to state 50
    struct_item           go to state 51
    identifier            go to state 52
    const                 go to state 53
    switch_stmt           go to state 54
    switch_head           go to state 55
    function_call         go to state 56


state 96

   69 loop_while_expr: TOK_OPENPAR . expr TOK_CLOSEPAR

    TOK_IDENTIFIER      shift, and go to state 62
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_OPENPAR         shift, and go to state 6
    TOK_ROM_CONST       shift, and go to state 14
    TOK_INT_CONST       shift, and go to state 15
    TOK_FLOAT_CONST     shift, and go to state 16
    TOK_STRING_LITERAL  shift, and go to state 26

    left_assign_expr  go to state 63
    expr              go to state 150
    struct_item       go to state 51
    identifier        go to state 52
    const             go to state 53
    function_call     go to state 56


state 97

   67 loop_decl: while_decl loop_while_expr . instruction_body

    TOK_IDENTIFIER      shift, and go to state 1
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_IF              shift, and go to state 4
    TOK_ENDEXPR         shift, and go to state 5
    TOK_OPENPAR         shift, and go to state 6
    TOK_OPENBR          shift, and go to state 98
    TOK_FOR_DECL        shift, and go to state 11
    TOK_WHILE_DECL      shift, and go to state 12
    TOK_DO_DECL         shift, and go to state 13
    TOK_ROM_CONST       shift, and go to state 14
    TOK_INT_CONST       shift, and go to state 15
    TOK_FLOAT_CONST     shift, and go to state 16
    TOK_PRINT           shift, and go to state 17
    TOK_READ            shift, and go to state 18
    TOK_BREAK           shift, and go to state 19
    TOK_CONTINUE        shift, and go to state 20
    TOK_GOTO            shift, and go to state 21
    TOK_RETURN          shift, and go to state 22
    TOK_SWITCH          shift, and go to state 25
    TOK_STRING_LITERAL  shift, and go to state 26

    stmnt_block_start     go to state 99
    stmnt_block           go to state 100
    expr_or_assignment    go to state 30
    expression_statement  go to state 31
    lexemes               go to state 32
    stmnt                 go to state 101
    print_stmt            go to state 39
    read_stmt             go to state 40
    if_stmt               go to state 41
    loop_decl             go to state 42
    for_decl              go to state 43
    while_decl            go to state 44
    do_while_decl         go to state 45
    instruction_body      go to state 151
    left_assign_expr      go to state 48
    assignment            go to state 49
    expr                  go to state 50
    struct_item           go to state 51
    identifier            go to state 52
    const                 go to state 53
    switch_stmt           go to state 54
    switch_head           go to state 55
    function_call         go to state 56


state 98

   15 stmnt_block_start: TOK_OPENBR . $@1

    $default  reduce using rule 14 ($@1)

    $@1  go to state 152


state 99

   17 stmnt_block: stmnt_block_start . stmnt_list TOK_CLOSEBR $@2
   18            | stmnt_block_start . stmnt_list error
   20            | stmnt_block_start . declaration_list TOK_CLOSEBR $@3
   22            | stmnt_block_start . declaration_list stmnt_list TOK_CLOSEBR $@4
   23            | stmnt_block_start . declaration_list stmnt_list error

    TOK_IDENTIFIER      shift, and go to state 1
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_IF              shift, and go to state 4
    TOK_ENDEXPR         shift, and go to state 5
    TOK_OPENPAR         shift, and go to state 6
    TOK_ROM_DECL        shift, and go to state 7
    TOK_INT_DECL        shift, and go to state 8
    TOK_FLOAT_DECL      shift, and go to state 9
    TOK_VOID_DECL       shift, and go to state 10
    TOK_FOR_DECL        shift, and go to state 11
    TOK_WHILE_DECL      shift, and go to state 12
    TOK_DO_DECL         shift, and go to state 13
    TOK_ROM_CONST       shift, and go to state 14
    TOK_INT_CONST       shift, and go to state 15
    TOK_FLOAT_CONST     shift, and go to state 16
    TOK_PRINT           shift, and go to state 17
    TOK_READ            shift, and go to state 18
    TOK_BREAK           shift, and go to state 19
    TOK_CONTINUE        shift, and go to state 20
    TOK_GOTO            shift, and go to state 21
    TOK_RETURN          shift, and go to state 22
    TOK_STRUCT          shift, and go to state 23
    TOK_UNION           shift, and go to state 24
    TOK_SWITCH          shift, and go to state 25
    TOK_STRING_LITERAL  shift, and go to state 26

    declaration_list      go to state 153
    stmnt_list            go to state 154
    expr_or_assignment    go to state 30
    expression_statement  go to state 31
    lexemes               go to state 32
    stmnt                 go to state 33
    declaration_block     go to state 34
    declaration_stmt      go to state 35
    struct_def            go to state 36
    struct_head           go to state 37
    struct_type           go to state 38
    print_stmt            go to state 39
    read_stmt             go to state 40
    if_stmt               go to state 41
    loop_decl             go to state 42
    for_decl              go to state 43
    while_decl            go to state 44
    do_while_decl         go to state 45
    type                  go to state 46
    type_name             go to state 47
    left_assign_expr      go to state 48
    assignment            go to state 49
    expr                  go to state 50
    struct_item           go to state 51
    identifier            go to state 52
    const                 go to state 53
    switch_stmt           go to state 54
    switch_head           go to state 55
    function_call         go to state 56


state 100

   75 instruction_body: stmnt_block .

    $default  reduce using rule 75 (instruction_body)


state 101

   76 instruction_body: stmnt .

    $default  reduce using rule 76 (instruction_body)


state 102

   68 loop_decl: do_while_decl instruction_body . TOK_WHILE_DECL loop_while_expr TOK_ENDEXPR

    TOK_WHILE_DECL  shift, and go to state 155


state 103

   45 declaration_stmt: type TOK_IDENTIFIER .

    $default  reduce using rule 45 (declaration_stmt)


state 104

   77 type: type_name array .

    $default  reduce using rule 77 (type)


state 105

   85 assignment: left_assign_expr TOK_ASSIGN_OP . expr

    TOK_IDENTIFIER      shift, and go to state 62
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_OPENPAR         shift, and go to state 6
    TOK_ROM_CONST       shift, and go to state 14
    TOK_INT_CONST       shift, and go to state 15
    TOK_FLOAT_CONST     shift, and go to state 16
    TOK_STRING_LITERAL  shift, and go to state 26

    left_assign_expr  go to state 63
    expr              go to state 156
    struct_item       go to state 51
    identifier        go to state 52
    const             go to state 53
    function_call     go to state 56


state 106

   28 expression_statement: expr error .

    $default  reduce using rule 28 (expression_statement)


state 107

   89 expr: expr TOK_B_AND . expr

    TOK_IDENTIFIER      shift, and go to state 62
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_OPENPAR         shift, and go to state 6
    TOK_ROM_CONST       shift, and go to state 14
    TOK_INT_CONST       shift, and go to state 15
    TOK_FLOAT_CONST     shift, and go to state 16
    TOK_STRING_LITERAL  shift, and go to state 26

    left_assign_expr  go to state 63
    expr              go to state 157
    struct_item       go to state 51
    identifier        go to state 52
    const             go to state 53
    function_call     go to state 56


state 108

   90 expr: expr TOK_B_OR . expr

    TOK_IDENTIFIER      shift, and go to state 62
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_OPENPAR         shift, and go to state 6
    TOK_ROM_CONST       shift, and go to state 14
    TOK_INT_CONST       shift, and go to state 15
    TOK_FLOAT_CONST     shift, and go to state 16
    TOK_STRING_LITERAL  shift, and go to state 26

    left_assign_expr  go to state 63
    expr              go to state 158
    struct_item       go to state 51
    identifier        go to state 52
    const             go to state 53
    function_call     go to state 56


state 109

   91 expr: expr TOK_B_XOR . expr

    TOK_IDENTIFIER      shift, and go to state 62
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_OPENPAR         shift, and go to state 6
    TOK_ROM_CONST       shift, and go to state 14
    TOK_INT_CONST       shift, and go to state 15
    TOK_FLOAT_CONST     shift, and go to state 16
    TOK_STRING_LITERAL  shift, and go to state 26

    left_assign_expr  go to state 63
    expr              go to state 159
    struct_item       go to state 51
    identifier        go to state 52
    const             go to state 53
    function_call     go to state 56


state 110

   94 expr: expr TOK_AR_PLUS . expr

    TOK_IDENTIFIER      shift, and go to state 62
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_OPENPAR         shift, and go to state 6
    TOK_ROM_CONST       shift, and go to state 14
    TOK_INT_CONST       shift, and go to state 15
    TOK_FLOAT_CONST     shift, and go to state 16
    TOK_STRING_LITERAL  shift, and go to state 26

    left_assign_expr  go to state 63
    expr              go to state 160
    struct_item       go to state 51
    identifier        go to state 52
    const             go to state 53
    function_call     go to state 56


state 111

   95 expr: expr TOK_AR_MINUS . expr

    TOK_IDENTIFIER      shift, and go to state 62
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_OPENPAR         shift, and go to state 6
    TOK_ROM_CONST       shift, and go to state 14
    TOK_INT_CONST       shift, and go to state 15
    TOK_FLOAT_CONST     shift, and go to state 16
    TOK_STRING_LITERAL  shift, and go to state 26

    left_assign_expr  go to state 63
    expr              go to state 161
    struct_item       go to state 51
    identifier        go to state 52
    const             go to state 53
    function_call     go to state 56


state 112

   96 expr: expr TOK_AR_MUL . expr

    TOK_IDENTIFIER      shift, and go to state 62
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_OPENPAR         shift, and go to state 6
    TOK_ROM_CONST       shift, and go to state 14
    TOK_INT_CONST       shift, and go to state 15
    TOK_FLOAT_CONST     shift, and go to state 16
    TOK_STRING_LITERAL  shift, and go to state 26

    left_assign_expr  go to state 63
    expr              go to state 162
    struct_item       go to state 51
    identifier        go to state 52
    const             go to state 53
    function_call     go to state 56


state 113

   97 expr: expr TOK_AR_DIV . expr

    TOK_IDENTIFIER      shift, and go to state 62
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_OPENPAR         shift, and go to state 6
    TOK_ROM_CONST       shift, and go to state 14
    TOK_INT_CONST       shift, and go to state 15
    TOK_FLOAT_CONST     shift, and go to state 16
    TOK_STRING_LITERAL  shift, and go to state 26

    left_assign_expr  go to state 63
    expr              go to state 163
    struct_item       go to state 51
    identifier        go to state 52
    const             go to state 53
    function_call     go to state 56


state 114

   98 expr: expr TOK_AR_MOD . expr

    TOK_IDENTIFIER      shift, and go to state 62
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_OPENPAR         shift, and go to state 6
    TOK_ROM_CONST       shift, and go to state 14
    TOK_INT_CONST       shift, and go to state 15
    TOK_FLOAT_CONST     shift, and go to state 16
    TOK_STRING_LITERAL  shift, and go to state 26

    left_assign_expr  go to state 63
    expr              go to state 164
    struct_item       go to state 51
    identifier        go to state 52
    const             go to state 53
    function_call     go to state 56


state 115

   99 expr: expr TOK_COMP_OP . expr

    TOK_IDENTIFIER      shift, and go to state 62
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_OPENPAR         shift, and go to state 6
    TOK_ROM_CONST       shift, and go to state 14
    TOK_INT_CONST       shift, and go to state 15
    TOK_FLOAT_CONST     shift, and go to state 16
    TOK_STRING_LITERAL  shift, and go to state 26

    left_assign_expr  go to state 63
    expr              go to state 165
    struct_item       go to state 51
    identifier        go to state 52
    const             go to state 53
    function_call     go to state 56


state 116

  106 struct_item: identifier TOK_DOT . TOK_IDENTIFIER

    TOK_IDENTIFIER  shift, and go to state 166


state 117

  118 case_head: TOK_CASE . expr TOK_DOUBLEDOT

    TOK_IDENTIFIER      shift, and go to state 62
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_OPENPAR         shift, and go to state 6
    TOK_ROM_CONST       shift, and go to state 14
    TOK_INT_CONST       shift, and go to state 15
    TOK_FLOAT_CONST     shift, and go to state 16
    TOK_STRING_LITERAL  shift, and go to state 26

    left_assign_expr  go to state 63
    expr              go to state 167
    struct_item       go to state 51
    identifier        go to state 52
    const             go to state 53
    function_call     go to state 56


state 118

  112 switch_stmt: switch_head case_list . default TOK_CLOSEBR
  113            | switch_head case_list . TOK_CLOSEBR

    TOK_CLOSEBR  shift, and go to state 168
    TOK_DEFAULT  shift, and go to state 169

    default       go to state 170
    default_head  go to state 171


state 119

  115 case_list: case_stmt .
  116          | case_stmt . case_list

    TOK_CASE  shift, and go to state 117

    $default  reduce using rule 115 (case_list)

    case_list  go to state 172
    case_stmt  go to state 119
    case_head  go to state 120


state 120

  117 case_stmt: case_head . case_body

    TOK_IDENTIFIER      shift, and go to state 1
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_IF              shift, and go to state 4
    TOK_ENDEXPR         shift, and go to state 5
    TOK_OPENPAR         shift, and go to state 6
    TOK_OPENBR          shift, and go to state 98
    TOK_FOR_DECL        shift, and go to state 11
    TOK_WHILE_DECL      shift, and go to state 12
    TOK_DO_DECL         shift, and go to state 13
    TOK_ROM_CONST       shift, and go to state 14
    TOK_INT_CONST       shift, and go to state 15
    TOK_FLOAT_CONST     shift, and go to state 16
    TOK_PRINT           shift, and go to state 17
    TOK_READ            shift, and go to state 18
    TOK_BREAK           shift, and go to state 19
    TOK_CONTINUE        shift, and go to state 20
    TOK_GOTO            shift, and go to state 21
    TOK_RETURN          shift, and go to state 22
    TOK_SWITCH          shift, and go to state 25
    TOK_CASE            shift, and go to state 117
    TOK_STRING_LITERAL  shift, and go to state 26

    stmnt_block_start     go to state 99
    stmnt_block           go to state 100
    expr_or_assignment    go to state 30
    expression_statement  go to state 31
    lexemes               go to state 32
    stmnt                 go to state 101
    print_stmt            go to state 39
    read_stmt             go to state 40
    if_stmt               go to state 41
    loop_decl             go to state 42
    for_decl              go to state 43
    while_decl            go to state 44
    do_while_decl         go to state 45
    instruction_body      go to state 173
    left_assign_expr      go to state 48
    assignment            go to state 49
    expr                  go to state 50
    struct_item           go to state 51
    identifier            go to state 52
    const                 go to state 53
    switch_stmt           go to state 54
    switch_head           go to state 55
    case_stmt             go to state 174
    case_head             go to state 120
    case_body             go to state 175
    function_call         go to state 56


state 121

  129 declarator: TOK_OPENPAR TOK_CLOSEPAR .

    $default  reduce using rule 129 (declarator)


state 122

  123 parameter: declaration_stmt .

    $default  reduce using rule 123 (parameter)


state 123

   82 type_name: struct_type . TOK_IDENTIFIER

    TOK_IDENTIFIER  shift, and go to state 176


state 124

   89 expr: expr . TOK_B_AND expr
   90     | expr . TOK_B_OR expr
   91     | expr . TOK_B_XOR expr
   94     | expr . TOK_AR_PLUS expr
   95     | expr . TOK_AR_MINUS expr
   96     | expr . TOK_AR_MUL expr
   97     | expr . TOK_AR_DIV expr
   98     | expr . TOK_AR_MOD expr
   99     | expr . TOK_COMP_OP expr
  124 parameter: expr .

    TOK_B_AND     shift, and go to state 107
    TOK_B_OR      shift, and go to state 108
    TOK_B_XOR     shift, and go to state 109
    TOK_AR_PLUS   shift, and go to state 110
    TOK_AR_MINUS  shift, and go to state 111
    TOK_AR_MUL    shift, and go to state 112
    TOK_AR_DIV    shift, and go to state 113
    TOK_AR_MOD    shift, and go to state 114
    TOK_COMP_OP   shift, and go to state 115

    $default  reduce using rule 124 (parameter)


state 125

  125 parameter_list: parameter .

    $default  reduce using rule 125 (parameter_list)


state 126

  126 parameter_list: parameter_list . TOK_COMMA parameter
  127 parameter_type_list: parameter_list .

    TOK_COMMA  shift, and go to state 177

    $default  reduce using rule 127 (parameter_type_list)


state 127

  128 declarator: TOK_OPENPAR parameter_type_list . TOK_CLOSEPAR

    TOK_CLOSEPAR  shift, and go to state 178


state 128

  104 array: TOK_OPENSQ error .

    $default  reduce using rule 104 (array)


state 129

   89 expr: expr . TOK_B_AND expr
   90     | expr . TOK_B_OR expr
   91     | expr . TOK_B_XOR expr
   94     | expr . TOK_AR_PLUS expr
   95     | expr . TOK_AR_MINUS expr
   96     | expr . TOK_AR_MUL expr
   97     | expr . TOK_AR_DIV expr
   98     | expr . TOK_AR_MOD expr
   99     | expr . TOK_COMP_OP expr
  103 array: TOK_OPENSQ expr . TOK_CLOSESQ array
  105      | TOK_OPENSQ expr . error

    error         shift, and go to state 179
    TOK_B_AND     shift, and go to state 107
    TOK_B_OR      shift, and go to state 108
    TOK_B_XOR     shift, and go to state 109
    TOK_AR_PLUS   shift, and go to state 110
    TOK_AR_MINUS  shift, and go to state 111
    TOK_AR_MUL    shift, and go to state 112
    TOK_AR_DIV    shift, and go to state 113
    TOK_AR_MOD    shift, and go to state 114
    TOK_COMP_OP   shift, and go to state 115
    TOK_CLOSESQ   shift, and go to state 180


state 130

   63 if_stmt: TOK_IF TOK_OPENPAR expr . TOK_CLOSEPAR instruction_body
   64        | TOK_IF TOK_OPENPAR expr . TOK_CLOSEPAR instruction_body TOK_ELSE instruction_body
   65        | TOK_IF TOK_OPENPAR expr . error
   89 expr: expr . TOK_B_AND expr
   90     | expr . TOK_B_OR expr
   91     | expr . TOK_B_XOR expr
   94     | expr . TOK_AR_PLUS expr
   95     | expr . TOK_AR_MINUS expr
   96     | expr . TOK_AR_MUL expr
   97     | expr . TOK_AR_DIV expr
   98     | expr . TOK_AR_MOD expr
   99     | expr . TOK_COMP_OP expr

    error         shift, and go to state 181
    TOK_B_AND     shift, and go to state 107
    TOK_B_OR      shift, and go to state 108
    TOK_B_XOR     shift, and go to state 109
    TOK_AR_PLUS   shift, and go to state 110
    TOK_AR_MINUS  shift, and go to state 111
    TOK_AR_MUL    shift, and go to state 112
    TOK_AR_DIV    shift, and go to state 113
    TOK_AR_MOD    shift, and go to state 114
    TOK_COMP_OP   shift, and go to state 115
    TOK_CLOSEPAR  shift, and go to state 182


state 131

  100 expr: TOK_OPENPAR expr error .

    $default  reduce using rule 100 (expr)


state 132

  101 expr: TOK_OPENPAR expr TOK_CLOSEPAR .

    $default  reduce using rule 101 (expr)


state 133

   55 print_stmt: TOK_PRINT TOK_OPENPAR expr . TOK_CLOSEPAR TOK_ENDEXPR
   57           | TOK_PRINT TOK_OPENPAR expr . error
   58           | TOK_PRINT TOK_OPENPAR expr . TOK_CLOSEPAR error
   89 expr: expr . TOK_B_AND expr
   90     | expr . TOK_B_OR expr
   91     | expr . TOK_B_XOR expr
   94     | expr . TOK_AR_PLUS expr
   95     | expr . TOK_AR_MINUS expr
   96     | expr . TOK_AR_MUL expr
   97     | expr . TOK_AR_DIV expr
   98     | expr . TOK_AR_MOD expr
   99     | expr . TOK_COMP_OP expr

    error         shift, and go to state 183
    TOK_B_AND     shift, and go to state 107
    TOK_B_OR      shift, and go to state 108
    TOK_B_XOR     shift, and go to state 109
    TOK_AR_PLUS   shift, and go to state 110
    TOK_AR_MINUS  shift, and go to state 111
    TOK_AR_MUL    shift, and go to state 112
    TOK_AR_DIV    shift, and go to state 113
    TOK_AR_MOD    shift, and go to state 114
    TOK_COMP_OP   shift, and go to state 115
    TOK_CLOSEPAR  shift, and go to state 184


state 134

  107 identifier: TOK_IDENTIFIER . array

    TOK_OPENSQ  shift, and go to state 58

    $default  reduce using rule 102 (array)

    array  go to state 60


state 135

   59 read_stmt: TOK_READ TOK_OPENPAR left_assign_expr . TOK_CLOSEPAR TOK_ENDEXPR
   61          | TOK_READ TOK_OPENPAR left_assign_expr . error
   62          | TOK_READ TOK_OPENPAR left_assign_expr . TOK_CLOSEPAR error

    error         shift, and go to state 185
    TOK_CLOSEPAR  shift, and go to state 186


state 136

   89 expr: expr . TOK_B_AND expr
   90     | expr . TOK_B_OR expr
   91     | expr . TOK_B_XOR expr
   94     | expr . TOK_AR_PLUS expr
   95     | expr . TOK_AR_MINUS expr
   96     | expr . TOK_AR_MUL expr
   97     | expr . TOK_AR_DIV expr
   98     | expr . TOK_AR_MOD expr
   99     | expr . TOK_COMP_OP expr
  114 switch_head: TOK_SWITCH TOK_OPENPAR expr . TOK_CLOSEPAR TOK_OPENBR

    TOK_B_AND     shift, and go to state 107
    TOK_B_OR      shift, and go to state 108
    TOK_B_XOR     shift, and go to state 109
    TOK_AR_PLUS   shift, and go to state 110
    TOK_AR_MINUS  shift, and go to state 111
    TOK_AR_MUL    shift, and go to state 112
    TOK_AR_DIV    shift, and go to state 113
    TOK_AR_MOD    shift, and go to state 114
    TOK_COMP_OP   shift, and go to state 115
    TOK_CLOSEPAR  shift, and go to state 187


state 137

    3 start: declaration_list functions_def_list stmnt_list .
   13 stmnt_list: stmnt_list . stmnt

    TOK_IDENTIFIER      shift, and go to state 1
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_IF              shift, and go to state 4
    TOK_ENDEXPR         shift, and go to state 5
    TOK_OPENPAR         shift, and go to state 6
    TOK_FOR_DECL        shift, and go to state 11
    TOK_WHILE_DECL      shift, and go to state 12
    TOK_DO_DECL         shift, and go to state 13
    TOK_ROM_CONST       shift, and go to state 14
    TOK_INT_CONST       shift, and go to state 15
    TOK_FLOAT_CONST     shift, and go to state 16
    TOK_PRINT           shift, and go to state 17
    TOK_READ            shift, and go to state 18
    TOK_BREAK           shift, and go to state 19
    TOK_CONTINUE        shift, and go to state 20
    TOK_GOTO            shift, and go to state 21
    TOK_RETURN          shift, and go to state 22
    TOK_SWITCH          shift, and go to state 25
    TOK_STRING_LITERAL  shift, and go to state 26

    $default  reduce using rule 3 (start)

    expr_or_assignment    go to state 30
    expression_statement  go to state 31
    lexemes               go to state 32
    stmnt                 go to state 83
    print_stmt            go to state 39
    read_stmt             go to state 40
    if_stmt               go to state 41
    loop_decl             go to state 42
    for_decl              go to state 43
    while_decl            go to state 44
    do_while_decl         go to state 45
    left_assign_expr      go to state 48
    assignment            go to state 49
    expr                  go to state 50
    struct_item           go to state 51
    identifier            go to state 52
    const                 go to state 53
    switch_stmt           go to state 54
    switch_head           go to state 55
    function_call         go to state 56


state 138

  131 function_def_head: type . TOK_IDENTIFIER

    TOK_IDENTIFIER  shift, and go to state 188


state 139

    8 functions_def_list: functions_def_list function_def .

    $default  reduce using rule 8 (functions_def_list)


state 140

   10 declaration_list: declaration_list declaration_block TOK_ENDEXPR .

    $default  reduce using rule 10 (declaration_list)


state 141

   45 declaration_stmt: type TOK_IDENTIFIER .
  131 function_def_head: type TOK_IDENTIFIER .

    TOK_OPENPAR  reduce using rule 131 (function_def_head)
    $default     reduce using rule 45 (declaration_stmt)


state 142

  132 func_declarator: declarator .

    $default  reduce using rule 132 (func_declarator)


state 143

  133 function_def: function_def_head func_declarator . stmnt_block
  134             | function_def_head func_declarator . error

    error       shift, and go to state 189
    TOK_OPENBR  shift, and go to state 98

    stmnt_block_start  go to state 99
    stmnt_block        go to state 190


state 144

   10 declaration_list: declaration_list . declaration_block TOK_ENDEXPR
   53 struct_body: TOK_OPENBR declaration_list .

    TOK_ROM_DECL    shift, and go to state 7
    TOK_INT_DECL    shift, and go to state 8
    TOK_FLOAT_DECL  shift, and go to state 9
    TOK_VOID_DECL   shift, and go to state 10
    TOK_STRUCT      shift, and go to state 23
    TOK_UNION       shift, and go to state 24

    $default  reduce using rule 53 (struct_body)

    declaration_block  go to state 78
    declaration_stmt   go to state 35
    struct_def         go to state 36
    struct_head        go to state 37
    struct_type        go to state 38
    type               go to state 46
    type_name          go to state 47


state 145

   48 struct_def: struct_head struct_body error .

    $default  reduce using rule 48 (struct_def)


state 146

   54 struct_tail: TOK_CLOSEBR .

    $default  reduce using rule 54 (struct_tail)


state 147

   46 struct_def: struct_head struct_body struct_tail .

    $default  reduce using rule 46 (struct_def)


state 148

   70 loop_for_expr: TOK_OPENPAR expression_statement . expression_statement TOK_CLOSEPAR
   71              | TOK_OPENPAR expression_statement . expression_statement expr_or_assignment TOK_CLOSEPAR

    TOK_IDENTIFIER      shift, and go to state 62
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_ENDEXPR         shift, and go to state 5
    TOK_OPENPAR         shift, and go to state 6
    TOK_ROM_CONST       shift, and go to state 14
    TOK_INT_CONST       shift, and go to state 15
    TOK_FLOAT_CONST     shift, and go to state 16
    TOK_STRING_LITERAL  shift, and go to state 26

    expr_or_assignment    go to state 30
    expression_statement  go to state 191
    left_assign_expr      go to state 48
    assignment            go to state 49
    expr                  go to state 50
    struct_item           go to state 51
    identifier            go to state 52
    const                 go to state 53
    function_call         go to state 56


state 149

   66 loop_decl: for_decl loop_for_expr instruction_body .

    $default  reduce using rule 66 (loop_decl)


state 150

   69 loop_while_expr: TOK_OPENPAR expr . TOK_CLOSEPAR
   89 expr: expr . TOK_B_AND expr
   90     | expr . TOK_B_OR expr
   91     | expr . TOK_B_XOR expr
   94     | expr . TOK_AR_PLUS expr
   95     | expr . TOK_AR_MINUS expr
   96     | expr . TOK_AR_MUL expr
   97     | expr . TOK_AR_DIV expr
   98     | expr . TOK_AR_MOD expr
   99     | expr . TOK_COMP_OP expr

    TOK_B_AND     shift, and go to state 107
    TOK_B_OR      shift, and go to state 108
    TOK_B_XOR     shift, and go to state 109
    TOK_AR_PLUS   shift, and go to state 110
    TOK_AR_MINUS  shift, and go to state 111
    TOK_AR_MUL    shift, and go to state 112
    TOK_AR_DIV    shift, and go to state 113
    TOK_AR_MOD    shift, and go to state 114
    TOK_COMP_OP   shift, and go to state 115
    TOK_CLOSEPAR  shift, and go to state 192


state 151

   67 loop_decl: while_decl loop_while_expr instruction_body .

    $default  reduce using rule 67 (loop_decl)


state 152

   15 stmnt_block_start: TOK_OPENBR $@1 .

    $default  reduce using rule 15 (stmnt_block_start)


state 153

   10 declaration_list: declaration_list . declaration_block TOK_ENDEXPR
   20 stmnt_block: stmnt_block_start declaration_list . TOK_CLOSEBR $@3
   22            | stmnt_block_start declaration_list . stmnt_list TOK_CLOSEBR $@4
   23            | stmnt_block_start declaration_list . stmnt_list error

    TOK_IDENTIFIER      shift, and go to state 1
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_IF              shift, and go to state 4
    TOK_ENDEXPR         shift, and go to state 5
    TOK_OPENPAR         shift, and go to state 6
    TOK_CLOSEBR         shift, and go to state 193
    TOK_ROM_DECL        shift, and go to state 7
    TOK_INT_DECL        shift, and go to state 8
    TOK_FLOAT_DECL      shift, and go to state 9
    TOK_VOID_DECL       shift, and go to state 10
    TOK_FOR_DECL        shift, and go to state 11
    TOK_WHILE_DECL      shift, and go to state 12
    TOK_DO_DECL         shift, and go to state 13
    TOK_ROM_CONST       shift, and go to state 14
    TOK_INT_CONST       shift, and go to state 15
    TOK_FLOAT_CONST     shift, and go to state 16
    TOK_PRINT           shift, and go to state 17
    TOK_READ            shift, and go to state 18
    TOK_BREAK           shift, and go to state 19
    TOK_CONTINUE        shift, and go to state 20
    TOK_GOTO            shift, and go to state 21
    TOK_RETURN          shift, and go to state 22
    TOK_STRUCT          shift, and go to state 23
    TOK_UNION           shift, and go to state 24
    TOK_SWITCH          shift, and go to state 25
    TOK_STRING_LITERAL  shift, and go to state 26

    stmnt_list            go to state 194
    expr_or_assignment    go to state 30
    expression_statement  go to state 31
    lexemes               go to state 32
    stmnt                 go to state 33
    declaration_block     go to state 78
    declaration_stmt      go to state 35
    struct_def            go to state 36
    struct_head           go to state 37
    struct_type           go to state 38
    print_stmt            go to state 39
    read_stmt             go to state 40
    if_stmt               go to state 41
    loop_decl             go to state 42
    for_decl              go to state 43
    while_decl            go to state 44
    do_while_decl         go to state 45
    type                  go to state 46
    type_name             go to state 47
    left_assign_expr      go to state 48
    assignment            go to state 49
    expr                  go to state 50
    struct_item           go to state 51
    identifier            go to state 52
    const                 go to state 53
    switch_stmt           go to state 54
    switch_head           go to state 55
    function_call         go to state 56


state 154

   13 stmnt_list: stmnt_list . stmnt
   17 stmnt_block: stmnt_block_start stmnt_list . TOK_CLOSEBR $@2
   18            | stmnt_block_start stmnt_list . error

    error               shift, and go to state 195
    TOK_IDENTIFIER      shift, and go to state 1
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_IF              shift, and go to state 4
    TOK_ENDEXPR         shift, and go to state 5
    TOK_OPENPAR         shift, and go to state 6
    TOK_CLOSEBR         shift, and go to state 196
    TOK_FOR_DECL        shift, and go to state 11
    TOK_WHILE_DECL      shift, and go to state 12
    TOK_DO_DECL         shift, and go to state 13
    TOK_ROM_CONST       shift, and go to state 14
    TOK_INT_CONST       shift, and go to state 15
    TOK_FLOAT_CONST     shift, and go to state 16
    TOK_PRINT           shift, and go to state 17
    TOK_READ            shift, and go to state 18
    TOK_BREAK           shift, and go to state 19
    TOK_CONTINUE        shift, and go to state 20
    TOK_GOTO            shift, and go to state 21
    TOK_RETURN          shift, and go to state 22
    TOK_SWITCH          shift, and go to state 25
    TOK_STRING_LITERAL  shift, and go to state 26

    expr_or_assignment    go to state 30
    expression_statement  go to state 31
    lexemes               go to state 32
    stmnt                 go to state 83
    print_stmt            go to state 39
    read_stmt             go to state 40
    if_stmt               go to state 41
    loop_decl             go to state 42
    for_decl              go to state 43
    while_decl            go to state 44
    do_while_decl         go to state 45
    left_assign_expr      go to state 48
    assignment            go to state 49
    expr                  go to state 50
    struct_item           go to state 51
    identifier            go to state 52
    const                 go to state 53
    switch_stmt           go to state 54
    switch_head           go to state 55
    function_call         go to state 56


state 155

   68 loop_decl: do_while_decl instruction_body TOK_WHILE_DECL . loop_while_expr TOK_ENDEXPR

    TOK_OPENPAR  shift, and go to state 96

    loop_while_expr  go to state 197


state 156

   85 assignment: left_assign_expr TOK_ASSIGN_OP expr .
   89 expr: expr . TOK_B_AND expr
   90     | expr . TOK_B_OR expr
   91     | expr . TOK_B_XOR expr
   94     | expr . TOK_AR_PLUS expr
   95     | expr . TOK_AR_MINUS expr
   96     | expr . TOK_AR_MUL expr
   97     | expr . TOK_AR_DIV expr
   98     | expr . TOK_AR_MOD expr
   99     | expr . TOK_COMP_OP expr

    TOK_B_AND     shift, and go to state 107
    TOK_B_OR      shift, and go to state 108
    TOK_B_XOR     shift, and go to state 109
    TOK_AR_PLUS   shift, and go to state 110
    TOK_AR_MINUS  shift, and go to state 111
    TOK_AR_MUL    shift, and go to state 112
    TOK_AR_DIV    shift, and go to state 113
    TOK_AR_MOD    shift, and go to state 114
    TOK_COMP_OP   shift, and go to state 115

    $default  reduce using rule 85 (assignment)


state 157

   89 expr: expr . TOK_B_AND expr
   89     | expr TOK_B_AND expr .
   90     | expr . TOK_B_OR expr
   91     | expr . TOK_B_XOR expr
   94     | expr . TOK_AR_PLUS expr
   95     | expr . TOK_AR_MINUS expr
   96     | expr . TOK_AR_MUL expr
   97     | expr . TOK_AR_DIV expr
   98     | expr . TOK_AR_MOD expr
   99     | expr . TOK_COMP_OP expr

    $default  reduce using rule 89 (expr)


state 158

   89 expr: expr . TOK_B_AND expr
   90     | expr . TOK_B_OR expr
   90     | expr TOK_B_OR expr .
   91     | expr . TOK_B_XOR expr
   94     | expr . TOK_AR_PLUS expr
   95     | expr . TOK_AR_MINUS expr
   96     | expr . TOK_AR_MUL expr
   97     | expr . TOK_AR_DIV expr
   98     | expr . TOK_AR_MOD expr
   99     | expr . TOK_COMP_OP expr

    TOK_B_AND   shift, and go to state 107
    TOK_AR_MUL  shift, and go to state 112
    TOK_AR_DIV  shift, and go to state 113

    $default  reduce using rule 90 (expr)


state 159

   89 expr: expr . TOK_B_AND expr
   90     | expr . TOK_B_OR expr
   91     | expr . TOK_B_XOR expr
   91     | expr TOK_B_XOR expr .
   94     | expr . TOK_AR_PLUS expr
   95     | expr . TOK_AR_MINUS expr
   96     | expr . TOK_AR_MUL expr
   97     | expr . TOK_AR_DIV expr
   98     | expr . TOK_AR_MOD expr
   99     | expr . TOK_COMP_OP expr

    TOK_B_AND   shift, and go to state 107
    TOK_AR_MUL  shift, and go to state 112
    TOK_AR_DIV  shift, and go to state 113

    $default  reduce using rule 91 (expr)


state 160

   89 expr: expr . TOK_B_AND expr
   90     | expr . TOK_B_OR expr
   91     | expr . TOK_B_XOR expr
   94     | expr . TOK_AR_PLUS expr
   94     | expr TOK_AR_PLUS expr .
   95     | expr . TOK_AR_MINUS expr
   96     | expr . TOK_AR_MUL expr
   97     | expr . TOK_AR_DIV expr
   98     | expr . TOK_AR_MOD expr
   99     | expr . TOK_COMP_OP expr

    TOK_B_AND   shift, and go to state 107
    TOK_AR_MUL  shift, and go to state 112
    TOK_AR_DIV  shift, and go to state 113

    $default  reduce using rule 94 (expr)


state 161

   89 expr: expr . TOK_B_AND expr
   90     | expr . TOK_B_OR expr
   91     | expr . TOK_B_XOR expr
   94     | expr . TOK_AR_PLUS expr
   95     | expr . TOK_AR_MINUS expr
   95     | expr TOK_AR_MINUS expr .
   96     | expr . TOK_AR_MUL expr
   97     | expr . TOK_AR_DIV expr
   98     | expr . TOK_AR_MOD expr
   99     | expr . TOK_COMP_OP expr

    TOK_B_AND   shift, and go to state 107
    TOK_AR_MUL  shift, and go to state 112
    TOK_AR_DIV  shift, and go to state 113

    $default  reduce using rule 95 (expr)


state 162

   89 expr: expr . TOK_B_AND expr
   90     | expr . TOK_B_OR expr
   91     | expr . TOK_B_XOR expr
   94     | expr . TOK_AR_PLUS expr
   95     | expr . TOK_AR_MINUS expr
   96     | expr . TOK_AR_MUL expr
   96     | expr TOK_AR_MUL expr .
   97     | expr . TOK_AR_DIV expr
   98     | expr . TOK_AR_MOD expr
   99     | expr . TOK_COMP_OP expr

    $default  reduce using rule 96 (expr)


state 163

   89 expr: expr . TOK_B_AND expr
   90     | expr . TOK_B_OR expr
   91     | expr . TOK_B_XOR expr
   94     | expr . TOK_AR_PLUS expr
   95     | expr . TOK_AR_MINUS expr
   96     | expr . TOK_AR_MUL expr
   97     | expr . TOK_AR_DIV expr
   97     | expr TOK_AR_DIV expr .
   98     | expr . TOK_AR_MOD expr
   99     | expr . TOK_COMP_OP expr

    $default  reduce using rule 97 (expr)


state 164

   89 expr: expr . TOK_B_AND expr
   90     | expr . TOK_B_OR expr
   91     | expr . TOK_B_XOR expr
   94     | expr . TOK_AR_PLUS expr
   95     | expr . TOK_AR_MINUS expr
   96     | expr . TOK_AR_MUL expr
   97     | expr . TOK_AR_DIV expr
   98     | expr . TOK_AR_MOD expr
   98     | expr TOK_AR_MOD expr .
   99     | expr . TOK_COMP_OP expr

    TOK_B_AND     shift, and go to state 107
    TOK_B_OR      shift, and go to state 108
    TOK_B_XOR     shift, and go to state 109
    TOK_AR_PLUS   shift, and go to state 110
    TOK_AR_MINUS  shift, and go to state 111
    TOK_AR_MUL    shift, and go to state 112
    TOK_AR_DIV    shift, and go to state 113

    $default  reduce using rule 98 (expr)


state 165

   89 expr: expr . TOK_B_AND expr
   90     | expr . TOK_B_OR expr
   91     | expr . TOK_B_XOR expr
   94     | expr . TOK_AR_PLUS expr
   95     | expr . TOK_AR_MINUS expr
   96     | expr . TOK_AR_MUL expr
   97     | expr . TOK_AR_DIV expr
   98     | expr . TOK_AR_MOD expr
   99     | expr . TOK_COMP_OP expr
   99     | expr TOK_COMP_OP expr .

    TOK_B_AND     shift, and go to state 107
    TOK_B_OR      shift, and go to state 108
    TOK_B_XOR     shift, and go to state 109
    TOK_AR_PLUS   shift, and go to state 110
    TOK_AR_MINUS  shift, and go to state 111
    TOK_AR_MUL    shift, and go to state 112
    TOK_AR_DIV    shift, and go to state 113
    TOK_AR_MOD    shift, and go to state 114

    $default  reduce using rule 99 (expr)


state 166

  106 struct_item: identifier TOK_DOT TOK_IDENTIFIER .

    $default  reduce using rule 106 (struct_item)


state 167

   89 expr: expr . TOK_B_AND expr
   90     | expr . TOK_B_OR expr
   91     | expr . TOK_B_XOR expr
   94     | expr . TOK_AR_PLUS expr
   95     | expr . TOK_AR_MINUS expr
   96     | expr . TOK_AR_MUL expr
   97     | expr . TOK_AR_DIV expr
   98     | expr . TOK_AR_MOD expr
   99     | expr . TOK_COMP_OP expr
  118 case_head: TOK_CASE expr . TOK_DOUBLEDOT

    TOK_B_AND      shift, and go to state 107
    TOK_B_OR       shift, and go to state 108
    TOK_B_XOR      shift, and go to state 109
    TOK_AR_PLUS    shift, and go to state 110
    TOK_AR_MINUS   shift, and go to state 111
    TOK_AR_MUL     shift, and go to state 112
    TOK_AR_DIV     shift, and go to state 113
    TOK_AR_MOD     shift, and go to state 114
    TOK_COMP_OP    shift, and go to state 115
    TOK_DOUBLEDOT  shift, and go to state 198


state 168

  113 switch_stmt: switch_head case_list TOK_CLOSEBR .

    $default  reduce using rule 113 (switch_stmt)


state 169

  122 default_head: TOK_DEFAULT . TOK_DOUBLEDOT

    TOK_DOUBLEDOT  shift, and go to state 199


state 170

  112 switch_stmt: switch_head case_list default . TOK_CLOSEBR

    TOK_CLOSEBR  shift, and go to state 200


state 171

  121 default: default_head . instruction_body

    TOK_IDENTIFIER      shift, and go to state 1
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_IF              shift, and go to state 4
    TOK_ENDEXPR         shift, and go to state 5
    TOK_OPENPAR         shift, and go to state 6
    TOK_OPENBR          shift, and go to state 98
    TOK_FOR_DECL        shift, and go to state 11
    TOK_WHILE_DECL      shift, and go to state 12
    TOK_DO_DECL         shift, and go to state 13
    TOK_ROM_CONST       shift, and go to state 14
    TOK_INT_CONST       shift, and go to state 15
    TOK_FLOAT_CONST     shift, and go to state 16
    TOK_PRINT           shift, and go to state 17
    TOK_READ            shift, and go to state 18
    TOK_BREAK           shift, and go to state 19
    TOK_CONTINUE        shift, and go to state 20
    TOK_GOTO            shift, and go to state 21
    TOK_RETURN          shift, and go to state 22
    TOK_SWITCH          shift, and go to state 25
    TOK_STRING_LITERAL  shift, and go to state 26

    stmnt_block_start     go to state 99
    stmnt_block           go to state 100
    expr_or_assignment    go to state 30
    expression_statement  go to state 31
    lexemes               go to state 32
    stmnt                 go to state 101
    print_stmt            go to state 39
    read_stmt             go to state 40
    if_stmt               go to state 41
    loop_decl             go to state 42
    for_decl              go to state 43
    while_decl            go to state 44
    do_while_decl         go to state 45
    instruction_body      go to state 201
    left_assign_expr      go to state 48
    assignment            go to state 49
    expr                  go to state 50
    struct_item           go to state 51
    identifier            go to state 52
    const                 go to state 53
    switch_stmt           go to state 54
    switch_head           go to state 55
    function_call         go to state 56


state 172

  116 case_list: case_stmt case_list .

    $default  reduce using rule 116 (case_list)


state 173

  119 case_body: instruction_body .

    $default  reduce using rule 119 (case_body)


state 174

  120 case_body: case_stmt .

    $default  reduce using rule 120 (case_body)


state 175

  117 case_stmt: case_head case_body .

    $default  reduce using rule 117 (case_stmt)


state 176

   82 type_name: struct_type TOK_IDENTIFIER .

    $default  reduce using rule 82 (type_name)


state 177

  126 parameter_list: parameter_list TOK_COMMA . parameter

    TOK_IDENTIFIER      shift, and go to state 62
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_OPENPAR         shift, and go to state 6
    TOK_ROM_DECL        shift, and go to state 7
    TOK_INT_DECL        shift, and go to state 8
    TOK_FLOAT_DECL      shift, and go to state 9
    TOK_VOID_DECL       shift, and go to state 10
    TOK_ROM_CONST       shift, and go to state 14
    TOK_INT_CONST       shift, and go to state 15
    TOK_FLOAT_CONST     shift, and go to state 16
    TOK_STRUCT          shift, and go to state 23
    TOK_UNION           shift, and go to state 24
    TOK_STRING_LITERAL  shift, and go to state 26

    declaration_stmt  go to state 122
    struct_type       go to state 123
    type              go to state 46
    type_name         go to state 47
    left_assign_expr  go to state 63
    expr              go to state 124
    struct_item       go to state 51
    identifier        go to state 52
    const             go to state 53
    parameter         go to state 202
    function_call     go to state 56


state 178

  128 declarator: TOK_OPENPAR parameter_type_list TOK_CLOSEPAR .

    $default  reduce using rule 128 (declarator)


state 179

  105 array: TOK_OPENSQ expr error .

    $default  reduce using rule 105 (array)


state 180

  103 array: TOK_OPENSQ expr TOK_CLOSESQ . array

    TOK_OPENSQ  shift, and go to state 58

    $default  reduce using rule 102 (array)

    array  go to state 203


state 181

   65 if_stmt: TOK_IF TOK_OPENPAR expr error .

    $default  reduce using rule 65 (if_stmt)


state 182

   63 if_stmt: TOK_IF TOK_OPENPAR expr TOK_CLOSEPAR . instruction_body
   64        | TOK_IF TOK_OPENPAR expr TOK_CLOSEPAR . instruction_body TOK_ELSE instruction_body

    TOK_IDENTIFIER      shift, and go to state 1
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_IF              shift, and go to state 4
    TOK_ENDEXPR         shift, and go to state 5
    TOK_OPENPAR         shift, and go to state 6
    TOK_OPENBR          shift, and go to state 98
    TOK_FOR_DECL        shift, and go to state 11
    TOK_WHILE_DECL      shift, and go to state 12
    TOK_DO_DECL         shift, and go to state 13
    TOK_ROM_CONST       shift, and go to state 14
    TOK_INT_CONST       shift, and go to state 15
    TOK_FLOAT_CONST     shift, and go to state 16
    TOK_PRINT           shift, and go to state 17
    TOK_READ            shift, and go to state 18
    TOK_BREAK           shift, and go to state 19
    TOK_CONTINUE        shift, and go to state 20
    TOK_GOTO            shift, and go to state 21
    TOK_RETURN          shift, and go to state 22
    TOK_SWITCH          shift, and go to state 25
    TOK_STRING_LITERAL  shift, and go to state 26

    stmnt_block_start     go to state 99
    stmnt_block           go to state 100
    expr_or_assignment    go to state 30
    expression_statement  go to state 31
    lexemes               go to state 32
    stmnt                 go to state 101
    print_stmt            go to state 39
    read_stmt             go to state 40
    if_stmt               go to state 41
    loop_decl             go to state 42
    for_decl              go to state 43
    while_decl            go to state 44
    do_while_decl         go to state 45
    instruction_body      go to state 204
    left_assign_expr      go to state 48
    assignment            go to state 49
    expr                  go to state 50
    struct_item           go to state 51
    identifier            go to state 52
    const                 go to state 53
    switch_stmt           go to state 54
    switch_head           go to state 55
    function_call         go to state 56


state 183

   57 print_stmt: TOK_PRINT TOK_OPENPAR expr error .

    $default  reduce using rule 57 (print_stmt)


state 184

   55 print_stmt: TOK_PRINT TOK_OPENPAR expr TOK_CLOSEPAR . TOK_ENDEXPR
   58           | TOK_PRINT TOK_OPENPAR expr TOK_CLOSEPAR . error

    error        shift, and go to state 205
    TOK_ENDEXPR  shift, and go to state 206


state 185

   61 read_stmt: TOK_READ TOK_OPENPAR left_assign_expr error .

    $default  reduce using rule 61 (read_stmt)


state 186

   59 read_stmt: TOK_READ TOK_OPENPAR left_assign_expr TOK_CLOSEPAR . TOK_ENDEXPR
   62          | TOK_READ TOK_OPENPAR left_assign_expr TOK_CLOSEPAR . error

    error        shift, and go to state 207
    TOK_ENDEXPR  shift, and go to state 208


state 187

  114 switch_head: TOK_SWITCH TOK_OPENPAR expr TOK_CLOSEPAR . TOK_OPENBR

    TOK_OPENBR  shift, and go to state 209


state 188

  131 function_def_head: type TOK_IDENTIFIER .

    $default  reduce using rule 131 (function_def_head)


state 189

  134 function_def: function_def_head func_declarator error .

    $default  reduce using rule 134 (function_def)


state 190

  133 function_def: function_def_head func_declarator stmnt_block .

    $default  reduce using rule 133 (function_def)


state 191

   70 loop_for_expr: TOK_OPENPAR expression_statement expression_statement . TOK_CLOSEPAR
   71              | TOK_OPENPAR expression_statement expression_statement . expr_or_assignment TOK_CLOSEPAR

    TOK_IDENTIFIER      shift, and go to state 62
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_OPENPAR         shift, and go to state 6
    TOK_CLOSEPAR        shift, and go to state 210
    TOK_ROM_CONST       shift, and go to state 14
    TOK_INT_CONST       shift, and go to state 15
    TOK_FLOAT_CONST     shift, and go to state 16
    TOK_STRING_LITERAL  shift, and go to state 26

    expr_or_assignment  go to state 211
    left_assign_expr    go to state 48
    assignment          go to state 49
    expr                go to state 212
    struct_item         go to state 51
    identifier          go to state 52
    const               go to state 53
    function_call       go to state 56


state 192

   69 loop_while_expr: TOK_OPENPAR expr TOK_CLOSEPAR .

    $default  reduce using rule 69 (loop_while_expr)


state 193

   20 stmnt_block: stmnt_block_start declaration_list TOK_CLOSEBR . $@3

    $default  reduce using rule 19 ($@3)

    $@3  go to state 213


state 194

   13 stmnt_list: stmnt_list . stmnt
   22 stmnt_block: stmnt_block_start declaration_list stmnt_list . TOK_CLOSEBR $@4
   23            | stmnt_block_start declaration_list stmnt_list . error

    error               shift, and go to state 214
    TOK_IDENTIFIER      shift, and go to state 1
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_IF              shift, and go to state 4
    TOK_ENDEXPR         shift, and go to state 5
    TOK_OPENPAR         shift, and go to state 6
    TOK_CLOSEBR         shift, and go to state 215
    TOK_FOR_DECL        shift, and go to state 11
    TOK_WHILE_DECL      shift, and go to state 12
    TOK_DO_DECL         shift, and go to state 13
    TOK_ROM_CONST       shift, and go to state 14
    TOK_INT_CONST       shift, and go to state 15
    TOK_FLOAT_CONST     shift, and go to state 16
    TOK_PRINT           shift, and go to state 17
    TOK_READ            shift, and go to state 18
    TOK_BREAK           shift, and go to state 19
    TOK_CONTINUE        shift, and go to state 20
    TOK_GOTO            shift, and go to state 21
    TOK_RETURN          shift, and go to state 22
    TOK_SWITCH          shift, and go to state 25
    TOK_STRING_LITERAL  shift, and go to state 26

    expr_or_assignment    go to state 30
    expression_statement  go to state 31
    lexemes               go to state 32
    stmnt                 go to state 83
    print_stmt            go to state 39
    read_stmt             go to state 40
    if_stmt               go to state 41
    loop_decl             go to state 42
    for_decl              go to state 43
    while_decl            go to state 44
    do_while_decl         go to state 45
    left_assign_expr      go to state 48
    assignment            go to state 49
    expr                  go to state 50
    struct_item           go to state 51
    identifier            go to state 52
    const                 go to state 53
    switch_stmt           go to state 54
    switch_head           go to state 55
    function_call         go to state 56


state 195

   18 stmnt_block: stmnt_block_start stmnt_list error .

    $default  reduce using rule 18 (stmnt_block)


state 196

   17 stmnt_block: stmnt_block_start stmnt_list TOK_CLOSEBR . $@2

    $default  reduce using rule 16 ($@2)

    $@2  go to state 216


state 197

   68 loop_decl: do_while_decl instruction_body TOK_WHILE_DECL loop_while_expr . TOK_ENDEXPR

    TOK_ENDEXPR  shift, and go to state 217


state 198

  118 case_head: TOK_CASE expr TOK_DOUBLEDOT .

    $default  reduce using rule 118 (case_head)


state 199

  122 default_head: TOK_DEFAULT TOK_DOUBLEDOT .

    $default  reduce using rule 122 (default_head)


state 200

  112 switch_stmt: switch_head case_list default TOK_CLOSEBR .

    $default  reduce using rule 112 (switch_stmt)


state 201

  121 default: default_head instruction_body .

    $default  reduce using rule 121 (default)


state 202

  126 parameter_list: parameter_list TOK_COMMA parameter .

    $default  reduce using rule 126 (parameter_list)


state 203

  103 array: TOK_OPENSQ expr TOK_CLOSESQ array .

    $default  reduce using rule 103 (array)


state 204

   63 if_stmt: TOK_IF TOK_OPENPAR expr TOK_CLOSEPAR instruction_body .
   64        | TOK_IF TOK_OPENPAR expr TOK_CLOSEPAR instruction_body . TOK_ELSE instruction_body

    TOK_ELSE  shift, and go to state 218

    $default  reduce using rule 63 (if_stmt)


state 205

   58 print_stmt: TOK_PRINT TOK_OPENPAR expr TOK_CLOSEPAR error .

    $default  reduce using rule 58 (print_stmt)


state 206

   55 print_stmt: TOK_PRINT TOK_OPENPAR expr TOK_CLOSEPAR TOK_ENDEXPR .

    $default  reduce using rule 55 (print_stmt)


state 207

   62 read_stmt: TOK_READ TOK_OPENPAR left_assign_expr TOK_CLOSEPAR error .

    $default  reduce using rule 62 (read_stmt)


state 208

   59 read_stmt: TOK_READ TOK_OPENPAR left_assign_expr TOK_CLOSEPAR TOK_ENDEXPR .

    $default  reduce using rule 59 (read_stmt)


state 209

  114 switch_head: TOK_SWITCH TOK_OPENPAR expr TOK_CLOSEPAR TOK_OPENBR .

    $default  reduce using rule 114 (switch_head)


state 210

   70 loop_for_expr: TOK_OPENPAR expression_statement expression_statement TOK_CLOSEPAR .

    $default  reduce using rule 70 (loop_for_expr)


state 211

   71 loop_for_expr: TOK_OPENPAR expression_statement expression_statement expr_or_assignment . TOK_CLOSEPAR

    TOK_CLOSEPAR  shift, and go to state 219


state 212

   24 expr_or_assignment: expr .
   89 expr: expr . TOK_B_AND expr
   90     | expr . TOK_B_OR expr
   91     | expr . TOK_B_XOR expr
   94     | expr . TOK_AR_PLUS expr
   95     | expr . TOK_AR_MINUS expr
   96     | expr . TOK_AR_MUL expr
   97     | expr . TOK_AR_DIV expr
   98     | expr . TOK_AR_MOD expr
   99     | expr . TOK_COMP_OP expr

    TOK_B_AND     shift, and go to state 107
    TOK_B_OR      shift, and go to state 108
    TOK_B_XOR     shift, and go to state 109
    TOK_AR_PLUS   shift, and go to state 110
    TOK_AR_MINUS  shift, and go to state 111
    TOK_AR_MUL    shift, and go to state 112
    TOK_AR_DIV    shift, and go to state 113
    TOK_AR_MOD    shift, and go to state 114
    TOK_COMP_OP   shift, and go to state 115

    $default  reduce using rule 24 (expr_or_assignment)


state 213

   20 stmnt_block: stmnt_block_start declaration_list TOK_CLOSEBR $@3 .

    $default  reduce using rule 20 (stmnt_block)


state 214

   23 stmnt_block: stmnt_block_start declaration_list stmnt_list error .

    $default  reduce using rule 23 (stmnt_block)


state 215

   22 stmnt_block: stmnt_block_start declaration_list stmnt_list TOK_CLOSEBR . $@4

    $default  reduce using rule 21 ($@4)

    $@4  go to state 220


state 216

   17 stmnt_block: stmnt_block_start stmnt_list TOK_CLOSEBR $@2 .

    $default  reduce using rule 17 (stmnt_block)


state 217

   68 loop_decl: do_while_decl instruction_body TOK_WHILE_DECL loop_while_expr TOK_ENDEXPR .

    $default  reduce using rule 68 (loop_decl)


state 218

   64 if_stmt: TOK_IF TOK_OPENPAR expr TOK_CLOSEPAR instruction_body TOK_ELSE . instruction_body

    TOK_IDENTIFIER      shift, and go to state 1
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_IF              shift, and go to state 4
    TOK_ENDEXPR         shift, and go to state 5
    TOK_OPENPAR         shift, and go to state 6
    TOK_OPENBR          shift, and go to state 98
    TOK_FOR_DECL        shift, and go to state 11
    TOK_WHILE_DECL      shift, and go to state 12
    TOK_DO_DECL         shift, and go to state 13
    TOK_ROM_CONST       shift, and go to state 14
    TOK_INT_CONST       shift, and go to state 15
    TOK_FLOAT_CONST     shift, and go to state 16
    TOK_PRINT           shift, and go to state 17
    TOK_READ            shift, and go to state 18
    TOK_BREAK           shift, and go to state 19
    TOK_CONTINUE        shift, and go to state 20
    TOK_GOTO            shift, and go to state 21
    TOK_RETURN          shift, and go to state 22
    TOK_SWITCH          shift, and go to state 25
    TOK_STRING_LITERAL  shift, and go to state 26

    stmnt_block_start     go to state 99
    stmnt_block           go to state 100
    expr_or_assignment    go to state 30
    expression_statement  go to state 31
    lexemes               go to state 32
    stmnt                 go to state 101
    print_stmt            go to state 39
    read_stmt             go to state 40
    if_stmt               go to state 41
    loop_decl             go to state 42
    for_decl              go to state 43
    while_decl            go to state 44
    do_while_decl         go to state 45
    instruction_body      go to state 221
    left_assign_expr      go to state 48
    assignment            go to state 49
    expr                  go to state 50
    struct_item           go to state 51
    identifier            go to state 52
    const                 go to state 53
    switch_stmt           go to state 54
    switch_head           go to state 55
    function_call         go to state 56


state 219

   71 loop_for_expr: TOK_OPENPAR expression_statement expression_statement expr_or_assignment TOK_CLOSEPAR .

    $default  reduce using rule 71 (loop_for_expr)


state 220

   22 stmnt_block: stmnt_block_start declaration_list stmnt_list TOK_CLOSEBR $@4 .

    $default  reduce using rule 22 (stmnt_block)


state 221

   64 if_stmt: TOK_IF TOK_OPENPAR expr TOK_CLOSEPAR instruction_body TOK_ELSE instruction_body .

    $default  reduce using rule 64 (if_stmt)
