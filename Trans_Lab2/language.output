Terminals unused in grammar

   TOK_COMMA
   TMP_VAR
   LABEL
   NAME
   INT_CONST
   FLOAT_CONST
   LITERAL
   IFFALSE
   IFTRUE
   ASSIGN
   OR
   AND
   XOR
   NOT
   INPUT
   OUTPUT
   GOTO
   CMP
   EXPR_ERROR


Grammar

    0 $accept: start $end

    1 start: /* empty */
    2      | declaration_list stmnt_list
    3      | declaration_list
    4      | stmnt_list

    5 declaration_list: declaration_stmt TOK_ENDEXPR
    6                 | declaration_list declaration_stmt TOK_ENDEXPR
    7                 | declaration_stmt error

    8 stmnt_list: stmnt
    9           | stmnt_list stmnt

   10 $@1: /* empty */

   11 stmnt_block_start: TOK_OPENBR $@1

   12 $@2: /* empty */

   13 stmnt_block: stmnt_block_start stmnt_list TOK_CLOSEBR $@2
   14            | stmnt_block_start stmnt_list error

   15 $@3: /* empty */

   16 stmnt_block: stmnt_block_start declaration_list TOK_CLOSEBR $@3

   17 $@4: /* empty */

   18 stmnt_block: stmnt_block_start declaration_list stmnt_list TOK_CLOSEBR $@4

   19 expr_or_assignment: expr
   20                   | assignment

   21 expression_statement: TOK_ENDEXPR
   22                     | expr_or_assignment TOK_ENDEXPR
   23                     | expr error

   24 stmnt: expression_statement
   25      | TOK_IDENTIFIER TOK_DOUBLEDOT
   26      | TOK_GOTO TOK_IDENTIFIER TOK_ENDEXPR
   27      | if_stmt
   28      | loop_decl
   29      | switch_stmt
   30      | print_stmt
   31      | read_stmt
   32      | TOK_BREAK TOK_ENDEXPR
   33      | TOK_BREAK error
   34      | TOK_CONTINUE TOK_ENDEXPR
   35      | TOK_CONTINUE error

   36 declaration_stmt: type TOK_IDENTIFIER
   37                 | struct_def

   38 struct_def: struct_head struct_body struct_tail

   39 struct_head: struct_type TOK_IDENTIFIER

   40 struct_type: TOK_STRUCT
   41            | TOK_UNION

   42 struct_body: TOK_OPENBR declaration_list

   43 struct_tail: TOK_CLOSEBR

   44 print_stmt: TOK_PRINT TOK_OPENPAR expr TOK_CLOSEPAR TOK_ENDEXPR
   45           | TOK_PRINT error
   46           | TOK_PRINT '(' expr error
   47           | TOK_PRINT '(' expr ')' error

   48 read_stmt: TOK_READ TOK_OPENPAR left_assign_expr TOK_CLOSEPAR TOK_ENDEXPR

   49 if_stmt: TOK_IF TOK_OPENPAR expr TOK_CLOSEPAR instruction_body
   50        | TOK_IF TOK_OPENPAR expr TOK_CLOSEPAR instruction_body TOK_ELSE instruction_body
   51        | TOK_IF TOK_OPENPAR expr error

   52 loop_decl: for_decl loop_for_expr instruction_body
   53          | while_decl loop_while_expr instruction_body
   54          | do_while_decl instruction_body TOK_WHILE_DECL loop_while_expr TOK_ENDEXPR

   55 loop_while_expr: TOK_OPENPAR expr TOK_CLOSEPAR

   56 loop_for_expr: TOK_OPENPAR expression_statement expression_statement TOK_CLOSEPAR
   57              | TOK_OPENPAR expression_statement expression_statement expr_or_assignment TOK_CLOSEPAR

   58 for_decl: TOK_FOR_DECL

   59 while_decl: TOK_WHILE_DECL

   60 do_while_decl: TOK_DO_DECL

   61 instruction_body: stmnt_block
   62                 | stmnt

   63 type: type_name array

   64 type_name: TOK_ROM_DECL
   65          | TOK_FLOAT_DECL
   66          | TOK_INT_DECL
   67          | struct_type TOK_IDENTIFIER

   68 left_assign_expr: identifier
   69                 | struct_item

   70 assignment: left_assign_expr TOK_ASSIGN_OP expr

   71 expr: left_assign_expr
   72     | num_const
   73     | expr TOK_B_AND expr
   74     | expr TOK_B_OR expr
   75     | expr TOK_B_XOR expr
   76     | TOK_B_NOT expr
   77     | TOK_AR_MINUS expr
   78     | expr TOK_AR_PLUS expr
   79     | expr TOK_AR_MINUS expr
   80     | expr TOK_AR_MUL expr
   81     | expr TOK_AR_DIV expr
   82     | expr TOK_AR_MOD expr
   83     | expr TOK_COMP_OP expr
   84     | TOK_OPENPAR expr error
   85     | TOK_OPENPAR expr TOK_CLOSEPAR

   86 array: /* empty */
   87      | TOK_OPENSQ expr TOK_CLOSESQ array
   88      | TOK_OPENSQ error
   89      | TOK_OPENSQ expr error

   90 struct_item: identifier TOK_DOT TOK_IDENTIFIER

   91 identifier: TOK_IDENTIFIER array

   92 num_const: TOK_INT_CONST
   93          | TOK_ROM_CONST
   94          | TOK_FLOAT_CONST

   95 switch_stmt: switch_head case_list default TOK_CLOSEBR
   96            | switch_head case_list TOK_CLOSEBR

   97 switch_head: TOK_SWITCH TOK_OPENPAR expr TOK_CLOSEPAR TOK_OPENBR

   98 case_list: case_stmt
   99          | case_stmt case_list

  100 case_stmt: case_head case_body

  101 case_head: TOK_CASE expr TOK_DOUBLEDOT

  102 case_body: instruction_body
  103          | case_stmt

  104 default: default_head instruction_body

  105 default_head: TOK_DEFAULT TOK_DOUBLEDOT


Terminals, with rules where they appear

$end (0) 0
'(' (40) 46 47
')' (41) 47
error (256) 7 14 23 33 35 45 46 47 51 84 88 89
TOK_IDENTIFIER (258) 25 26 36 39 67 90 91
TOK_B_AND (259) 73
TOK_B_OR (260) 74
TOK_B_XOR (261) 75
TOK_B_NOT (262) 76
TOK_AR_PLUS (263) 78
TOK_AR_MINUS (264) 77 79
TOK_AR_MUL (265) 80
TOK_AR_DIV (266) 81
TOK_AR_MOD (267) 82
TOK_ASSIGN_OP (268) 70
TOK_COMP_OP (269) 83
TOK_IF (270) 49 50 51
TOK_ELSE (271) 50
TOK_ENDEXPR (272) 5 6 21 22 26 32 34 44 48 54
TOK_OPENPAR (273) 44 48 49 50 51 55 56 57 84 85 97
TOK_CLOSEPAR (274) 44 48 49 50 55 56 57 85 97
TOK_OPENBR (275) 11 42 97
TOK_CLOSEBR (276) 13 16 18 43 95 96
TOK_OPENSQ (277) 87 88 89
TOK_CLOSESQ (278) 87
TOK_DOT (279) 90
TOK_COMMA (280)
TOK_DOUBLEDOT (281) 25 101 105
TOK_ROM_DECL (282) 64
TOK_INT_DECL (283) 66
TOK_FLOAT_DECL (284) 65
TOK_FOR_DECL (285) 58
TOK_WHILE_DECL (286) 54 59
TOK_DO_DECL (287) 60
TOK_ROM_CONST (288) 93
TOK_INT_CONST (289) 92
TOK_FLOAT_CONST (290) 94
TOK_PRINT (291) 44 45 46 47
TOK_READ (292) 48
TOK_BREAK (293) 32 33
TOK_CONTINUE (294) 34 35
TOK_GOTO (295) 26
TOK_STRUCT (296) 40
TOK_UNION (297) 41
TOK_SWITCH (298) 97
TOK_CASE (299) 101
TOK_DEFAULT (300) 105
TMP_VAR (301)
LABEL (302)
NAME (303)
INT_CONST (304)
FLOAT_CONST (305)
LITERAL (306)
IFFALSE (307)
IFTRUE (308)
ASSIGN (309)
OR (310)
AND (311)
XOR (312)
NOT (313)
INPUT (314)
OUTPUT (315)
GOTO (316)
CMP (317)
EXPR_ERROR (318)
STMNT_BLOCK_ERROR (319)
IF_WITHOUT_ELSE (320)
NOTX (321)
UMINUS (322)


Nonterminals, with rules where they appear

$accept (70)
    on left: 0
start (71)
    on left: 1 2 3 4, on right: 0
declaration_list (72)
    on left: 5 6 7, on right: 2 3 6 16 18 42
stmnt_list (73)
    on left: 8 9, on right: 2 4 9 13 14 18
stmnt_block_start (74)
    on left: 11, on right: 13 14 16 18
$@1 (75)
    on left: 10, on right: 11
stmnt_block (76)
    on left: 13 14 16 18, on right: 61
$@2 (77)
    on left: 12, on right: 13
$@3 (78)
    on left: 15, on right: 16
$@4 (79)
    on left: 17, on right: 18
expr_or_assignment (80)
    on left: 19 20, on right: 22 57
expression_statement (81)
    on left: 21 22 23, on right: 24 56 57
stmnt (82)
    on left: 24 25 26 27 28 29 30 31 32 33 34 35, on right: 8 9 62
declaration_stmt (83)
    on left: 36 37, on right: 5 6 7
struct_def (84)
    on left: 38, on right: 37
struct_head (85)
    on left: 39, on right: 38
struct_type (86)
    on left: 40 41, on right: 39 67
struct_body (87)
    on left: 42, on right: 38
struct_tail (88)
    on left: 43, on right: 38
print_stmt (89)
    on left: 44 45 46 47, on right: 30
read_stmt (90)
    on left: 48, on right: 31
if_stmt (91)
    on left: 49 50 51, on right: 27
loop_decl (92)
    on left: 52 53 54, on right: 28
loop_while_expr (93)
    on left: 55, on right: 53 54
loop_for_expr (94)
    on left: 56 57, on right: 52
for_decl (95)
    on left: 58, on right: 52
while_decl (96)
    on left: 59, on right: 53
do_while_decl (97)
    on left: 60, on right: 54
instruction_body (98)
    on left: 61 62, on right: 49 50 52 53 54 102 104
type (99)
    on left: 63, on right: 36
type_name (100)
    on left: 64 65 66 67, on right: 63
left_assign_expr (101)
    on left: 68 69, on right: 48 70 71
assignment (102)
    on left: 70, on right: 20
expr (103)
    on left: 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85, on right:
    19 23 44 46 47 49 50 51 55 70 73 74 75 76 77 78 79 80 81 82 83
    84 85 87 89 97 101
array (104)
    on left: 86 87 88 89, on right: 63 87 91
struct_item (105)
    on left: 90, on right: 69
identifier (106)
    on left: 91, on right: 68 90
num_const (107)
    on left: 92 93 94, on right: 72
switch_stmt (108)
    on left: 95 96, on right: 29
switch_head (109)
    on left: 97, on right: 95 96
case_list (110)
    on left: 98 99, on right: 95 96 99
case_stmt (111)
    on left: 100, on right: 98 99 103
case_head (112)
    on left: 101, on right: 100
case_body (113)
    on left: 102 103, on right: 100
default (114)
    on left: 104, on right: 95
default_head (115)
    on left: 105, on right: 104


state 0

    0 $accept: . start $end

    TOK_IDENTIFIER   shift, and go to state 1
    TOK_B_NOT        shift, and go to state 2
    TOK_AR_MINUS     shift, and go to state 3
    TOK_IF           shift, and go to state 4
    TOK_ENDEXPR      shift, and go to state 5
    TOK_OPENPAR      shift, and go to state 6
    TOK_ROM_DECL     shift, and go to state 7
    TOK_INT_DECL     shift, and go to state 8
    TOK_FLOAT_DECL   shift, and go to state 9
    TOK_FOR_DECL     shift, and go to state 10
    TOK_WHILE_DECL   shift, and go to state 11
    TOK_DO_DECL      shift, and go to state 12
    TOK_ROM_CONST    shift, and go to state 13
    TOK_INT_CONST    shift, and go to state 14
    TOK_FLOAT_CONST  shift, and go to state 15
    TOK_PRINT        shift, and go to state 16
    TOK_READ         shift, and go to state 17
    TOK_BREAK        shift, and go to state 18
    TOK_CONTINUE     shift, and go to state 19
    TOK_GOTO         shift, and go to state 20
    TOK_STRUCT       shift, and go to state 21
    TOK_UNION        shift, and go to state 22
    TOK_SWITCH       shift, and go to state 23

    $default  reduce using rule 1 (start)

    start                 go to state 24
    declaration_list      go to state 25
    stmnt_list            go to state 26
    expr_or_assignment    go to state 27
    expression_statement  go to state 28
    stmnt                 go to state 29
    declaration_stmt      go to state 30
    struct_def            go to state 31
    struct_head           go to state 32
    struct_type           go to state 33
    print_stmt            go to state 34
    read_stmt             go to state 35
    if_stmt               go to state 36
    loop_decl             go to state 37
    for_decl              go to state 38
    while_decl            go to state 39
    do_while_decl         go to state 40
    type                  go to state 41
    type_name             go to state 42
    left_assign_expr      go to state 43
    assignment            go to state 44
    expr                  go to state 45
    struct_item           go to state 46
    identifier            go to state 47
    num_const             go to state 48
    switch_stmt           go to state 49
    switch_head           go to state 50


state 1

   25 stmnt: TOK_IDENTIFIER . TOK_DOUBLEDOT
   91 identifier: TOK_IDENTIFIER . array

    TOK_OPENSQ     shift, and go to state 51
    TOK_DOUBLEDOT  shift, and go to state 52

    $default  reduce using rule 86 (array)

    array  go to state 53


state 2

   76 expr: TOK_B_NOT . expr

    TOK_IDENTIFIER   shift, and go to state 54
    TOK_B_NOT        shift, and go to state 2
    TOK_AR_MINUS     shift, and go to state 3
    TOK_OPENPAR      shift, and go to state 6
    TOK_ROM_CONST    shift, and go to state 13
    TOK_INT_CONST    shift, and go to state 14
    TOK_FLOAT_CONST  shift, and go to state 15

    left_assign_expr  go to state 55
    expr              go to state 56
    struct_item       go to state 46
    identifier        go to state 47
    num_const         go to state 48


state 3

   77 expr: TOK_AR_MINUS . expr

    TOK_IDENTIFIER   shift, and go to state 54
    TOK_B_NOT        shift, and go to state 2
    TOK_AR_MINUS     shift, and go to state 3
    TOK_OPENPAR      shift, and go to state 6
    TOK_ROM_CONST    shift, and go to state 13
    TOK_INT_CONST    shift, and go to state 14
    TOK_FLOAT_CONST  shift, and go to state 15

    left_assign_expr  go to state 55
    expr              go to state 57
    struct_item       go to state 46
    identifier        go to state 47
    num_const         go to state 48


state 4

   49 if_stmt: TOK_IF . TOK_OPENPAR expr TOK_CLOSEPAR instruction_body
   50        | TOK_IF . TOK_OPENPAR expr TOK_CLOSEPAR instruction_body TOK_ELSE instruction_body
   51        | TOK_IF . TOK_OPENPAR expr error

    TOK_OPENPAR  shift, and go to state 58


state 5

   21 expression_statement: TOK_ENDEXPR .

    $default  reduce using rule 21 (expression_statement)


state 6

   84 expr: TOK_OPENPAR . expr error
   85     | TOK_OPENPAR . expr TOK_CLOSEPAR

    TOK_IDENTIFIER   shift, and go to state 54
    TOK_B_NOT        shift, and go to state 2
    TOK_AR_MINUS     shift, and go to state 3
    TOK_OPENPAR      shift, and go to state 6
    TOK_ROM_CONST    shift, and go to state 13
    TOK_INT_CONST    shift, and go to state 14
    TOK_FLOAT_CONST  shift, and go to state 15

    left_assign_expr  go to state 55
    expr              go to state 59
    struct_item       go to state 46
    identifier        go to state 47
    num_const         go to state 48


state 7

   64 type_name: TOK_ROM_DECL .

    $default  reduce using rule 64 (type_name)


state 8

   66 type_name: TOK_INT_DECL .

    $default  reduce using rule 66 (type_name)


state 9

   65 type_name: TOK_FLOAT_DECL .

    $default  reduce using rule 65 (type_name)


state 10

   58 for_decl: TOK_FOR_DECL .

    $default  reduce using rule 58 (for_decl)


state 11

   59 while_decl: TOK_WHILE_DECL .

    $default  reduce using rule 59 (while_decl)


state 12

   60 do_while_decl: TOK_DO_DECL .

    $default  reduce using rule 60 (do_while_decl)


state 13

   93 num_const: TOK_ROM_CONST .

    $default  reduce using rule 93 (num_const)


state 14

   92 num_const: TOK_INT_CONST .

    $default  reduce using rule 92 (num_const)


state 15

   94 num_const: TOK_FLOAT_CONST .

    $default  reduce using rule 94 (num_const)


state 16

   44 print_stmt: TOK_PRINT . TOK_OPENPAR expr TOK_CLOSEPAR TOK_ENDEXPR
   45           | TOK_PRINT . error
   46           | TOK_PRINT . '(' expr error
   47           | TOK_PRINT . '(' expr ')' error

    error        shift, and go to state 60
    TOK_OPENPAR  shift, and go to state 61
    '('          shift, and go to state 62


state 17

   48 read_stmt: TOK_READ . TOK_OPENPAR left_assign_expr TOK_CLOSEPAR TOK_ENDEXPR

    TOK_OPENPAR  shift, and go to state 63


state 18

   32 stmnt: TOK_BREAK . TOK_ENDEXPR
   33      | TOK_BREAK . error

    error        shift, and go to state 64
    TOK_ENDEXPR  shift, and go to state 65


state 19

   34 stmnt: TOK_CONTINUE . TOK_ENDEXPR
   35      | TOK_CONTINUE . error

    error        shift, and go to state 66
    TOK_ENDEXPR  shift, and go to state 67


state 20

   26 stmnt: TOK_GOTO . TOK_IDENTIFIER TOK_ENDEXPR

    TOK_IDENTIFIER  shift, and go to state 68


state 21

   40 struct_type: TOK_STRUCT .

    $default  reduce using rule 40 (struct_type)


state 22

   41 struct_type: TOK_UNION .

    $default  reduce using rule 41 (struct_type)


state 23

   97 switch_head: TOK_SWITCH . TOK_OPENPAR expr TOK_CLOSEPAR TOK_OPENBR

    TOK_OPENPAR  shift, and go to state 69


state 24

    0 $accept: start . $end

    $end  shift, and go to state 70


state 25

    2 start: declaration_list . stmnt_list
    3      | declaration_list .
    6 declaration_list: declaration_list . declaration_stmt TOK_ENDEXPR

    TOK_IDENTIFIER   shift, and go to state 1
    TOK_B_NOT        shift, and go to state 2
    TOK_AR_MINUS     shift, and go to state 3
    TOK_IF           shift, and go to state 4
    TOK_ENDEXPR      shift, and go to state 5
    TOK_OPENPAR      shift, and go to state 6
    TOK_ROM_DECL     shift, and go to state 7
    TOK_INT_DECL     shift, and go to state 8
    TOK_FLOAT_DECL   shift, and go to state 9
    TOK_FOR_DECL     shift, and go to state 10
    TOK_WHILE_DECL   shift, and go to state 11
    TOK_DO_DECL      shift, and go to state 12
    TOK_ROM_CONST    shift, and go to state 13
    TOK_INT_CONST    shift, and go to state 14
    TOK_FLOAT_CONST  shift, and go to state 15
    TOK_PRINT        shift, and go to state 16
    TOK_READ         shift, and go to state 17
    TOK_BREAK        shift, and go to state 18
    TOK_CONTINUE     shift, and go to state 19
    TOK_GOTO         shift, and go to state 20
    TOK_STRUCT       shift, and go to state 21
    TOK_UNION        shift, and go to state 22
    TOK_SWITCH       shift, and go to state 23

    $default  reduce using rule 3 (start)

    stmnt_list            go to state 71
    expr_or_assignment    go to state 27
    expression_statement  go to state 28
    stmnt                 go to state 29
    declaration_stmt      go to state 72
    struct_def            go to state 31
    struct_head           go to state 32
    struct_type           go to state 33
    print_stmt            go to state 34
    read_stmt             go to state 35
    if_stmt               go to state 36
    loop_decl             go to state 37
    for_decl              go to state 38
    while_decl            go to state 39
    do_while_decl         go to state 40
    type                  go to state 41
    type_name             go to state 42
    left_assign_expr      go to state 43
    assignment            go to state 44
    expr                  go to state 45
    struct_item           go to state 46
    identifier            go to state 47
    num_const             go to state 48
    switch_stmt           go to state 49
    switch_head           go to state 50


state 26

    4 start: stmnt_list .
    9 stmnt_list: stmnt_list . stmnt

    TOK_IDENTIFIER   shift, and go to state 1
    TOK_B_NOT        shift, and go to state 2
    TOK_AR_MINUS     shift, and go to state 3
    TOK_IF           shift, and go to state 4
    TOK_ENDEXPR      shift, and go to state 5
    TOK_OPENPAR      shift, and go to state 6
    TOK_FOR_DECL     shift, and go to state 10
    TOK_WHILE_DECL   shift, and go to state 11
    TOK_DO_DECL      shift, and go to state 12
    TOK_ROM_CONST    shift, and go to state 13
    TOK_INT_CONST    shift, and go to state 14
    TOK_FLOAT_CONST  shift, and go to state 15
    TOK_PRINT        shift, and go to state 16
    TOK_READ         shift, and go to state 17
    TOK_BREAK        shift, and go to state 18
    TOK_CONTINUE     shift, and go to state 19
    TOK_GOTO         shift, and go to state 20
    TOK_SWITCH       shift, and go to state 23

    $default  reduce using rule 4 (start)

    expr_or_assignment    go to state 27
    expression_statement  go to state 28
    stmnt                 go to state 73
    print_stmt            go to state 34
    read_stmt             go to state 35
    if_stmt               go to state 36
    loop_decl             go to state 37
    for_decl              go to state 38
    while_decl            go to state 39
    do_while_decl         go to state 40
    left_assign_expr      go to state 43
    assignment            go to state 44
    expr                  go to state 45
    struct_item           go to state 46
    identifier            go to state 47
    num_const             go to state 48
    switch_stmt           go to state 49
    switch_head           go to state 50


state 27

   22 expression_statement: expr_or_assignment . TOK_ENDEXPR

    TOK_ENDEXPR  shift, and go to state 74


state 28

   24 stmnt: expression_statement .

    $default  reduce using rule 24 (stmnt)


state 29

    8 stmnt_list: stmnt .

    $default  reduce using rule 8 (stmnt_list)


state 30

    5 declaration_list: declaration_stmt . TOK_ENDEXPR
    7                 | declaration_stmt . error

    error        shift, and go to state 75
    TOK_ENDEXPR  shift, and go to state 76


state 31

   37 declaration_stmt: struct_def .

    $default  reduce using rule 37 (declaration_stmt)


state 32

   38 struct_def: struct_head . struct_body struct_tail

    TOK_OPENBR  shift, and go to state 77

    struct_body  go to state 78


state 33

   39 struct_head: struct_type . TOK_IDENTIFIER
   67 type_name: struct_type . TOK_IDENTIFIER

    TOK_IDENTIFIER  shift, and go to state 79


state 34

   30 stmnt: print_stmt .

    $default  reduce using rule 30 (stmnt)


state 35

   31 stmnt: read_stmt .

    $default  reduce using rule 31 (stmnt)


state 36

   27 stmnt: if_stmt .

    $default  reduce using rule 27 (stmnt)


state 37

   28 stmnt: loop_decl .

    $default  reduce using rule 28 (stmnt)


state 38

   52 loop_decl: for_decl . loop_for_expr instruction_body

    TOK_OPENPAR  shift, and go to state 80

    loop_for_expr  go to state 81


state 39

   53 loop_decl: while_decl . loop_while_expr instruction_body

    TOK_OPENPAR  shift, and go to state 82

    loop_while_expr  go to state 83


state 40

   54 loop_decl: do_while_decl . instruction_body TOK_WHILE_DECL loop_while_expr TOK_ENDEXPR

    TOK_IDENTIFIER   shift, and go to state 1
    TOK_B_NOT        shift, and go to state 2
    TOK_AR_MINUS     shift, and go to state 3
    TOK_IF           shift, and go to state 4
    TOK_ENDEXPR      shift, and go to state 5
    TOK_OPENPAR      shift, and go to state 6
    TOK_OPENBR       shift, and go to state 84
    TOK_FOR_DECL     shift, and go to state 10
    TOK_WHILE_DECL   shift, and go to state 11
    TOK_DO_DECL      shift, and go to state 12
    TOK_ROM_CONST    shift, and go to state 13
    TOK_INT_CONST    shift, and go to state 14
    TOK_FLOAT_CONST  shift, and go to state 15
    TOK_PRINT        shift, and go to state 16
    TOK_READ         shift, and go to state 17
    TOK_BREAK        shift, and go to state 18
    TOK_CONTINUE     shift, and go to state 19
    TOK_GOTO         shift, and go to state 20
    TOK_SWITCH       shift, and go to state 23

    stmnt_block_start     go to state 85
    stmnt_block           go to state 86
    expr_or_assignment    go to state 27
    expression_statement  go to state 28
    stmnt                 go to state 87
    print_stmt            go to state 34
    read_stmt             go to state 35
    if_stmt               go to state 36
    loop_decl             go to state 37
    for_decl              go to state 38
    while_decl            go to state 39
    do_while_decl         go to state 40
    instruction_body      go to state 88
    left_assign_expr      go to state 43
    assignment            go to state 44
    expr                  go to state 45
    struct_item           go to state 46
    identifier            go to state 47
    num_const             go to state 48
    switch_stmt           go to state 49
    switch_head           go to state 50


state 41

   36 declaration_stmt: type . TOK_IDENTIFIER

    TOK_IDENTIFIER  shift, and go to state 89


state 42

   63 type: type_name . array

    TOK_OPENSQ  shift, and go to state 51

    $default  reduce using rule 86 (array)

    array  go to state 90


state 43

   70 assignment: left_assign_expr . TOK_ASSIGN_OP expr
   71 expr: left_assign_expr .

    TOK_ASSIGN_OP  shift, and go to state 91

    $default  reduce using rule 71 (expr)


state 44

   20 expr_or_assignment: assignment .

    $default  reduce using rule 20 (expr_or_assignment)


state 45

   19 expr_or_assignment: expr .
   23 expression_statement: expr . error
   73 expr: expr . TOK_B_AND expr
   74     | expr . TOK_B_OR expr
   75     | expr . TOK_B_XOR expr
   78     | expr . TOK_AR_PLUS expr
   79     | expr . TOK_AR_MINUS expr
   80     | expr . TOK_AR_MUL expr
   81     | expr . TOK_AR_DIV expr
   82     | expr . TOK_AR_MOD expr
   83     | expr . TOK_COMP_OP expr

    error         shift, and go to state 92
    TOK_B_AND     shift, and go to state 93
    TOK_B_OR      shift, and go to state 94
    TOK_B_XOR     shift, and go to state 95
    TOK_AR_PLUS   shift, and go to state 96
    TOK_AR_MINUS  shift, and go to state 97
    TOK_AR_MUL    shift, and go to state 98
    TOK_AR_DIV    shift, and go to state 99
    TOK_AR_MOD    shift, and go to state 100
    TOK_COMP_OP   shift, and go to state 101

    TOK_ENDEXPR  reduce using rule 19 (expr_or_assignment)


state 46

   69 left_assign_expr: struct_item .

    $default  reduce using rule 69 (left_assign_expr)


state 47

   68 left_assign_expr: identifier .
   90 struct_item: identifier . TOK_DOT TOK_IDENTIFIER

    TOK_DOT  shift, and go to state 102

    $default  reduce using rule 68 (left_assign_expr)


state 48

   72 expr: num_const .

    $default  reduce using rule 72 (expr)


state 49

   29 stmnt: switch_stmt .

    $default  reduce using rule 29 (stmnt)


state 50

   95 switch_stmt: switch_head . case_list default TOK_CLOSEBR
   96            | switch_head . case_list TOK_CLOSEBR

    TOK_CASE  shift, and go to state 103

    case_list  go to state 104
    case_stmt  go to state 105
    case_head  go to state 106


state 51

   87 array: TOK_OPENSQ . expr TOK_CLOSESQ array
   88      | TOK_OPENSQ . error
   89      | TOK_OPENSQ . expr error

    error            shift, and go to state 107
    TOK_IDENTIFIER   shift, and go to state 54
    TOK_B_NOT        shift, and go to state 2
    TOK_AR_MINUS     shift, and go to state 3
    TOK_OPENPAR      shift, and go to state 6
    TOK_ROM_CONST    shift, and go to state 13
    TOK_INT_CONST    shift, and go to state 14
    TOK_FLOAT_CONST  shift, and go to state 15

    left_assign_expr  go to state 55
    expr              go to state 108
    struct_item       go to state 46
    identifier        go to state 47
    num_const         go to state 48


state 52

   25 stmnt: TOK_IDENTIFIER TOK_DOUBLEDOT .

    $default  reduce using rule 25 (stmnt)


state 53

   91 identifier: TOK_IDENTIFIER array .

    $default  reduce using rule 91 (identifier)


state 54

   91 identifier: TOK_IDENTIFIER . array

    TOK_OPENSQ  shift, and go to state 51

    $default  reduce using rule 86 (array)

    array  go to state 53


state 55

   71 expr: left_assign_expr .

    $default  reduce using rule 71 (expr)


state 56

   73 expr: expr . TOK_B_AND expr
   74     | expr . TOK_B_OR expr
   75     | expr . TOK_B_XOR expr
   76     | TOK_B_NOT expr .
   78     | expr . TOK_AR_PLUS expr
   79     | expr . TOK_AR_MINUS expr
   80     | expr . TOK_AR_MUL expr
   81     | expr . TOK_AR_DIV expr
   82     | expr . TOK_AR_MOD expr
   83     | expr . TOK_COMP_OP expr

    $default  reduce using rule 76 (expr)


state 57

   73 expr: expr . TOK_B_AND expr
   74     | expr . TOK_B_OR expr
   75     | expr . TOK_B_XOR expr
   77     | TOK_AR_MINUS expr .
   78     | expr . TOK_AR_PLUS expr
   79     | expr . TOK_AR_MINUS expr
   80     | expr . TOK_AR_MUL expr
   81     | expr . TOK_AR_DIV expr
   82     | expr . TOK_AR_MOD expr
   83     | expr . TOK_COMP_OP expr

    $default  reduce using rule 77 (expr)


state 58

   49 if_stmt: TOK_IF TOK_OPENPAR . expr TOK_CLOSEPAR instruction_body
   50        | TOK_IF TOK_OPENPAR . expr TOK_CLOSEPAR instruction_body TOK_ELSE instruction_body
   51        | TOK_IF TOK_OPENPAR . expr error

    TOK_IDENTIFIER   shift, and go to state 54
    TOK_B_NOT        shift, and go to state 2
    TOK_AR_MINUS     shift, and go to state 3
    TOK_OPENPAR      shift, and go to state 6
    TOK_ROM_CONST    shift, and go to state 13
    TOK_INT_CONST    shift, and go to state 14
    TOK_FLOAT_CONST  shift, and go to state 15

    left_assign_expr  go to state 55
    expr              go to state 109
    struct_item       go to state 46
    identifier        go to state 47
    num_const         go to state 48


state 59

   73 expr: expr . TOK_B_AND expr
   74     | expr . TOK_B_OR expr
   75     | expr . TOK_B_XOR expr
   78     | expr . TOK_AR_PLUS expr
   79     | expr . TOK_AR_MINUS expr
   80     | expr . TOK_AR_MUL expr
   81     | expr . TOK_AR_DIV expr
   82     | expr . TOK_AR_MOD expr
   83     | expr . TOK_COMP_OP expr
   84     | TOK_OPENPAR expr . error
   85     | TOK_OPENPAR expr . TOK_CLOSEPAR

    error         shift, and go to state 110
    TOK_B_AND     shift, and go to state 93
    TOK_B_OR      shift, and go to state 94
    TOK_B_XOR     shift, and go to state 95
    TOK_AR_PLUS   shift, and go to state 96
    TOK_AR_MINUS  shift, and go to state 97
    TOK_AR_MUL    shift, and go to state 98
    TOK_AR_DIV    shift, and go to state 99
    TOK_AR_MOD    shift, and go to state 100
    TOK_COMP_OP   shift, and go to state 101
    TOK_CLOSEPAR  shift, and go to state 111


state 60

   45 print_stmt: TOK_PRINT error .

    $default  reduce using rule 45 (print_stmt)


state 61

   44 print_stmt: TOK_PRINT TOK_OPENPAR . expr TOK_CLOSEPAR TOK_ENDEXPR

    TOK_IDENTIFIER   shift, and go to state 54
    TOK_B_NOT        shift, and go to state 2
    TOK_AR_MINUS     shift, and go to state 3
    TOK_OPENPAR      shift, and go to state 6
    TOK_ROM_CONST    shift, and go to state 13
    TOK_INT_CONST    shift, and go to state 14
    TOK_FLOAT_CONST  shift, and go to state 15

    left_assign_expr  go to state 55
    expr              go to state 112
    struct_item       go to state 46
    identifier        go to state 47
    num_const         go to state 48


state 62

   46 print_stmt: TOK_PRINT '(' . expr error
   47           | TOK_PRINT '(' . expr ')' error

    TOK_IDENTIFIER   shift, and go to state 54
    TOK_B_NOT        shift, and go to state 2
    TOK_AR_MINUS     shift, and go to state 3
    TOK_OPENPAR      shift, and go to state 6
    TOK_ROM_CONST    shift, and go to state 13
    TOK_INT_CONST    shift, and go to state 14
    TOK_FLOAT_CONST  shift, and go to state 15

    left_assign_expr  go to state 55
    expr              go to state 113
    struct_item       go to state 46
    identifier        go to state 47
    num_const         go to state 48


state 63

   48 read_stmt: TOK_READ TOK_OPENPAR . left_assign_expr TOK_CLOSEPAR TOK_ENDEXPR

    TOK_IDENTIFIER  shift, and go to state 54

    left_assign_expr  go to state 114
    struct_item       go to state 46
    identifier        go to state 47


state 64

   33 stmnt: TOK_BREAK error .

    $default  reduce using rule 33 (stmnt)


state 65

   32 stmnt: TOK_BREAK TOK_ENDEXPR .

    $default  reduce using rule 32 (stmnt)


state 66

   35 stmnt: TOK_CONTINUE error .

    $default  reduce using rule 35 (stmnt)


state 67

   34 stmnt: TOK_CONTINUE TOK_ENDEXPR .

    $default  reduce using rule 34 (stmnt)


state 68

   26 stmnt: TOK_GOTO TOK_IDENTIFIER . TOK_ENDEXPR

    TOK_ENDEXPR  shift, and go to state 115


state 69

   97 switch_head: TOK_SWITCH TOK_OPENPAR . expr TOK_CLOSEPAR TOK_OPENBR

    TOK_IDENTIFIER   shift, and go to state 54
    TOK_B_NOT        shift, and go to state 2
    TOK_AR_MINUS     shift, and go to state 3
    TOK_OPENPAR      shift, and go to state 6
    TOK_ROM_CONST    shift, and go to state 13
    TOK_INT_CONST    shift, and go to state 14
    TOK_FLOAT_CONST  shift, and go to state 15

    left_assign_expr  go to state 55
    expr              go to state 116
    struct_item       go to state 46
    identifier        go to state 47
    num_const         go to state 48


state 70

    0 $accept: start $end .

    $default  accept


state 71

    2 start: declaration_list stmnt_list .
    9 stmnt_list: stmnt_list . stmnt

    TOK_IDENTIFIER   shift, and go to state 1
    TOK_B_NOT        shift, and go to state 2
    TOK_AR_MINUS     shift, and go to state 3
    TOK_IF           shift, and go to state 4
    TOK_ENDEXPR      shift, and go to state 5
    TOK_OPENPAR      shift, and go to state 6
    TOK_FOR_DECL     shift, and go to state 10
    TOK_WHILE_DECL   shift, and go to state 11
    TOK_DO_DECL      shift, and go to state 12
    TOK_ROM_CONST    shift, and go to state 13
    TOK_INT_CONST    shift, and go to state 14
    TOK_FLOAT_CONST  shift, and go to state 15
    TOK_PRINT        shift, and go to state 16
    TOK_READ         shift, and go to state 17
    TOK_BREAK        shift, and go to state 18
    TOK_CONTINUE     shift, and go to state 19
    TOK_GOTO         shift, and go to state 20
    TOK_SWITCH       shift, and go to state 23

    $default  reduce using rule 2 (start)

    expr_or_assignment    go to state 27
    expression_statement  go to state 28
    stmnt                 go to state 73
    print_stmt            go to state 34
    read_stmt             go to state 35
    if_stmt               go to state 36
    loop_decl             go to state 37
    for_decl              go to state 38
    while_decl            go to state 39
    do_while_decl         go to state 40
    left_assign_expr      go to state 43
    assignment            go to state 44
    expr                  go to state 45
    struct_item           go to state 46
    identifier            go to state 47
    num_const             go to state 48
    switch_stmt           go to state 49
    switch_head           go to state 50


state 72

    6 declaration_list: declaration_list declaration_stmt . TOK_ENDEXPR

    TOK_ENDEXPR  shift, and go to state 117


state 73

    9 stmnt_list: stmnt_list stmnt .

    $default  reduce using rule 9 (stmnt_list)


state 74

   22 expression_statement: expr_or_assignment TOK_ENDEXPR .

    $default  reduce using rule 22 (expression_statement)


state 75

    7 declaration_list: declaration_stmt error .

    $default  reduce using rule 7 (declaration_list)


state 76

    5 declaration_list: declaration_stmt TOK_ENDEXPR .

    $default  reduce using rule 5 (declaration_list)


state 77

   42 struct_body: TOK_OPENBR . declaration_list

    TOK_ROM_DECL    shift, and go to state 7
    TOK_INT_DECL    shift, and go to state 8
    TOK_FLOAT_DECL  shift, and go to state 9
    TOK_STRUCT      shift, and go to state 21
    TOK_UNION       shift, and go to state 22

    declaration_list  go to state 118
    declaration_stmt  go to state 30
    struct_def        go to state 31
    struct_head       go to state 32
    struct_type       go to state 33
    type              go to state 41
    type_name         go to state 42


state 78

   38 struct_def: struct_head struct_body . struct_tail

    TOK_CLOSEBR  shift, and go to state 119

    struct_tail  go to state 120


state 79

   39 struct_head: struct_type TOK_IDENTIFIER .
   67 type_name: struct_type TOK_IDENTIFIER .

    TOK_OPENBR  reduce using rule 39 (struct_head)
    $default    reduce using rule 67 (type_name)


state 80

   56 loop_for_expr: TOK_OPENPAR . expression_statement expression_statement TOK_CLOSEPAR
   57              | TOK_OPENPAR . expression_statement expression_statement expr_or_assignment TOK_CLOSEPAR

    TOK_IDENTIFIER   shift, and go to state 54
    TOK_B_NOT        shift, and go to state 2
    TOK_AR_MINUS     shift, and go to state 3
    TOK_ENDEXPR      shift, and go to state 5
    TOK_OPENPAR      shift, and go to state 6
    TOK_ROM_CONST    shift, and go to state 13
    TOK_INT_CONST    shift, and go to state 14
    TOK_FLOAT_CONST  shift, and go to state 15

    expr_or_assignment    go to state 27
    expression_statement  go to state 121
    left_assign_expr      go to state 43
    assignment            go to state 44
    expr                  go to state 45
    struct_item           go to state 46
    identifier            go to state 47
    num_const             go to state 48


state 81

   52 loop_decl: for_decl loop_for_expr . instruction_body

    TOK_IDENTIFIER   shift, and go to state 1
    TOK_B_NOT        shift, and go to state 2
    TOK_AR_MINUS     shift, and go to state 3
    TOK_IF           shift, and go to state 4
    TOK_ENDEXPR      shift, and go to state 5
    TOK_OPENPAR      shift, and go to state 6
    TOK_OPENBR       shift, and go to state 84
    TOK_FOR_DECL     shift, and go to state 10
    TOK_WHILE_DECL   shift, and go to state 11
    TOK_DO_DECL      shift, and go to state 12
    TOK_ROM_CONST    shift, and go to state 13
    TOK_INT_CONST    shift, and go to state 14
    TOK_FLOAT_CONST  shift, and go to state 15
    TOK_PRINT        shift, and go to state 16
    TOK_READ         shift, and go to state 17
    TOK_BREAK        shift, and go to state 18
    TOK_CONTINUE     shift, and go to state 19
    TOK_GOTO         shift, and go to state 20
    TOK_SWITCH       shift, and go to state 23

    stmnt_block_start     go to state 85
    stmnt_block           go to state 86
    expr_or_assignment    go to state 27
    expression_statement  go to state 28
    stmnt                 go to state 87
    print_stmt            go to state 34
    read_stmt             go to state 35
    if_stmt               go to state 36
    loop_decl             go to state 37
    for_decl              go to state 38
    while_decl            go to state 39
    do_while_decl         go to state 40
    instruction_body      go to state 122
    left_assign_expr      go to state 43
    assignment            go to state 44
    expr                  go to state 45
    struct_item           go to state 46
    identifier            go to state 47
    num_const             go to state 48
    switch_stmt           go to state 49
    switch_head           go to state 50


state 82

   55 loop_while_expr: TOK_OPENPAR . expr TOK_CLOSEPAR

    TOK_IDENTIFIER   shift, and go to state 54
    TOK_B_NOT        shift, and go to state 2
    TOK_AR_MINUS     shift, and go to state 3
    TOK_OPENPAR      shift, and go to state 6
    TOK_ROM_CONST    shift, and go to state 13
    TOK_INT_CONST    shift, and go to state 14
    TOK_FLOAT_CONST  shift, and go to state 15

    left_assign_expr  go to state 55
    expr              go to state 123
    struct_item       go to state 46
    identifier        go to state 47
    num_const         go to state 48


state 83

   53 loop_decl: while_decl loop_while_expr . instruction_body

    TOK_IDENTIFIER   shift, and go to state 1
    TOK_B_NOT        shift, and go to state 2
    TOK_AR_MINUS     shift, and go to state 3
    TOK_IF           shift, and go to state 4
    TOK_ENDEXPR      shift, and go to state 5
    TOK_OPENPAR      shift, and go to state 6
    TOK_OPENBR       shift, and go to state 84
    TOK_FOR_DECL     shift, and go to state 10
    TOK_WHILE_DECL   shift, and go to state 11
    TOK_DO_DECL      shift, and go to state 12
    TOK_ROM_CONST    shift, and go to state 13
    TOK_INT_CONST    shift, and go to state 14
    TOK_FLOAT_CONST  shift, and go to state 15
    TOK_PRINT        shift, and go to state 16
    TOK_READ         shift, and go to state 17
    TOK_BREAK        shift, and go to state 18
    TOK_CONTINUE     shift, and go to state 19
    TOK_GOTO         shift, and go to state 20
    TOK_SWITCH       shift, and go to state 23

    stmnt_block_start     go to state 85
    stmnt_block           go to state 86
    expr_or_assignment    go to state 27
    expression_statement  go to state 28
    stmnt                 go to state 87
    print_stmt            go to state 34
    read_stmt             go to state 35
    if_stmt               go to state 36
    loop_decl             go to state 37
    for_decl              go to state 38
    while_decl            go to state 39
    do_while_decl         go to state 40
    instruction_body      go to state 124
    left_assign_expr      go to state 43
    assignment            go to state 44
    expr                  go to state 45
    struct_item           go to state 46
    identifier            go to state 47
    num_const             go to state 48
    switch_stmt           go to state 49
    switch_head           go to state 50


state 84

   11 stmnt_block_start: TOK_OPENBR . $@1

    $default  reduce using rule 10 ($@1)

    $@1  go to state 125


state 85

   13 stmnt_block: stmnt_block_start . stmnt_list TOK_CLOSEBR $@2
   14            | stmnt_block_start . stmnt_list error
   16            | stmnt_block_start . declaration_list TOK_CLOSEBR $@3
   18            | stmnt_block_start . declaration_list stmnt_list TOK_CLOSEBR $@4

    TOK_IDENTIFIER   shift, and go to state 1
    TOK_B_NOT        shift, and go to state 2
    TOK_AR_MINUS     shift, and go to state 3
    TOK_IF           shift, and go to state 4
    TOK_ENDEXPR      shift, and go to state 5
    TOK_OPENPAR      shift, and go to state 6
    TOK_ROM_DECL     shift, and go to state 7
    TOK_INT_DECL     shift, and go to state 8
    TOK_FLOAT_DECL   shift, and go to state 9
    TOK_FOR_DECL     shift, and go to state 10
    TOK_WHILE_DECL   shift, and go to state 11
    TOK_DO_DECL      shift, and go to state 12
    TOK_ROM_CONST    shift, and go to state 13
    TOK_INT_CONST    shift, and go to state 14
    TOK_FLOAT_CONST  shift, and go to state 15
    TOK_PRINT        shift, and go to state 16
    TOK_READ         shift, and go to state 17
    TOK_BREAK        shift, and go to state 18
    TOK_CONTINUE     shift, and go to state 19
    TOK_GOTO         shift, and go to state 20
    TOK_STRUCT       shift, and go to state 21
    TOK_UNION        shift, and go to state 22
    TOK_SWITCH       shift, and go to state 23

    declaration_list      go to state 126
    stmnt_list            go to state 127
    expr_or_assignment    go to state 27
    expression_statement  go to state 28
    stmnt                 go to state 29
    declaration_stmt      go to state 30
    struct_def            go to state 31
    struct_head           go to state 32
    struct_type           go to state 33
    print_stmt            go to state 34
    read_stmt             go to state 35
    if_stmt               go to state 36
    loop_decl             go to state 37
    for_decl              go to state 38
    while_decl            go to state 39
    do_while_decl         go to state 40
    type                  go to state 41
    type_name             go to state 42
    left_assign_expr      go to state 43
    assignment            go to state 44
    expr                  go to state 45
    struct_item           go to state 46
    identifier            go to state 47
    num_const             go to state 48
    switch_stmt           go to state 49
    switch_head           go to state 50


state 86

   61 instruction_body: stmnt_block .

    $default  reduce using rule 61 (instruction_body)


state 87

   62 instruction_body: stmnt .

    $default  reduce using rule 62 (instruction_body)


state 88

   54 loop_decl: do_while_decl instruction_body . TOK_WHILE_DECL loop_while_expr TOK_ENDEXPR

    TOK_WHILE_DECL  shift, and go to state 128


state 89

   36 declaration_stmt: type TOK_IDENTIFIER .

    $default  reduce using rule 36 (declaration_stmt)


state 90

   63 type: type_name array .

    $default  reduce using rule 63 (type)


state 91

   70 assignment: left_assign_expr TOK_ASSIGN_OP . expr

    TOK_IDENTIFIER   shift, and go to state 54
    TOK_B_NOT        shift, and go to state 2
    TOK_AR_MINUS     shift, and go to state 3
    TOK_OPENPAR      shift, and go to state 6
    TOK_ROM_CONST    shift, and go to state 13
    TOK_INT_CONST    shift, and go to state 14
    TOK_FLOAT_CONST  shift, and go to state 15

    left_assign_expr  go to state 55
    expr              go to state 129
    struct_item       go to state 46
    identifier        go to state 47
    num_const         go to state 48


state 92

   23 expression_statement: expr error .

    $default  reduce using rule 23 (expression_statement)


state 93

   73 expr: expr TOK_B_AND . expr

    TOK_IDENTIFIER   shift, and go to state 54
    TOK_B_NOT        shift, and go to state 2
    TOK_AR_MINUS     shift, and go to state 3
    TOK_OPENPAR      shift, and go to state 6
    TOK_ROM_CONST    shift, and go to state 13
    TOK_INT_CONST    shift, and go to state 14
    TOK_FLOAT_CONST  shift, and go to state 15

    left_assign_expr  go to state 55
    expr              go to state 130
    struct_item       go to state 46
    identifier        go to state 47
    num_const         go to state 48


state 94

   74 expr: expr TOK_B_OR . expr

    TOK_IDENTIFIER   shift, and go to state 54
    TOK_B_NOT        shift, and go to state 2
    TOK_AR_MINUS     shift, and go to state 3
    TOK_OPENPAR      shift, and go to state 6
    TOK_ROM_CONST    shift, and go to state 13
    TOK_INT_CONST    shift, and go to state 14
    TOK_FLOAT_CONST  shift, and go to state 15

    left_assign_expr  go to state 55
    expr              go to state 131
    struct_item       go to state 46
    identifier        go to state 47
    num_const         go to state 48


state 95

   75 expr: expr TOK_B_XOR . expr

    TOK_IDENTIFIER   shift, and go to state 54
    TOK_B_NOT        shift, and go to state 2
    TOK_AR_MINUS     shift, and go to state 3
    TOK_OPENPAR      shift, and go to state 6
    TOK_ROM_CONST    shift, and go to state 13
    TOK_INT_CONST    shift, and go to state 14
    TOK_FLOAT_CONST  shift, and go to state 15

    left_assign_expr  go to state 55
    expr              go to state 132
    struct_item       go to state 46
    identifier        go to state 47
    num_const         go to state 48


state 96

   78 expr: expr TOK_AR_PLUS . expr

    TOK_IDENTIFIER   shift, and go to state 54
    TOK_B_NOT        shift, and go to state 2
    TOK_AR_MINUS     shift, and go to state 3
    TOK_OPENPAR      shift, and go to state 6
    TOK_ROM_CONST    shift, and go to state 13
    TOK_INT_CONST    shift, and go to state 14
    TOK_FLOAT_CONST  shift, and go to state 15

    left_assign_expr  go to state 55
    expr              go to state 133
    struct_item       go to state 46
    identifier        go to state 47
    num_const         go to state 48


state 97

   79 expr: expr TOK_AR_MINUS . expr

    TOK_IDENTIFIER   shift, and go to state 54
    TOK_B_NOT        shift, and go to state 2
    TOK_AR_MINUS     shift, and go to state 3
    TOK_OPENPAR      shift, and go to state 6
    TOK_ROM_CONST    shift, and go to state 13
    TOK_INT_CONST    shift, and go to state 14
    TOK_FLOAT_CONST  shift, and go to state 15

    left_assign_expr  go to state 55
    expr              go to state 134
    struct_item       go to state 46
    identifier        go to state 47
    num_const         go to state 48


state 98

   80 expr: expr TOK_AR_MUL . expr

    TOK_IDENTIFIER   shift, and go to state 54
    TOK_B_NOT        shift, and go to state 2
    TOK_AR_MINUS     shift, and go to state 3
    TOK_OPENPAR      shift, and go to state 6
    TOK_ROM_CONST    shift, and go to state 13
    TOK_INT_CONST    shift, and go to state 14
    TOK_FLOAT_CONST  shift, and go to state 15

    left_assign_expr  go to state 55
    expr              go to state 135
    struct_item       go to state 46
    identifier        go to state 47
    num_const         go to state 48


state 99

   81 expr: expr TOK_AR_DIV . expr

    TOK_IDENTIFIER   shift, and go to state 54
    TOK_B_NOT        shift, and go to state 2
    TOK_AR_MINUS     shift, and go to state 3
    TOK_OPENPAR      shift, and go to state 6
    TOK_ROM_CONST    shift, and go to state 13
    TOK_INT_CONST    shift, and go to state 14
    TOK_FLOAT_CONST  shift, and go to state 15

    left_assign_expr  go to state 55
    expr              go to state 136
    struct_item       go to state 46
    identifier        go to state 47
    num_const         go to state 48


state 100

   82 expr: expr TOK_AR_MOD . expr

    TOK_IDENTIFIER   shift, and go to state 54
    TOK_B_NOT        shift, and go to state 2
    TOK_AR_MINUS     shift, and go to state 3
    TOK_OPENPAR      shift, and go to state 6
    TOK_ROM_CONST    shift, and go to state 13
    TOK_INT_CONST    shift, and go to state 14
    TOK_FLOAT_CONST  shift, and go to state 15

    left_assign_expr  go to state 55
    expr              go to state 137
    struct_item       go to state 46
    identifier        go to state 47
    num_const         go to state 48


state 101

   83 expr: expr TOK_COMP_OP . expr

    TOK_IDENTIFIER   shift, and go to state 54
    TOK_B_NOT        shift, and go to state 2
    TOK_AR_MINUS     shift, and go to state 3
    TOK_OPENPAR      shift, and go to state 6
    TOK_ROM_CONST    shift, and go to state 13
    TOK_INT_CONST    shift, and go to state 14
    TOK_FLOAT_CONST  shift, and go to state 15

    left_assign_expr  go to state 55
    expr              go to state 138
    struct_item       go to state 46
    identifier        go to state 47
    num_const         go to state 48


state 102

   90 struct_item: identifier TOK_DOT . TOK_IDENTIFIER

    TOK_IDENTIFIER  shift, and go to state 139


state 103

  101 case_head: TOK_CASE . expr TOK_DOUBLEDOT

    TOK_IDENTIFIER   shift, and go to state 54
    TOK_B_NOT        shift, and go to state 2
    TOK_AR_MINUS     shift, and go to state 3
    TOK_OPENPAR      shift, and go to state 6
    TOK_ROM_CONST    shift, and go to state 13
    TOK_INT_CONST    shift, and go to state 14
    TOK_FLOAT_CONST  shift, and go to state 15

    left_assign_expr  go to state 55
    expr              go to state 140
    struct_item       go to state 46
    identifier        go to state 47
    num_const         go to state 48


state 104

   95 switch_stmt: switch_head case_list . default TOK_CLOSEBR
   96            | switch_head case_list . TOK_CLOSEBR

    TOK_CLOSEBR  shift, and go to state 141
    TOK_DEFAULT  shift, and go to state 142

    default       go to state 143
    default_head  go to state 144


state 105

   98 case_list: case_stmt .
   99          | case_stmt . case_list

    TOK_CASE  shift, and go to state 103

    $default  reduce using rule 98 (case_list)

    case_list  go to state 145
    case_stmt  go to state 105
    case_head  go to state 106


state 106

  100 case_stmt: case_head . case_body

    TOK_IDENTIFIER   shift, and go to state 1
    TOK_B_NOT        shift, and go to state 2
    TOK_AR_MINUS     shift, and go to state 3
    TOK_IF           shift, and go to state 4
    TOK_ENDEXPR      shift, and go to state 5
    TOK_OPENPAR      shift, and go to state 6
    TOK_OPENBR       shift, and go to state 84
    TOK_FOR_DECL     shift, and go to state 10
    TOK_WHILE_DECL   shift, and go to state 11
    TOK_DO_DECL      shift, and go to state 12
    TOK_ROM_CONST    shift, and go to state 13
    TOK_INT_CONST    shift, and go to state 14
    TOK_FLOAT_CONST  shift, and go to state 15
    TOK_PRINT        shift, and go to state 16
    TOK_READ         shift, and go to state 17
    TOK_BREAK        shift, and go to state 18
    TOK_CONTINUE     shift, and go to state 19
    TOK_GOTO         shift, and go to state 20
    TOK_SWITCH       shift, and go to state 23
    TOK_CASE         shift, and go to state 103

    stmnt_block_start     go to state 85
    stmnt_block           go to state 86
    expr_or_assignment    go to state 27
    expression_statement  go to state 28
    stmnt                 go to state 87
    print_stmt            go to state 34
    read_stmt             go to state 35
    if_stmt               go to state 36
    loop_decl             go to state 37
    for_decl              go to state 38
    while_decl            go to state 39
    do_while_decl         go to state 40
    instruction_body      go to state 146
    left_assign_expr      go to state 43
    assignment            go to state 44
    expr                  go to state 45
    struct_item           go to state 46
    identifier            go to state 47
    num_const             go to state 48
    switch_stmt           go to state 49
    switch_head           go to state 50
    case_stmt             go to state 147
    case_head             go to state 106
    case_body             go to state 148


state 107

   88 array: TOK_OPENSQ error .

    $default  reduce using rule 88 (array)


state 108

   73 expr: expr . TOK_B_AND expr
   74     | expr . TOK_B_OR expr
   75     | expr . TOK_B_XOR expr
   78     | expr . TOK_AR_PLUS expr
   79     | expr . TOK_AR_MINUS expr
   80     | expr . TOK_AR_MUL expr
   81     | expr . TOK_AR_DIV expr
   82     | expr . TOK_AR_MOD expr
   83     | expr . TOK_COMP_OP expr
   87 array: TOK_OPENSQ expr . TOK_CLOSESQ array
   89      | TOK_OPENSQ expr . error

    error         shift, and go to state 149
    TOK_B_AND     shift, and go to state 93
    TOK_B_OR      shift, and go to state 94
    TOK_B_XOR     shift, and go to state 95
    TOK_AR_PLUS   shift, and go to state 96
    TOK_AR_MINUS  shift, and go to state 97
    TOK_AR_MUL    shift, and go to state 98
    TOK_AR_DIV    shift, and go to state 99
    TOK_AR_MOD    shift, and go to state 100
    TOK_COMP_OP   shift, and go to state 101
    TOK_CLOSESQ   shift, and go to state 150


state 109

   49 if_stmt: TOK_IF TOK_OPENPAR expr . TOK_CLOSEPAR instruction_body
   50        | TOK_IF TOK_OPENPAR expr . TOK_CLOSEPAR instruction_body TOK_ELSE instruction_body
   51        | TOK_IF TOK_OPENPAR expr . error
   73 expr: expr . TOK_B_AND expr
   74     | expr . TOK_B_OR expr
   75     | expr . TOK_B_XOR expr
   78     | expr . TOK_AR_PLUS expr
   79     | expr . TOK_AR_MINUS expr
   80     | expr . TOK_AR_MUL expr
   81     | expr . TOK_AR_DIV expr
   82     | expr . TOK_AR_MOD expr
   83     | expr . TOK_COMP_OP expr

    error         shift, and go to state 151
    TOK_B_AND     shift, and go to state 93
    TOK_B_OR      shift, and go to state 94
    TOK_B_XOR     shift, and go to state 95
    TOK_AR_PLUS   shift, and go to state 96
    TOK_AR_MINUS  shift, and go to state 97
    TOK_AR_MUL    shift, and go to state 98
    TOK_AR_DIV    shift, and go to state 99
    TOK_AR_MOD    shift, and go to state 100
    TOK_COMP_OP   shift, and go to state 101
    TOK_CLOSEPAR  shift, and go to state 152


state 110

   84 expr: TOK_OPENPAR expr error .

    $default  reduce using rule 84 (expr)


state 111

   85 expr: TOK_OPENPAR expr TOK_CLOSEPAR .

    $default  reduce using rule 85 (expr)


state 112

   44 print_stmt: TOK_PRINT TOK_OPENPAR expr . TOK_CLOSEPAR TOK_ENDEXPR
   73 expr: expr . TOK_B_AND expr
   74     | expr . TOK_B_OR expr
   75     | expr . TOK_B_XOR expr
   78     | expr . TOK_AR_PLUS expr
   79     | expr . TOK_AR_MINUS expr
   80     | expr . TOK_AR_MUL expr
   81     | expr . TOK_AR_DIV expr
   82     | expr . TOK_AR_MOD expr
   83     | expr . TOK_COMP_OP expr

    TOK_B_AND     shift, and go to state 93
    TOK_B_OR      shift, and go to state 94
    TOK_B_XOR     shift, and go to state 95
    TOK_AR_PLUS   shift, and go to state 96
    TOK_AR_MINUS  shift, and go to state 97
    TOK_AR_MUL    shift, and go to state 98
    TOK_AR_DIV    shift, and go to state 99
    TOK_AR_MOD    shift, and go to state 100
    TOK_COMP_OP   shift, and go to state 101
    TOK_CLOSEPAR  shift, and go to state 153


state 113

   46 print_stmt: TOK_PRINT '(' expr . error
   47           | TOK_PRINT '(' expr . ')' error
   73 expr: expr . TOK_B_AND expr
   74     | expr . TOK_B_OR expr
   75     | expr . TOK_B_XOR expr
   78     | expr . TOK_AR_PLUS expr
   79     | expr . TOK_AR_MINUS expr
   80     | expr . TOK_AR_MUL expr
   81     | expr . TOK_AR_DIV expr
   82     | expr . TOK_AR_MOD expr
   83     | expr . TOK_COMP_OP expr

    error         shift, and go to state 154
    TOK_B_AND     shift, and go to state 93
    TOK_B_OR      shift, and go to state 94
    TOK_B_XOR     shift, and go to state 95
    TOK_AR_PLUS   shift, and go to state 96
    TOK_AR_MINUS  shift, and go to state 97
    TOK_AR_MUL    shift, and go to state 98
    TOK_AR_DIV    shift, and go to state 99
    TOK_AR_MOD    shift, and go to state 100
    TOK_COMP_OP   shift, and go to state 101
    ')'           shift, and go to state 155


state 114

   48 read_stmt: TOK_READ TOK_OPENPAR left_assign_expr . TOK_CLOSEPAR TOK_ENDEXPR

    TOK_CLOSEPAR  shift, and go to state 156


state 115

   26 stmnt: TOK_GOTO TOK_IDENTIFIER TOK_ENDEXPR .

    $default  reduce using rule 26 (stmnt)


state 116

   73 expr: expr . TOK_B_AND expr
   74     | expr . TOK_B_OR expr
   75     | expr . TOK_B_XOR expr
   78     | expr . TOK_AR_PLUS expr
   79     | expr . TOK_AR_MINUS expr
   80     | expr . TOK_AR_MUL expr
   81     | expr . TOK_AR_DIV expr
   82     | expr . TOK_AR_MOD expr
   83     | expr . TOK_COMP_OP expr
   97 switch_head: TOK_SWITCH TOK_OPENPAR expr . TOK_CLOSEPAR TOK_OPENBR

    TOK_B_AND     shift, and go to state 93
    TOK_B_OR      shift, and go to state 94
    TOK_B_XOR     shift, and go to state 95
    TOK_AR_PLUS   shift, and go to state 96
    TOK_AR_MINUS  shift, and go to state 97
    TOK_AR_MUL    shift, and go to state 98
    TOK_AR_DIV    shift, and go to state 99
    TOK_AR_MOD    shift, and go to state 100
    TOK_COMP_OP   shift, and go to state 101
    TOK_CLOSEPAR  shift, and go to state 157


state 117

    6 declaration_list: declaration_list declaration_stmt TOK_ENDEXPR .

    $default  reduce using rule 6 (declaration_list)


state 118

    6 declaration_list: declaration_list . declaration_stmt TOK_ENDEXPR
   42 struct_body: TOK_OPENBR declaration_list .

    TOK_ROM_DECL    shift, and go to state 7
    TOK_INT_DECL    shift, and go to state 8
    TOK_FLOAT_DECL  shift, and go to state 9
    TOK_STRUCT      shift, and go to state 21
    TOK_UNION       shift, and go to state 22

    $default  reduce using rule 42 (struct_body)

    declaration_stmt  go to state 72
    struct_def        go to state 31
    struct_head       go to state 32
    struct_type       go to state 33
    type              go to state 41
    type_name         go to state 42


state 119

   43 struct_tail: TOK_CLOSEBR .

    $default  reduce using rule 43 (struct_tail)


state 120

   38 struct_def: struct_head struct_body struct_tail .

    $default  reduce using rule 38 (struct_def)


state 121

   56 loop_for_expr: TOK_OPENPAR expression_statement . expression_statement TOK_CLOSEPAR
   57              | TOK_OPENPAR expression_statement . expression_statement expr_or_assignment TOK_CLOSEPAR

    TOK_IDENTIFIER   shift, and go to state 54
    TOK_B_NOT        shift, and go to state 2
    TOK_AR_MINUS     shift, and go to state 3
    TOK_ENDEXPR      shift, and go to state 5
    TOK_OPENPAR      shift, and go to state 6
    TOK_ROM_CONST    shift, and go to state 13
    TOK_INT_CONST    shift, and go to state 14
    TOK_FLOAT_CONST  shift, and go to state 15

    expr_or_assignment    go to state 27
    expression_statement  go to state 158
    left_assign_expr      go to state 43
    assignment            go to state 44
    expr                  go to state 45
    struct_item           go to state 46
    identifier            go to state 47
    num_const             go to state 48


state 122

   52 loop_decl: for_decl loop_for_expr instruction_body .

    $default  reduce using rule 52 (loop_decl)


state 123

   55 loop_while_expr: TOK_OPENPAR expr . TOK_CLOSEPAR
   73 expr: expr . TOK_B_AND expr
   74     | expr . TOK_B_OR expr
   75     | expr . TOK_B_XOR expr
   78     | expr . TOK_AR_PLUS expr
   79     | expr . TOK_AR_MINUS expr
   80     | expr . TOK_AR_MUL expr
   81     | expr . TOK_AR_DIV expr
   82     | expr . TOK_AR_MOD expr
   83     | expr . TOK_COMP_OP expr

    TOK_B_AND     shift, and go to state 93
    TOK_B_OR      shift, and go to state 94
    TOK_B_XOR     shift, and go to state 95
    TOK_AR_PLUS   shift, and go to state 96
    TOK_AR_MINUS  shift, and go to state 97
    TOK_AR_MUL    shift, and go to state 98
    TOK_AR_DIV    shift, and go to state 99
    TOK_AR_MOD    shift, and go to state 100
    TOK_COMP_OP   shift, and go to state 101
    TOK_CLOSEPAR  shift, and go to state 159


state 124

   53 loop_decl: while_decl loop_while_expr instruction_body .

    $default  reduce using rule 53 (loop_decl)


state 125

   11 stmnt_block_start: TOK_OPENBR $@1 .

    $default  reduce using rule 11 (stmnt_block_start)


state 126

    6 declaration_list: declaration_list . declaration_stmt TOK_ENDEXPR
   16 stmnt_block: stmnt_block_start declaration_list . TOK_CLOSEBR $@3
   18            | stmnt_block_start declaration_list . stmnt_list TOK_CLOSEBR $@4

    TOK_IDENTIFIER   shift, and go to state 1
    TOK_B_NOT        shift, and go to state 2
    TOK_AR_MINUS     shift, and go to state 3
    TOK_IF           shift, and go to state 4
    TOK_ENDEXPR      shift, and go to state 5
    TOK_OPENPAR      shift, and go to state 6
    TOK_CLOSEBR      shift, and go to state 160
    TOK_ROM_DECL     shift, and go to state 7
    TOK_INT_DECL     shift, and go to state 8
    TOK_FLOAT_DECL   shift, and go to state 9
    TOK_FOR_DECL     shift, and go to state 10
    TOK_WHILE_DECL   shift, and go to state 11
    TOK_DO_DECL      shift, and go to state 12
    TOK_ROM_CONST    shift, and go to state 13
    TOK_INT_CONST    shift, and go to state 14
    TOK_FLOAT_CONST  shift, and go to state 15
    TOK_PRINT        shift, and go to state 16
    TOK_READ         shift, and go to state 17
    TOK_BREAK        shift, and go to state 18
    TOK_CONTINUE     shift, and go to state 19
    TOK_GOTO         shift, and go to state 20
    TOK_STRUCT       shift, and go to state 21
    TOK_UNION        shift, and go to state 22
    TOK_SWITCH       shift, and go to state 23

    stmnt_list            go to state 161
    expr_or_assignment    go to state 27
    expression_statement  go to state 28
    stmnt                 go to state 29
    declaration_stmt      go to state 72
    struct_def            go to state 31
    struct_head           go to state 32
    struct_type           go to state 33
    print_stmt            go to state 34
    read_stmt             go to state 35
    if_stmt               go to state 36
    loop_decl             go to state 37
    for_decl              go to state 38
    while_decl            go to state 39
    do_while_decl         go to state 40
    type                  go to state 41
    type_name             go to state 42
    left_assign_expr      go to state 43
    assignment            go to state 44
    expr                  go to state 45
    struct_item           go to state 46
    identifier            go to state 47
    num_const             go to state 48
    switch_stmt           go to state 49
    switch_head           go to state 50


state 127

    9 stmnt_list: stmnt_list . stmnt
   13 stmnt_block: stmnt_block_start stmnt_list . TOK_CLOSEBR $@2
   14            | stmnt_block_start stmnt_list . error

    error            shift, and go to state 162
    TOK_IDENTIFIER   shift, and go to state 1
    TOK_B_NOT        shift, and go to state 2
    TOK_AR_MINUS     shift, and go to state 3
    TOK_IF           shift, and go to state 4
    TOK_ENDEXPR      shift, and go to state 5
    TOK_OPENPAR      shift, and go to state 6
    TOK_CLOSEBR      shift, and go to state 163
    TOK_FOR_DECL     shift, and go to state 10
    TOK_WHILE_DECL   shift, and go to state 11
    TOK_DO_DECL      shift, and go to state 12
    TOK_ROM_CONST    shift, and go to state 13
    TOK_INT_CONST    shift, and go to state 14
    TOK_FLOAT_CONST  shift, and go to state 15
    TOK_PRINT        shift, and go to state 16
    TOK_READ         shift, and go to state 17
    TOK_BREAK        shift, and go to state 18
    TOK_CONTINUE     shift, and go to state 19
    TOK_GOTO         shift, and go to state 20
    TOK_SWITCH       shift, and go to state 23

    expr_or_assignment    go to state 27
    expression_statement  go to state 28
    stmnt                 go to state 73
    print_stmt            go to state 34
    read_stmt             go to state 35
    if_stmt               go to state 36
    loop_decl             go to state 37
    for_decl              go to state 38
    while_decl            go to state 39
    do_while_decl         go to state 40
    left_assign_expr      go to state 43
    assignment            go to state 44
    expr                  go to state 45
    struct_item           go to state 46
    identifier            go to state 47
    num_const             go to state 48
    switch_stmt           go to state 49
    switch_head           go to state 50


state 128

   54 loop_decl: do_while_decl instruction_body TOK_WHILE_DECL . loop_while_expr TOK_ENDEXPR

    TOK_OPENPAR  shift, and go to state 82

    loop_while_expr  go to state 164


state 129

   70 assignment: left_assign_expr TOK_ASSIGN_OP expr .
   73 expr: expr . TOK_B_AND expr
   74     | expr . TOK_B_OR expr
   75     | expr . TOK_B_XOR expr
   78     | expr . TOK_AR_PLUS expr
   79     | expr . TOK_AR_MINUS expr
   80     | expr . TOK_AR_MUL expr
   81     | expr . TOK_AR_DIV expr
   82     | expr . TOK_AR_MOD expr
   83     | expr . TOK_COMP_OP expr

    TOK_B_AND     shift, and go to state 93
    TOK_B_OR      shift, and go to state 94
    TOK_B_XOR     shift, and go to state 95
    TOK_AR_PLUS   shift, and go to state 96
    TOK_AR_MINUS  shift, and go to state 97
    TOK_AR_MUL    shift, and go to state 98
    TOK_AR_DIV    shift, and go to state 99
    TOK_AR_MOD    shift, and go to state 100
    TOK_COMP_OP   shift, and go to state 101

    $default  reduce using rule 70 (assignment)


state 130

   73 expr: expr . TOK_B_AND expr
   73     | expr TOK_B_AND expr .
   74     | expr . TOK_B_OR expr
   75     | expr . TOK_B_XOR expr
   78     | expr . TOK_AR_PLUS expr
   79     | expr . TOK_AR_MINUS expr
   80     | expr . TOK_AR_MUL expr
   81     | expr . TOK_AR_DIV expr
   82     | expr . TOK_AR_MOD expr
   83     | expr . TOK_COMP_OP expr

    $default  reduce using rule 73 (expr)


state 131

   73 expr: expr . TOK_B_AND expr
   74     | expr . TOK_B_OR expr
   74     | expr TOK_B_OR expr .
   75     | expr . TOK_B_XOR expr
   78     | expr . TOK_AR_PLUS expr
   79     | expr . TOK_AR_MINUS expr
   80     | expr . TOK_AR_MUL expr
   81     | expr . TOK_AR_DIV expr
   82     | expr . TOK_AR_MOD expr
   83     | expr . TOK_COMP_OP expr

    TOK_B_AND   shift, and go to state 93
    TOK_AR_MUL  shift, and go to state 98
    TOK_AR_DIV  shift, and go to state 99

    $default  reduce using rule 74 (expr)


state 132

   73 expr: expr . TOK_B_AND expr
   74     | expr . TOK_B_OR expr
   75     | expr . TOK_B_XOR expr
   75     | expr TOK_B_XOR expr .
   78     | expr . TOK_AR_PLUS expr
   79     | expr . TOK_AR_MINUS expr
   80     | expr . TOK_AR_MUL expr
   81     | expr . TOK_AR_DIV expr
   82     | expr . TOK_AR_MOD expr
   83     | expr . TOK_COMP_OP expr

    TOK_B_AND   shift, and go to state 93
    TOK_AR_MUL  shift, and go to state 98
    TOK_AR_DIV  shift, and go to state 99

    $default  reduce using rule 75 (expr)


state 133

   73 expr: expr . TOK_B_AND expr
   74     | expr . TOK_B_OR expr
   75     | expr . TOK_B_XOR expr
   78     | expr . TOK_AR_PLUS expr
   78     | expr TOK_AR_PLUS expr .
   79     | expr . TOK_AR_MINUS expr
   80     | expr . TOK_AR_MUL expr
   81     | expr . TOK_AR_DIV expr
   82     | expr . TOK_AR_MOD expr
   83     | expr . TOK_COMP_OP expr

    TOK_B_AND   shift, and go to state 93
    TOK_AR_MUL  shift, and go to state 98
    TOK_AR_DIV  shift, and go to state 99

    $default  reduce using rule 78 (expr)


state 134

   73 expr: expr . TOK_B_AND expr
   74     | expr . TOK_B_OR expr
   75     | expr . TOK_B_XOR expr
   78     | expr . TOK_AR_PLUS expr
   79     | expr . TOK_AR_MINUS expr
   79     | expr TOK_AR_MINUS expr .
   80     | expr . TOK_AR_MUL expr
   81     | expr . TOK_AR_DIV expr
   82     | expr . TOK_AR_MOD expr
   83     | expr . TOK_COMP_OP expr

    TOK_B_AND   shift, and go to state 93
    TOK_AR_MUL  shift, and go to state 98
    TOK_AR_DIV  shift, and go to state 99

    $default  reduce using rule 79 (expr)


state 135

   73 expr: expr . TOK_B_AND expr
   74     | expr . TOK_B_OR expr
   75     | expr . TOK_B_XOR expr
   78     | expr . TOK_AR_PLUS expr
   79     | expr . TOK_AR_MINUS expr
   80     | expr . TOK_AR_MUL expr
   80     | expr TOK_AR_MUL expr .
   81     | expr . TOK_AR_DIV expr
   82     | expr . TOK_AR_MOD expr
   83     | expr . TOK_COMP_OP expr

    $default  reduce using rule 80 (expr)


state 136

   73 expr: expr . TOK_B_AND expr
   74     | expr . TOK_B_OR expr
   75     | expr . TOK_B_XOR expr
   78     | expr . TOK_AR_PLUS expr
   79     | expr . TOK_AR_MINUS expr
   80     | expr . TOK_AR_MUL expr
   81     | expr . TOK_AR_DIV expr
   81     | expr TOK_AR_DIV expr .
   82     | expr . TOK_AR_MOD expr
   83     | expr . TOK_COMP_OP expr

    $default  reduce using rule 81 (expr)


state 137

   73 expr: expr . TOK_B_AND expr
   74     | expr . TOK_B_OR expr
   75     | expr . TOK_B_XOR expr
   78     | expr . TOK_AR_PLUS expr
   79     | expr . TOK_AR_MINUS expr
   80     | expr . TOK_AR_MUL expr
   81     | expr . TOK_AR_DIV expr
   82     | expr . TOK_AR_MOD expr
   82     | expr TOK_AR_MOD expr .
   83     | expr . TOK_COMP_OP expr

    TOK_B_AND     shift, and go to state 93
    TOK_B_OR      shift, and go to state 94
    TOK_B_XOR     shift, and go to state 95
    TOK_AR_PLUS   shift, and go to state 96
    TOK_AR_MINUS  shift, and go to state 97
    TOK_AR_MUL    shift, and go to state 98
    TOK_AR_DIV    shift, and go to state 99

    $default  reduce using rule 82 (expr)


state 138

   73 expr: expr . TOK_B_AND expr
   74     | expr . TOK_B_OR expr
   75     | expr . TOK_B_XOR expr
   78     | expr . TOK_AR_PLUS expr
   79     | expr . TOK_AR_MINUS expr
   80     | expr . TOK_AR_MUL expr
   81     | expr . TOK_AR_DIV expr
   82     | expr . TOK_AR_MOD expr
   83     | expr . TOK_COMP_OP expr
   83     | expr TOK_COMP_OP expr .

    TOK_B_AND     shift, and go to state 93
    TOK_B_OR      shift, and go to state 94
    TOK_B_XOR     shift, and go to state 95
    TOK_AR_PLUS   shift, and go to state 96
    TOK_AR_MINUS  shift, and go to state 97
    TOK_AR_MUL    shift, and go to state 98
    TOK_AR_DIV    shift, and go to state 99
    TOK_AR_MOD    shift, and go to state 100

    $default  reduce using rule 83 (expr)


state 139

   90 struct_item: identifier TOK_DOT TOK_IDENTIFIER .

    $default  reduce using rule 90 (struct_item)


state 140

   73 expr: expr . TOK_B_AND expr
   74     | expr . TOK_B_OR expr
   75     | expr . TOK_B_XOR expr
   78     | expr . TOK_AR_PLUS expr
   79     | expr . TOK_AR_MINUS expr
   80     | expr . TOK_AR_MUL expr
   81     | expr . TOK_AR_DIV expr
   82     | expr . TOK_AR_MOD expr
   83     | expr . TOK_COMP_OP expr
  101 case_head: TOK_CASE expr . TOK_DOUBLEDOT

    TOK_B_AND      shift, and go to state 93
    TOK_B_OR       shift, and go to state 94
    TOK_B_XOR      shift, and go to state 95
    TOK_AR_PLUS    shift, and go to state 96
    TOK_AR_MINUS   shift, and go to state 97
    TOK_AR_MUL     shift, and go to state 98
    TOK_AR_DIV     shift, and go to state 99
    TOK_AR_MOD     shift, and go to state 100
    TOK_COMP_OP    shift, and go to state 101
    TOK_DOUBLEDOT  shift, and go to state 165


state 141

   96 switch_stmt: switch_head case_list TOK_CLOSEBR .

    $default  reduce using rule 96 (switch_stmt)


state 142

  105 default_head: TOK_DEFAULT . TOK_DOUBLEDOT

    TOK_DOUBLEDOT  shift, and go to state 166


state 143

   95 switch_stmt: switch_head case_list default . TOK_CLOSEBR

    TOK_CLOSEBR  shift, and go to state 167


state 144

  104 default: default_head . instruction_body

    TOK_IDENTIFIER   shift, and go to state 1
    TOK_B_NOT        shift, and go to state 2
    TOK_AR_MINUS     shift, and go to state 3
    TOK_IF           shift, and go to state 4
    TOK_ENDEXPR      shift, and go to state 5
    TOK_OPENPAR      shift, and go to state 6
    TOK_OPENBR       shift, and go to state 84
    TOK_FOR_DECL     shift, and go to state 10
    TOK_WHILE_DECL   shift, and go to state 11
    TOK_DO_DECL      shift, and go to state 12
    TOK_ROM_CONST    shift, and go to state 13
    TOK_INT_CONST    shift, and go to state 14
    TOK_FLOAT_CONST  shift, and go to state 15
    TOK_PRINT        shift, and go to state 16
    TOK_READ         shift, and go to state 17
    TOK_BREAK        shift, and go to state 18
    TOK_CONTINUE     shift, and go to state 19
    TOK_GOTO         shift, and go to state 20
    TOK_SWITCH       shift, and go to state 23

    stmnt_block_start     go to state 85
    stmnt_block           go to state 86
    expr_or_assignment    go to state 27
    expression_statement  go to state 28
    stmnt                 go to state 87
    print_stmt            go to state 34
    read_stmt             go to state 35
    if_stmt               go to state 36
    loop_decl             go to state 37
    for_decl              go to state 38
    while_decl            go to state 39
    do_while_decl         go to state 40
    instruction_body      go to state 168
    left_assign_expr      go to state 43
    assignment            go to state 44
    expr                  go to state 45
    struct_item           go to state 46
    identifier            go to state 47
    num_const             go to state 48
    switch_stmt           go to state 49
    switch_head           go to state 50


state 145

   99 case_list: case_stmt case_list .

    $default  reduce using rule 99 (case_list)


state 146

  102 case_body: instruction_body .

    $default  reduce using rule 102 (case_body)


state 147

  103 case_body: case_stmt .

    $default  reduce using rule 103 (case_body)


state 148

  100 case_stmt: case_head case_body .

    $default  reduce using rule 100 (case_stmt)


state 149

   89 array: TOK_OPENSQ expr error .

    $default  reduce using rule 89 (array)


state 150

   87 array: TOK_OPENSQ expr TOK_CLOSESQ . array

    TOK_OPENSQ  shift, and go to state 51

    $default  reduce using rule 86 (array)

    array  go to state 169


state 151

   51 if_stmt: TOK_IF TOK_OPENPAR expr error .

    $default  reduce using rule 51 (if_stmt)


state 152

   49 if_stmt: TOK_IF TOK_OPENPAR expr TOK_CLOSEPAR . instruction_body
   50        | TOK_IF TOK_OPENPAR expr TOK_CLOSEPAR . instruction_body TOK_ELSE instruction_body

    TOK_IDENTIFIER   shift, and go to state 1
    TOK_B_NOT        shift, and go to state 2
    TOK_AR_MINUS     shift, and go to state 3
    TOK_IF           shift, and go to state 4
    TOK_ENDEXPR      shift, and go to state 5
    TOK_OPENPAR      shift, and go to state 6
    TOK_OPENBR       shift, and go to state 84
    TOK_FOR_DECL     shift, and go to state 10
    TOK_WHILE_DECL   shift, and go to state 11
    TOK_DO_DECL      shift, and go to state 12
    TOK_ROM_CONST    shift, and go to state 13
    TOK_INT_CONST    shift, and go to state 14
    TOK_FLOAT_CONST  shift, and go to state 15
    TOK_PRINT        shift, and go to state 16
    TOK_READ         shift, and go to state 17
    TOK_BREAK        shift, and go to state 18
    TOK_CONTINUE     shift, and go to state 19
    TOK_GOTO         shift, and go to state 20
    TOK_SWITCH       shift, and go to state 23

    stmnt_block_start     go to state 85
    stmnt_block           go to state 86
    expr_or_assignment    go to state 27
    expression_statement  go to state 28
    stmnt                 go to state 87
    print_stmt            go to state 34
    read_stmt             go to state 35
    if_stmt               go to state 36
    loop_decl             go to state 37
    for_decl              go to state 38
    while_decl            go to state 39
    do_while_decl         go to state 40
    instruction_body      go to state 170
    left_assign_expr      go to state 43
    assignment            go to state 44
    expr                  go to state 45
    struct_item           go to state 46
    identifier            go to state 47
    num_const             go to state 48
    switch_stmt           go to state 49
    switch_head           go to state 50


state 153

   44 print_stmt: TOK_PRINT TOK_OPENPAR expr TOK_CLOSEPAR . TOK_ENDEXPR

    TOK_ENDEXPR  shift, and go to state 171


state 154

   46 print_stmt: TOK_PRINT '(' expr error .

    $default  reduce using rule 46 (print_stmt)


state 155

   47 print_stmt: TOK_PRINT '(' expr ')' . error

    error  shift, and go to state 172


state 156

   48 read_stmt: TOK_READ TOK_OPENPAR left_assign_expr TOK_CLOSEPAR . TOK_ENDEXPR

    TOK_ENDEXPR  shift, and go to state 173


state 157

   97 switch_head: TOK_SWITCH TOK_OPENPAR expr TOK_CLOSEPAR . TOK_OPENBR

    TOK_OPENBR  shift, and go to state 174


state 158

   56 loop_for_expr: TOK_OPENPAR expression_statement expression_statement . TOK_CLOSEPAR
   57              | TOK_OPENPAR expression_statement expression_statement . expr_or_assignment TOK_CLOSEPAR

    TOK_IDENTIFIER   shift, and go to state 54
    TOK_B_NOT        shift, and go to state 2
    TOK_AR_MINUS     shift, and go to state 3
    TOK_OPENPAR      shift, and go to state 6
    TOK_CLOSEPAR     shift, and go to state 175
    TOK_ROM_CONST    shift, and go to state 13
    TOK_INT_CONST    shift, and go to state 14
    TOK_FLOAT_CONST  shift, and go to state 15

    expr_or_assignment  go to state 176
    left_assign_expr    go to state 43
    assignment          go to state 44
    expr                go to state 177
    struct_item         go to state 46
    identifier          go to state 47
    num_const           go to state 48


state 159

   55 loop_while_expr: TOK_OPENPAR expr TOK_CLOSEPAR .

    $default  reduce using rule 55 (loop_while_expr)


state 160

   16 stmnt_block: stmnt_block_start declaration_list TOK_CLOSEBR . $@3

    $default  reduce using rule 15 ($@3)

    $@3  go to state 178


state 161

    9 stmnt_list: stmnt_list . stmnt
   18 stmnt_block: stmnt_block_start declaration_list stmnt_list . TOK_CLOSEBR $@4

    TOK_IDENTIFIER   shift, and go to state 1
    TOK_B_NOT        shift, and go to state 2
    TOK_AR_MINUS     shift, and go to state 3
    TOK_IF           shift, and go to state 4
    TOK_ENDEXPR      shift, and go to state 5
    TOK_OPENPAR      shift, and go to state 6
    TOK_CLOSEBR      shift, and go to state 179
    TOK_FOR_DECL     shift, and go to state 10
    TOK_WHILE_DECL   shift, and go to state 11
    TOK_DO_DECL      shift, and go to state 12
    TOK_ROM_CONST    shift, and go to state 13
    TOK_INT_CONST    shift, and go to state 14
    TOK_FLOAT_CONST  shift, and go to state 15
    TOK_PRINT        shift, and go to state 16
    TOK_READ         shift, and go to state 17
    TOK_BREAK        shift, and go to state 18
    TOK_CONTINUE     shift, and go to state 19
    TOK_GOTO         shift, and go to state 20
    TOK_SWITCH       shift, and go to state 23

    expr_or_assignment    go to state 27
    expression_statement  go to state 28
    stmnt                 go to state 73
    print_stmt            go to state 34
    read_stmt             go to state 35
    if_stmt               go to state 36
    loop_decl             go to state 37
    for_decl              go to state 38
    while_decl            go to state 39
    do_while_decl         go to state 40
    left_assign_expr      go to state 43
    assignment            go to state 44
    expr                  go to state 45
    struct_item           go to state 46
    identifier            go to state 47
    num_const             go to state 48
    switch_stmt           go to state 49
    switch_head           go to state 50


state 162

   14 stmnt_block: stmnt_block_start stmnt_list error .

    $default  reduce using rule 14 (stmnt_block)


state 163

   13 stmnt_block: stmnt_block_start stmnt_list TOK_CLOSEBR . $@2

    $default  reduce using rule 12 ($@2)

    $@2  go to state 180


state 164

   54 loop_decl: do_while_decl instruction_body TOK_WHILE_DECL loop_while_expr . TOK_ENDEXPR

    TOK_ENDEXPR  shift, and go to state 181


state 165

  101 case_head: TOK_CASE expr TOK_DOUBLEDOT .

    $default  reduce using rule 101 (case_head)


state 166

  105 default_head: TOK_DEFAULT TOK_DOUBLEDOT .

    $default  reduce using rule 105 (default_head)


state 167

   95 switch_stmt: switch_head case_list default TOK_CLOSEBR .

    $default  reduce using rule 95 (switch_stmt)


state 168

  104 default: default_head instruction_body .

    $default  reduce using rule 104 (default)


state 169

   87 array: TOK_OPENSQ expr TOK_CLOSESQ array .

    $default  reduce using rule 87 (array)


state 170

   49 if_stmt: TOK_IF TOK_OPENPAR expr TOK_CLOSEPAR instruction_body .
   50        | TOK_IF TOK_OPENPAR expr TOK_CLOSEPAR instruction_body . TOK_ELSE instruction_body

    TOK_ELSE  shift, and go to state 182

    $default  reduce using rule 49 (if_stmt)


state 171

   44 print_stmt: TOK_PRINT TOK_OPENPAR expr TOK_CLOSEPAR TOK_ENDEXPR .

    $default  reduce using rule 44 (print_stmt)


state 172

   47 print_stmt: TOK_PRINT '(' expr ')' error .

    $default  reduce using rule 47 (print_stmt)


state 173

   48 read_stmt: TOK_READ TOK_OPENPAR left_assign_expr TOK_CLOSEPAR TOK_ENDEXPR .

    $default  reduce using rule 48 (read_stmt)


state 174

   97 switch_head: TOK_SWITCH TOK_OPENPAR expr TOK_CLOSEPAR TOK_OPENBR .

    $default  reduce using rule 97 (switch_head)


state 175

   56 loop_for_expr: TOK_OPENPAR expression_statement expression_statement TOK_CLOSEPAR .

    $default  reduce using rule 56 (loop_for_expr)


state 176

   57 loop_for_expr: TOK_OPENPAR expression_statement expression_statement expr_or_assignment . TOK_CLOSEPAR

    TOK_CLOSEPAR  shift, and go to state 183


state 177

   19 expr_or_assignment: expr .
   73 expr: expr . TOK_B_AND expr
   74     | expr . TOK_B_OR expr
   75     | expr . TOK_B_XOR expr
   78     | expr . TOK_AR_PLUS expr
   79     | expr . TOK_AR_MINUS expr
   80     | expr . TOK_AR_MUL expr
   81     | expr . TOK_AR_DIV expr
   82     | expr . TOK_AR_MOD expr
   83     | expr . TOK_COMP_OP expr

    TOK_B_AND     shift, and go to state 93
    TOK_B_OR      shift, and go to state 94
    TOK_B_XOR     shift, and go to state 95
    TOK_AR_PLUS   shift, and go to state 96
    TOK_AR_MINUS  shift, and go to state 97
    TOK_AR_MUL    shift, and go to state 98
    TOK_AR_DIV    shift, and go to state 99
    TOK_AR_MOD    shift, and go to state 100
    TOK_COMP_OP   shift, and go to state 101

    $default  reduce using rule 19 (expr_or_assignment)


state 178

   16 stmnt_block: stmnt_block_start declaration_list TOK_CLOSEBR $@3 .

    $default  reduce using rule 16 (stmnt_block)


state 179

   18 stmnt_block: stmnt_block_start declaration_list stmnt_list TOK_CLOSEBR . $@4

    $default  reduce using rule 17 ($@4)

    $@4  go to state 184


state 180

   13 stmnt_block: stmnt_block_start stmnt_list TOK_CLOSEBR $@2 .

    $default  reduce using rule 13 (stmnt_block)


state 181

   54 loop_decl: do_while_decl instruction_body TOK_WHILE_DECL loop_while_expr TOK_ENDEXPR .

    $default  reduce using rule 54 (loop_decl)


state 182

   50 if_stmt: TOK_IF TOK_OPENPAR expr TOK_CLOSEPAR instruction_body TOK_ELSE . instruction_body

    TOK_IDENTIFIER   shift, and go to state 1
    TOK_B_NOT        shift, and go to state 2
    TOK_AR_MINUS     shift, and go to state 3
    TOK_IF           shift, and go to state 4
    TOK_ENDEXPR      shift, and go to state 5
    TOK_OPENPAR      shift, and go to state 6
    TOK_OPENBR       shift, and go to state 84
    TOK_FOR_DECL     shift, and go to state 10
    TOK_WHILE_DECL   shift, and go to state 11
    TOK_DO_DECL      shift, and go to state 12
    TOK_ROM_CONST    shift, and go to state 13
    TOK_INT_CONST    shift, and go to state 14
    TOK_FLOAT_CONST  shift, and go to state 15
    TOK_PRINT        shift, and go to state 16
    TOK_READ         shift, and go to state 17
    TOK_BREAK        shift, and go to state 18
    TOK_CONTINUE     shift, and go to state 19
    TOK_GOTO         shift, and go to state 20
    TOK_SWITCH       shift, and go to state 23

    stmnt_block_start     go to state 85
    stmnt_block           go to state 86
    expr_or_assignment    go to state 27
    expression_statement  go to state 28
    stmnt                 go to state 87
    print_stmt            go to state 34
    read_stmt             go to state 35
    if_stmt               go to state 36
    loop_decl             go to state 37
    for_decl              go to state 38
    while_decl            go to state 39
    do_while_decl         go to state 40
    instruction_body      go to state 185
    left_assign_expr      go to state 43
    assignment            go to state 44
    expr                  go to state 45
    struct_item           go to state 46
    identifier            go to state 47
    num_const             go to state 48
    switch_stmt           go to state 49
    switch_head           go to state 50


state 183

   57 loop_for_expr: TOK_OPENPAR expression_statement expression_statement expr_or_assignment TOK_CLOSEPAR .

    $default  reduce using rule 57 (loop_for_expr)


state 184

   18 stmnt_block: stmnt_block_start declaration_list stmnt_list TOK_CLOSEBR $@4 .

    $default  reduce using rule 18 (stmnt_block)


state 185

   50 if_stmt: TOK_IF TOK_OPENPAR expr TOK_CLOSEPAR instruction_body TOK_ELSE instruction_body .

    $default  reduce using rule 50 (if_stmt)
