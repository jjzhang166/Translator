Terminals unused in grammar

   TMP_VAR
   LABEL
   NAME
   INT_CONST
   FLOAT_CONST
   LITERAL
   IFFALSE
   IFTRUE
   ASSIGN
   OR
   AND
   XOR
   NOT
   INPUT
   OUTPUT
   GOTO
   CMP
   EXPR_ERROR


State 1 conflicts: 1 shift/reduce
State 49 conflicts: 1 shift/reduce
State 51 conflicts: 1 shift/reduce
State 121 conflicts: 1 shift/reduce
State 122 conflicts: 1 shift/reduce
State 123 conflicts: 3 shift/reduce


Grammar

    0 $accept: start $end

    1 start: /* empty */
    2      | declaration_list stmnt_list
    3      | declaration_list
    4      | stmnt_list

    5 declaration_list: declaration_stmt ';'
    6                 | declaration_list declaration_stmt ';'
    7                 | declaration_stmt error

    8 stmnt_list: stmnt
    9           | stmnt stmnt_list

   10 $@1: /* empty */

   11 stmnt_block_start: TOK_OPENBR $@1

   12 $@2: /* empty */

   13 stmnt_block: stmnt_block_start stmnt_list TOK_CLOSEBR $@2
   14            | stmnt_block_start stmnt_list error

   15 stmnt: expr TOK_ENDEXPR
   16      | expr error
   17      | TOK_IDENTIFIER TOK_DOUBLEDOT
   18      | TOK_GOTO TOK_IDENTIFIER TOK_ENDEXPR
   19      | if_stmt
   20      | loop_decl
   21      | switch_stmt
   22      | print_stmt
   23      | read_stmt
   24      | assignment
   25      | TOK_BREAK TOK_ENDEXPR
   26      | TOK_BREAK error
   27      | TOK_CONTINUE TOK_ENDEXPR
   28      | TOK_CONTINUE error

   29 declaration_stmt: type TOK_IDENTIFIER TOK_ENDEXPR
   30                 | struct_def TOK_ENDEXPR

   31 struct_def: struct_head struct_body struct_tail

   32 struct_head: struct_type TOK_IDENTIFIER

   33 struct_type: TOK_STRUCT
   34            | TOK_UNION

   35 struct_body: TOK_OPENBR declaration_list

   36 struct_tail: TOK_CLOSEBR

   37 print_stmt: TOK_PRINT TOK_OPENPAR expr TOK_CLOSEPAR TOK_ENDEXPR
   38           | TOK_PRINT error
   39           | TOK_PRINT '(' expr error
   40           | TOK_PRINT '(' expr ')' error

   41 read_stmt: TOK_READ TOK_OPENPAR left_assign_expr TOK_CLOSEPAR TOK_ENDEXPR

   42 if_stmt: TOK_IF TOK_OPENPAR expr TOK_CLOSEPAR stmnt
   43        | TOK_IF TOK_OPENPAR expr TOK_CLOSEPAR stmnt TOK_ELSE stmnt
   44        | TOK_IF TOK_OPENPAR expr error

   45 loop_decl: TOK_FOR_DECL loop_for_expr loop_body
   46          | TOK_WHILE_DECL loop_while_expr loop_body
   47          | TOK_DO_DECL loop_body TOK_WHILE_DECL loop_while_expr TOK_ENDEXPR

   48 loop_while_expr: TOK_OPENPAR expr TOK_CLOSEPAR

   49 loop_for_expr: TOK_OPENPAR expr TOK_ENDEXPR expr TOK_ENDEXPR expr TOK_CLOSEPAR

   50 loop_body: stmnt_block

   51 type: type_name array

   52 type_name: TOK_ROM_DECL
   53          | TOK_FLOAT_DECL
   54          | TOK_INT_DECL
   55          | TOK_IDENTIFIER

   56 left_assign_expr: identifier
   57                 | struct_item

   58 assignment: left_assign_expr TOK_ASSIGN_OP expr

   59 expr: identifier
   60     | num_const
   61     | expr TOK_B_LOGICAL_OP expr
   62     | TOK_U_LOGICAL_OP expr
   63     | TOK_U_ARITHMETICAL_OP expr
   64     | expr TOK_ARITHMETICAL_OP expr
   65     | expr TOK_COMP_OP expr
   66     | TOK_OPENPAR expr error
   67     | TOK_OPENPAR expr TOK_CLOSEPAR

   68 array: /* empty */
   69      | TOK_OPENSQ expr TOK_CLOSESQ array
   70      | TOK_OPENSQ error
   71      | TOK_OPENSQ expr error

   72 struct_item: identifier TOK_DOT TOK_IDENTIFIER

   73 identifier: TOK_IDENTIFIER array

   74 num_const: TOK_INT_CONST
   75          | TOK_ROM_CONST
   76          | TOK_FLOAT_CONST

   77 switch_stmt: switch_head case_list default switch_tail
   78            | switch_head case_list switch_tail

   79 switch_head: TOK_SWITCH TOK_OPENPAR expr TOK_CLOSEPAR TOK_OPENBR

   80 switch_tail: TOK_CLOSEBR

   81 case_list: case_stmt
   82          | case_stmt case_list

   83 case_stmt: case_head case_body

   84 case_head: TOK_CASE expr TOK_DOUBLEDOT

   85 case_body: stmnt
   86          | stmnt_block
   87          | case_stmt

   88 default: default_head default_body

   89 default_head: TOK_DEFAULT TOK_DOUBLEDOT

   90 default_body: stmnt
   91             | stmnt_block


Terminals, with rules where they appear

$end (0) 0
'(' (40) 39 40
')' (41) 40
';' (59) 5 6
error (256) 7 14 16 26 28 38 39 40 44 66 70 71
TOK_IDENTIFIER (258) 17 18 29 32 55 72 73
TOK_ARITHMETICAL_OP (259) 64
TOK_COMP_OP (260) 65
TOK_ASSIGN_OP (261) 58
TOK_U_ARITHMETICAL_OP (262) 63
TOK_B_LOGICAL_OP (263) 61
TOK_U_LOGICAL_OP (264) 62
TOK_IF (265) 42 43 44
TOK_ELSE (266) 43
TOK_ENDEXPR (267) 15 18 25 27 29 30 37 41 47 49
TOK_OPENPAR (268) 37 41 42 43 44 48 49 66 67 79
TOK_CLOSEPAR (269) 37 41 42 43 48 49 67 79
TOK_OPENBR (270) 11 35 79
TOK_CLOSEBR (271) 13 36 80
TOK_OPENSQ (272) 69 70 71
TOK_CLOSESQ (273) 69
TOK_DOT (274) 72
TOK_DOUBLEDOT (275) 17 84 89
TOK_ROM_DECL (276) 52
TOK_INT_DECL (277) 54
TOK_FLOAT_DECL (278) 53
TOK_FOR_DECL (279) 45
TOK_WHILE_DECL (280) 46 47
TOK_DO_DECL (281) 47
TOK_ROM_CONST (282) 75
TOK_INT_CONST (283) 74
TOK_FLOAT_CONST (284) 76
TOK_PRINT (285) 37 38 39 40
TOK_READ (286) 41
TOK_BREAK (287) 25 26
TOK_CONTINUE (288) 27 28
TOK_GOTO (289) 18
TOK_STRUCT (290) 33
TOK_UNION (291) 34
TOK_SWITCH (292) 79
TOK_CASE (293) 84
TOK_DEFAULT (294) 89
TMP_VAR (295)
LABEL (296)
NAME (297)
INT_CONST (298)
FLOAT_CONST (299)
LITERAL (300)
IFFALSE (301)
IFTRUE (302)
ASSIGN (303)
OR (304)
AND (305)
XOR (306)
NOT (307)
INPUT (308)
OUTPUT (309)
GOTO (310)
CMP (311)
EXPR_ERROR (312)
STMNT_BLOCK_ERROR (313)
IF_WITHOUT_ELSE (314)
TOK_U_LOGICAL (315)
TOK_U_ARITHMETICAL (316)


Nonterminals, with rules where they appear

$accept (65)
    on left: 0
start (66)
    on left: 1 2 3 4, on right: 0
declaration_list (67)
    on left: 5 6 7, on right: 2 3 6 35
stmnt_list (68)
    on left: 8 9, on right: 2 4 9 13 14
stmnt_block_start (69)
    on left: 11, on right: 13 14
$@1 (70)
    on left: 10, on right: 11
stmnt_block (71)
    on left: 13 14, on right: 50 86 91
$@2 (72)
    on left: 12, on right: 13
stmnt (73)
    on left: 15 16 17 18 19 20 21 22 23 24 25 26 27 28, on right: 8
    9 42 43 85 90
declaration_stmt (74)
    on left: 29 30, on right: 5 6 7
struct_def (75)
    on left: 31, on right: 30
struct_head (76)
    on left: 32, on right: 31
struct_type (77)
    on left: 33 34, on right: 32
struct_body (78)
    on left: 35, on right: 31
struct_tail (79)
    on left: 36, on right: 31
print_stmt (80)
    on left: 37 38 39 40, on right: 22
read_stmt (81)
    on left: 41, on right: 23
if_stmt (82)
    on left: 42 43 44, on right: 19
loop_decl (83)
    on left: 45 46 47, on right: 20
loop_while_expr (84)
    on left: 48, on right: 46 47
loop_for_expr (85)
    on left: 49, on right: 45
loop_body (86)
    on left: 50, on right: 45 46 47
type (87)
    on left: 51, on right: 29
type_name (88)
    on left: 52 53 54 55, on right: 51
left_assign_expr (89)
    on left: 56 57, on right: 41 58
assignment (90)
    on left: 58, on right: 24
expr (91)
    on left: 59 60 61 62 63 64 65 66 67, on right: 15 16 37 39 40 42
    43 44 48 49 58 61 62 63 64 65 66 67 69 71 79 84
array (92)
    on left: 68 69 70 71, on right: 51 69 73
struct_item (93)
    on left: 72, on right: 57
identifier (94)
    on left: 73, on right: 56 59 72
num_const (95)
    on left: 74 75 76, on right: 60
switch_stmt (96)
    on left: 77 78, on right: 21
switch_head (97)
    on left: 79, on right: 77 78
switch_tail (98)
    on left: 80, on right: 77 78
case_list (99)
    on left: 81 82, on right: 77 78 82
case_stmt (100)
    on left: 83, on right: 81 82 87
case_head (101)
    on left: 84, on right: 83
case_body (102)
    on left: 85 86 87, on right: 83
default (103)
    on left: 88, on right: 77
default_head (104)
    on left: 89, on right: 88
default_body (105)
    on left: 90 91, on right: 88


state 0

    0 $accept: . start $end

    TOK_IDENTIFIER         shift, and go to state 1
    TOK_U_ARITHMETICAL_OP  shift, and go to state 2
    TOK_U_LOGICAL_OP       shift, and go to state 3
    TOK_IF                 shift, and go to state 4
    TOK_OPENPAR            shift, and go to state 5
    TOK_ROM_DECL           shift, and go to state 6
    TOK_INT_DECL           shift, and go to state 7
    TOK_FLOAT_DECL         shift, and go to state 8
    TOK_FOR_DECL           shift, and go to state 9
    TOK_WHILE_DECL         shift, and go to state 10
    TOK_DO_DECL            shift, and go to state 11
    TOK_ROM_CONST          shift, and go to state 12
    TOK_INT_CONST          shift, and go to state 13
    TOK_FLOAT_CONST        shift, and go to state 14
    TOK_PRINT              shift, and go to state 15
    TOK_READ               shift, and go to state 16
    TOK_BREAK              shift, and go to state 17
    TOK_CONTINUE           shift, and go to state 18
    TOK_GOTO               shift, and go to state 19
    TOK_STRUCT             shift, and go to state 20
    TOK_UNION              shift, and go to state 21
    TOK_SWITCH             shift, and go to state 22

    $default  reduce using rule 1 (start)

    start             go to state 23
    declaration_list  go to state 24
    stmnt_list        go to state 25
    stmnt             go to state 26
    declaration_stmt  go to state 27
    struct_def        go to state 28
    struct_head       go to state 29
    struct_type       go to state 30
    print_stmt        go to state 31
    read_stmt         go to state 32
    if_stmt           go to state 33
    loop_decl         go to state 34
    type              go to state 35
    type_name         go to state 36
    left_assign_expr  go to state 37
    assignment        go to state 38
    expr              go to state 39
    struct_item       go to state 40
    identifier        go to state 41
    num_const         go to state 42
    switch_stmt       go to state 43
    switch_head       go to state 44


state 1

   17 stmnt: TOK_IDENTIFIER . TOK_DOUBLEDOT
   55 type_name: TOK_IDENTIFIER .
   73 identifier: TOK_IDENTIFIER . array

    TOK_OPENSQ     shift, and go to state 45
    TOK_DOUBLEDOT  shift, and go to state 46

    TOK_IDENTIFIER  reduce using rule 55 (type_name)
    TOK_OPENSQ      [reduce using rule 55 (type_name)]
    $default        reduce using rule 68 (array)

    array  go to state 47


state 2

   63 expr: TOK_U_ARITHMETICAL_OP . expr

    TOK_IDENTIFIER         shift, and go to state 48
    TOK_U_ARITHMETICAL_OP  shift, and go to state 2
    TOK_U_LOGICAL_OP       shift, and go to state 3
    TOK_OPENPAR            shift, and go to state 5
    TOK_ROM_CONST          shift, and go to state 12
    TOK_INT_CONST          shift, and go to state 13
    TOK_FLOAT_CONST        shift, and go to state 14

    expr        go to state 49
    identifier  go to state 50
    num_const   go to state 42


state 3

   62 expr: TOK_U_LOGICAL_OP . expr

    TOK_IDENTIFIER         shift, and go to state 48
    TOK_U_ARITHMETICAL_OP  shift, and go to state 2
    TOK_U_LOGICAL_OP       shift, and go to state 3
    TOK_OPENPAR            shift, and go to state 5
    TOK_ROM_CONST          shift, and go to state 12
    TOK_INT_CONST          shift, and go to state 13
    TOK_FLOAT_CONST        shift, and go to state 14

    expr        go to state 51
    identifier  go to state 50
    num_const   go to state 42


state 4

   42 if_stmt: TOK_IF . TOK_OPENPAR expr TOK_CLOSEPAR stmnt
   43        | TOK_IF . TOK_OPENPAR expr TOK_CLOSEPAR stmnt TOK_ELSE stmnt
   44        | TOK_IF . TOK_OPENPAR expr error

    TOK_OPENPAR  shift, and go to state 52


state 5

   66 expr: TOK_OPENPAR . expr error
   67     | TOK_OPENPAR . expr TOK_CLOSEPAR

    TOK_IDENTIFIER         shift, and go to state 48
    TOK_U_ARITHMETICAL_OP  shift, and go to state 2
    TOK_U_LOGICAL_OP       shift, and go to state 3
    TOK_OPENPAR            shift, and go to state 5
    TOK_ROM_CONST          shift, and go to state 12
    TOK_INT_CONST          shift, and go to state 13
    TOK_FLOAT_CONST        shift, and go to state 14

    expr        go to state 53
    identifier  go to state 50
    num_const   go to state 42


state 6

   52 type_name: TOK_ROM_DECL .

    $default  reduce using rule 52 (type_name)


state 7

   54 type_name: TOK_INT_DECL .

    $default  reduce using rule 54 (type_name)


state 8

   53 type_name: TOK_FLOAT_DECL .

    $default  reduce using rule 53 (type_name)


state 9

   45 loop_decl: TOK_FOR_DECL . loop_for_expr loop_body

    TOK_OPENPAR  shift, and go to state 54

    loop_for_expr  go to state 55


state 10

   46 loop_decl: TOK_WHILE_DECL . loop_while_expr loop_body

    TOK_OPENPAR  shift, and go to state 56

    loop_while_expr  go to state 57


state 11

   47 loop_decl: TOK_DO_DECL . loop_body TOK_WHILE_DECL loop_while_expr TOK_ENDEXPR

    TOK_OPENBR  shift, and go to state 58

    stmnt_block_start  go to state 59
    stmnt_block        go to state 60
    loop_body          go to state 61


state 12

   75 num_const: TOK_ROM_CONST .

    $default  reduce using rule 75 (num_const)


state 13

   74 num_const: TOK_INT_CONST .

    $default  reduce using rule 74 (num_const)


state 14

   76 num_const: TOK_FLOAT_CONST .

    $default  reduce using rule 76 (num_const)


state 15

   37 print_stmt: TOK_PRINT . TOK_OPENPAR expr TOK_CLOSEPAR TOK_ENDEXPR
   38           | TOK_PRINT . error
   39           | TOK_PRINT . '(' expr error
   40           | TOK_PRINT . '(' expr ')' error

    error        shift, and go to state 62
    TOK_OPENPAR  shift, and go to state 63
    '('          shift, and go to state 64


state 16

   41 read_stmt: TOK_READ . TOK_OPENPAR left_assign_expr TOK_CLOSEPAR TOK_ENDEXPR

    TOK_OPENPAR  shift, and go to state 65


state 17

   25 stmnt: TOK_BREAK . TOK_ENDEXPR
   26      | TOK_BREAK . error

    error        shift, and go to state 66
    TOK_ENDEXPR  shift, and go to state 67


state 18

   27 stmnt: TOK_CONTINUE . TOK_ENDEXPR
   28      | TOK_CONTINUE . error

    error        shift, and go to state 68
    TOK_ENDEXPR  shift, and go to state 69


state 19

   18 stmnt: TOK_GOTO . TOK_IDENTIFIER TOK_ENDEXPR

    TOK_IDENTIFIER  shift, and go to state 70


state 20

   33 struct_type: TOK_STRUCT .

    $default  reduce using rule 33 (struct_type)


state 21

   34 struct_type: TOK_UNION .

    $default  reduce using rule 34 (struct_type)


state 22

   79 switch_head: TOK_SWITCH . TOK_OPENPAR expr TOK_CLOSEPAR TOK_OPENBR

    TOK_OPENPAR  shift, and go to state 71


state 23

    0 $accept: start . $end

    $end  shift, and go to state 72


state 24

    2 start: declaration_list . stmnt_list
    3      | declaration_list .
    6 declaration_list: declaration_list . declaration_stmt ';'

    TOK_IDENTIFIER         shift, and go to state 1
    TOK_U_ARITHMETICAL_OP  shift, and go to state 2
    TOK_U_LOGICAL_OP       shift, and go to state 3
    TOK_IF                 shift, and go to state 4
    TOK_OPENPAR            shift, and go to state 5
    TOK_ROM_DECL           shift, and go to state 6
    TOK_INT_DECL           shift, and go to state 7
    TOK_FLOAT_DECL         shift, and go to state 8
    TOK_FOR_DECL           shift, and go to state 9
    TOK_WHILE_DECL         shift, and go to state 10
    TOK_DO_DECL            shift, and go to state 11
    TOK_ROM_CONST          shift, and go to state 12
    TOK_INT_CONST          shift, and go to state 13
    TOK_FLOAT_CONST        shift, and go to state 14
    TOK_PRINT              shift, and go to state 15
    TOK_READ               shift, and go to state 16
    TOK_BREAK              shift, and go to state 17
    TOK_CONTINUE           shift, and go to state 18
    TOK_GOTO               shift, and go to state 19
    TOK_STRUCT             shift, and go to state 20
    TOK_UNION              shift, and go to state 21
    TOK_SWITCH             shift, and go to state 22

    $default  reduce using rule 3 (start)

    stmnt_list        go to state 73
    stmnt             go to state 26
    declaration_stmt  go to state 74
    struct_def        go to state 28
    struct_head       go to state 29
    struct_type       go to state 30
    print_stmt        go to state 31
    read_stmt         go to state 32
    if_stmt           go to state 33
    loop_decl         go to state 34
    type              go to state 35
    type_name         go to state 36
    left_assign_expr  go to state 37
    assignment        go to state 38
    expr              go to state 39
    struct_item       go to state 40
    identifier        go to state 41
    num_const         go to state 42
    switch_stmt       go to state 43
    switch_head       go to state 44


state 25

    4 start: stmnt_list .

    $default  reduce using rule 4 (start)


state 26

    8 stmnt_list: stmnt .
    9           | stmnt . stmnt_list

    TOK_IDENTIFIER         shift, and go to state 75
    TOK_U_ARITHMETICAL_OP  shift, and go to state 2
    TOK_U_LOGICAL_OP       shift, and go to state 3
    TOK_IF                 shift, and go to state 4
    TOK_OPENPAR            shift, and go to state 5
    TOK_FOR_DECL           shift, and go to state 9
    TOK_WHILE_DECL         shift, and go to state 10
    TOK_DO_DECL            shift, and go to state 11
    TOK_ROM_CONST          shift, and go to state 12
    TOK_INT_CONST          shift, and go to state 13
    TOK_FLOAT_CONST        shift, and go to state 14
    TOK_PRINT              shift, and go to state 15
    TOK_READ               shift, and go to state 16
    TOK_BREAK              shift, and go to state 17
    TOK_CONTINUE           shift, and go to state 18
    TOK_GOTO               shift, and go to state 19
    TOK_SWITCH             shift, and go to state 22

    $default  reduce using rule 8 (stmnt_list)

    stmnt_list        go to state 76
    stmnt             go to state 26
    print_stmt        go to state 31
    read_stmt         go to state 32
    if_stmt           go to state 33
    loop_decl         go to state 34
    left_assign_expr  go to state 37
    assignment        go to state 38
    expr              go to state 39
    struct_item       go to state 40
    identifier        go to state 41
    num_const         go to state 42
    switch_stmt       go to state 43
    switch_head       go to state 44


state 27

    5 declaration_list: declaration_stmt . ';'
    7                 | declaration_stmt . error

    error  shift, and go to state 77
    ';'    shift, and go to state 78


state 28

   30 declaration_stmt: struct_def . TOK_ENDEXPR

    TOK_ENDEXPR  shift, and go to state 79


state 29

   31 struct_def: struct_head . struct_body struct_tail

    TOK_OPENBR  shift, and go to state 80

    struct_body  go to state 81


state 30

   32 struct_head: struct_type . TOK_IDENTIFIER

    TOK_IDENTIFIER  shift, and go to state 82


state 31

   22 stmnt: print_stmt .

    $default  reduce using rule 22 (stmnt)


state 32

   23 stmnt: read_stmt .

    $default  reduce using rule 23 (stmnt)


state 33

   19 stmnt: if_stmt .

    $default  reduce using rule 19 (stmnt)


state 34

   20 stmnt: loop_decl .

    $default  reduce using rule 20 (stmnt)


state 35

   29 declaration_stmt: type . TOK_IDENTIFIER TOK_ENDEXPR

    TOK_IDENTIFIER  shift, and go to state 83


state 36

   51 type: type_name . array

    TOK_OPENSQ  shift, and go to state 45

    $default  reduce using rule 68 (array)

    array  go to state 84


state 37

   58 assignment: left_assign_expr . TOK_ASSIGN_OP expr

    TOK_ASSIGN_OP  shift, and go to state 85


state 38

   24 stmnt: assignment .

    $default  reduce using rule 24 (stmnt)


state 39

   15 stmnt: expr . TOK_ENDEXPR
   16      | expr . error
   61 expr: expr . TOK_B_LOGICAL_OP expr
   64     | expr . TOK_ARITHMETICAL_OP expr
   65     | expr . TOK_COMP_OP expr

    error                shift, and go to state 86
    TOK_ARITHMETICAL_OP  shift, and go to state 87
    TOK_COMP_OP          shift, and go to state 88
    TOK_B_LOGICAL_OP     shift, and go to state 89
    TOK_ENDEXPR          shift, and go to state 90


state 40

   57 left_assign_expr: struct_item .

    $default  reduce using rule 57 (left_assign_expr)


state 41

   56 left_assign_expr: identifier .
   59 expr: identifier .
   72 struct_item: identifier . TOK_DOT TOK_IDENTIFIER

    TOK_DOT  shift, and go to state 91

    TOK_ASSIGN_OP  reduce using rule 56 (left_assign_expr)
    $default       reduce using rule 59 (expr)


state 42

   60 expr: num_const .

    $default  reduce using rule 60 (expr)


state 43

   21 stmnt: switch_stmt .

    $default  reduce using rule 21 (stmnt)


state 44

   77 switch_stmt: switch_head . case_list default switch_tail
   78            | switch_head . case_list switch_tail

    TOK_CASE  shift, and go to state 92

    case_list  go to state 93
    case_stmt  go to state 94
    case_head  go to state 95


state 45

   69 array: TOK_OPENSQ . expr TOK_CLOSESQ array
   70      | TOK_OPENSQ . error
   71      | TOK_OPENSQ . expr error

    error                  shift, and go to state 96
    TOK_IDENTIFIER         shift, and go to state 48
    TOK_U_ARITHMETICAL_OP  shift, and go to state 2
    TOK_U_LOGICAL_OP       shift, and go to state 3
    TOK_OPENPAR            shift, and go to state 5
    TOK_ROM_CONST          shift, and go to state 12
    TOK_INT_CONST          shift, and go to state 13
    TOK_FLOAT_CONST        shift, and go to state 14

    expr        go to state 97
    identifier  go to state 50
    num_const   go to state 42


state 46

   17 stmnt: TOK_IDENTIFIER TOK_DOUBLEDOT .

    $default  reduce using rule 17 (stmnt)


state 47

   73 identifier: TOK_IDENTIFIER array .

    $default  reduce using rule 73 (identifier)


state 48

   73 identifier: TOK_IDENTIFIER . array

    TOK_OPENSQ  shift, and go to state 45

    $default  reduce using rule 68 (array)

    array  go to state 47


state 49

   61 expr: expr . TOK_B_LOGICAL_OP expr
   63     | TOK_U_ARITHMETICAL_OP expr .
   64     | expr . TOK_ARITHMETICAL_OP expr
   65     | expr . TOK_COMP_OP expr

    TOK_B_LOGICAL_OP  shift, and go to state 89

    TOK_B_LOGICAL_OP  [reduce using rule 63 (expr)]
    $default          reduce using rule 63 (expr)


state 50

   59 expr: identifier .

    $default  reduce using rule 59 (expr)


state 51

   61 expr: expr . TOK_B_LOGICAL_OP expr
   62     | TOK_U_LOGICAL_OP expr .
   64     | expr . TOK_ARITHMETICAL_OP expr
   65     | expr . TOK_COMP_OP expr

    TOK_B_LOGICAL_OP  shift, and go to state 89

    TOK_B_LOGICAL_OP  [reduce using rule 62 (expr)]
    $default          reduce using rule 62 (expr)


state 52

   42 if_stmt: TOK_IF TOK_OPENPAR . expr TOK_CLOSEPAR stmnt
   43        | TOK_IF TOK_OPENPAR . expr TOK_CLOSEPAR stmnt TOK_ELSE stmnt
   44        | TOK_IF TOK_OPENPAR . expr error

    TOK_IDENTIFIER         shift, and go to state 48
    TOK_U_ARITHMETICAL_OP  shift, and go to state 2
    TOK_U_LOGICAL_OP       shift, and go to state 3
    TOK_OPENPAR            shift, and go to state 5
    TOK_ROM_CONST          shift, and go to state 12
    TOK_INT_CONST          shift, and go to state 13
    TOK_FLOAT_CONST        shift, and go to state 14

    expr        go to state 98
    identifier  go to state 50
    num_const   go to state 42


state 53

   61 expr: expr . TOK_B_LOGICAL_OP expr
   64     | expr . TOK_ARITHMETICAL_OP expr
   65     | expr . TOK_COMP_OP expr
   66     | TOK_OPENPAR expr . error
   67     | TOK_OPENPAR expr . TOK_CLOSEPAR

    error                shift, and go to state 99
    TOK_ARITHMETICAL_OP  shift, and go to state 87
    TOK_COMP_OP          shift, and go to state 88
    TOK_B_LOGICAL_OP     shift, and go to state 89
    TOK_CLOSEPAR         shift, and go to state 100


state 54

   49 loop_for_expr: TOK_OPENPAR . expr TOK_ENDEXPR expr TOK_ENDEXPR expr TOK_CLOSEPAR

    TOK_IDENTIFIER         shift, and go to state 48
    TOK_U_ARITHMETICAL_OP  shift, and go to state 2
    TOK_U_LOGICAL_OP       shift, and go to state 3
    TOK_OPENPAR            shift, and go to state 5
    TOK_ROM_CONST          shift, and go to state 12
    TOK_INT_CONST          shift, and go to state 13
    TOK_FLOAT_CONST        shift, and go to state 14

    expr        go to state 101
    identifier  go to state 50
    num_const   go to state 42


state 55

   45 loop_decl: TOK_FOR_DECL loop_for_expr . loop_body

    TOK_OPENBR  shift, and go to state 58

    stmnt_block_start  go to state 59
    stmnt_block        go to state 60
    loop_body          go to state 102


state 56

   48 loop_while_expr: TOK_OPENPAR . expr TOK_CLOSEPAR

    TOK_IDENTIFIER         shift, and go to state 48
    TOK_U_ARITHMETICAL_OP  shift, and go to state 2
    TOK_U_LOGICAL_OP       shift, and go to state 3
    TOK_OPENPAR            shift, and go to state 5
    TOK_ROM_CONST          shift, and go to state 12
    TOK_INT_CONST          shift, and go to state 13
    TOK_FLOAT_CONST        shift, and go to state 14

    expr        go to state 103
    identifier  go to state 50
    num_const   go to state 42


state 57

   46 loop_decl: TOK_WHILE_DECL loop_while_expr . loop_body

    TOK_OPENBR  shift, and go to state 58

    stmnt_block_start  go to state 59
    stmnt_block        go to state 60
    loop_body          go to state 104


state 58

   11 stmnt_block_start: TOK_OPENBR . $@1

    $default  reduce using rule 10 ($@1)

    $@1  go to state 105


state 59

   13 stmnt_block: stmnt_block_start . stmnt_list TOK_CLOSEBR $@2
   14            | stmnt_block_start . stmnt_list error

    TOK_IDENTIFIER         shift, and go to state 75
    TOK_U_ARITHMETICAL_OP  shift, and go to state 2
    TOK_U_LOGICAL_OP       shift, and go to state 3
    TOK_IF                 shift, and go to state 4
    TOK_OPENPAR            shift, and go to state 5
    TOK_FOR_DECL           shift, and go to state 9
    TOK_WHILE_DECL         shift, and go to state 10
    TOK_DO_DECL            shift, and go to state 11
    TOK_ROM_CONST          shift, and go to state 12
    TOK_INT_CONST          shift, and go to state 13
    TOK_FLOAT_CONST        shift, and go to state 14
    TOK_PRINT              shift, and go to state 15
    TOK_READ               shift, and go to state 16
    TOK_BREAK              shift, and go to state 17
    TOK_CONTINUE           shift, and go to state 18
    TOK_GOTO               shift, and go to state 19
    TOK_SWITCH             shift, and go to state 22

    stmnt_list        go to state 106
    stmnt             go to state 26
    print_stmt        go to state 31
    read_stmt         go to state 32
    if_stmt           go to state 33
    loop_decl         go to state 34
    left_assign_expr  go to state 37
    assignment        go to state 38
    expr              go to state 39
    struct_item       go to state 40
    identifier        go to state 41
    num_const         go to state 42
    switch_stmt       go to state 43
    switch_head       go to state 44


state 60

   50 loop_body: stmnt_block .

    $default  reduce using rule 50 (loop_body)


state 61

   47 loop_decl: TOK_DO_DECL loop_body . TOK_WHILE_DECL loop_while_expr TOK_ENDEXPR

    TOK_WHILE_DECL  shift, and go to state 107


state 62

   38 print_stmt: TOK_PRINT error .

    $default  reduce using rule 38 (print_stmt)


state 63

   37 print_stmt: TOK_PRINT TOK_OPENPAR . expr TOK_CLOSEPAR TOK_ENDEXPR

    TOK_IDENTIFIER         shift, and go to state 48
    TOK_U_ARITHMETICAL_OP  shift, and go to state 2
    TOK_U_LOGICAL_OP       shift, and go to state 3
    TOK_OPENPAR            shift, and go to state 5
    TOK_ROM_CONST          shift, and go to state 12
    TOK_INT_CONST          shift, and go to state 13
    TOK_FLOAT_CONST        shift, and go to state 14

    expr        go to state 108
    identifier  go to state 50
    num_const   go to state 42


state 64

   39 print_stmt: TOK_PRINT '(' . expr error
   40           | TOK_PRINT '(' . expr ')' error

    TOK_IDENTIFIER         shift, and go to state 48
    TOK_U_ARITHMETICAL_OP  shift, and go to state 2
    TOK_U_LOGICAL_OP       shift, and go to state 3
    TOK_OPENPAR            shift, and go to state 5
    TOK_ROM_CONST          shift, and go to state 12
    TOK_INT_CONST          shift, and go to state 13
    TOK_FLOAT_CONST        shift, and go to state 14

    expr        go to state 109
    identifier  go to state 50
    num_const   go to state 42


state 65

   41 read_stmt: TOK_READ TOK_OPENPAR . left_assign_expr TOK_CLOSEPAR TOK_ENDEXPR

    TOK_IDENTIFIER  shift, and go to state 48

    left_assign_expr  go to state 110
    struct_item       go to state 40
    identifier        go to state 111


state 66

   26 stmnt: TOK_BREAK error .

    $default  reduce using rule 26 (stmnt)


state 67

   25 stmnt: TOK_BREAK TOK_ENDEXPR .

    $default  reduce using rule 25 (stmnt)


state 68

   28 stmnt: TOK_CONTINUE error .

    $default  reduce using rule 28 (stmnt)


state 69

   27 stmnt: TOK_CONTINUE TOK_ENDEXPR .

    $default  reduce using rule 27 (stmnt)


state 70

   18 stmnt: TOK_GOTO TOK_IDENTIFIER . TOK_ENDEXPR

    TOK_ENDEXPR  shift, and go to state 112


state 71

   79 switch_head: TOK_SWITCH TOK_OPENPAR . expr TOK_CLOSEPAR TOK_OPENBR

    TOK_IDENTIFIER         shift, and go to state 48
    TOK_U_ARITHMETICAL_OP  shift, and go to state 2
    TOK_U_LOGICAL_OP       shift, and go to state 3
    TOK_OPENPAR            shift, and go to state 5
    TOK_ROM_CONST          shift, and go to state 12
    TOK_INT_CONST          shift, and go to state 13
    TOK_FLOAT_CONST        shift, and go to state 14

    expr        go to state 113
    identifier  go to state 50
    num_const   go to state 42


state 72

    0 $accept: start $end .

    $default  accept


state 73

    2 start: declaration_list stmnt_list .

    $default  reduce using rule 2 (start)


state 74

    6 declaration_list: declaration_list declaration_stmt . ';'

    ';'  shift, and go to state 114


state 75

   17 stmnt: TOK_IDENTIFIER . TOK_DOUBLEDOT
   73 identifier: TOK_IDENTIFIER . array

    TOK_OPENSQ     shift, and go to state 45
    TOK_DOUBLEDOT  shift, and go to state 46

    $default  reduce using rule 68 (array)

    array  go to state 47


state 76

    9 stmnt_list: stmnt stmnt_list .

    $default  reduce using rule 9 (stmnt_list)


state 77

    7 declaration_list: declaration_stmt error .

    $default  reduce using rule 7 (declaration_list)


state 78

    5 declaration_list: declaration_stmt ';' .

    $default  reduce using rule 5 (declaration_list)


state 79

   30 declaration_stmt: struct_def TOK_ENDEXPR .

    $default  reduce using rule 30 (declaration_stmt)


state 80

   35 struct_body: TOK_OPENBR . declaration_list

    TOK_IDENTIFIER  shift, and go to state 115
    TOK_ROM_DECL    shift, and go to state 6
    TOK_INT_DECL    shift, and go to state 7
    TOK_FLOAT_DECL  shift, and go to state 8
    TOK_STRUCT      shift, and go to state 20
    TOK_UNION       shift, and go to state 21

    declaration_list  go to state 116
    declaration_stmt  go to state 27
    struct_def        go to state 28
    struct_head       go to state 29
    struct_type       go to state 30
    type              go to state 35
    type_name         go to state 36


state 81

   31 struct_def: struct_head struct_body . struct_tail

    TOK_CLOSEBR  shift, and go to state 117

    struct_tail  go to state 118


state 82

   32 struct_head: struct_type TOK_IDENTIFIER .

    $default  reduce using rule 32 (struct_head)


state 83

   29 declaration_stmt: type TOK_IDENTIFIER . TOK_ENDEXPR

    TOK_ENDEXPR  shift, and go to state 119


state 84

   51 type: type_name array .

    $default  reduce using rule 51 (type)


state 85

   58 assignment: left_assign_expr TOK_ASSIGN_OP . expr

    TOK_IDENTIFIER         shift, and go to state 48
    TOK_U_ARITHMETICAL_OP  shift, and go to state 2
    TOK_U_LOGICAL_OP       shift, and go to state 3
    TOK_OPENPAR            shift, and go to state 5
    TOK_ROM_CONST          shift, and go to state 12
    TOK_INT_CONST          shift, and go to state 13
    TOK_FLOAT_CONST        shift, and go to state 14

    expr        go to state 120
    identifier  go to state 50
    num_const   go to state 42


state 86

   16 stmnt: expr error .

    $default  reduce using rule 16 (stmnt)


state 87

   64 expr: expr TOK_ARITHMETICAL_OP . expr

    TOK_IDENTIFIER         shift, and go to state 48
    TOK_U_ARITHMETICAL_OP  shift, and go to state 2
    TOK_U_LOGICAL_OP       shift, and go to state 3
    TOK_OPENPAR            shift, and go to state 5
    TOK_ROM_CONST          shift, and go to state 12
    TOK_INT_CONST          shift, and go to state 13
    TOK_FLOAT_CONST        shift, and go to state 14

    expr        go to state 121
    identifier  go to state 50
    num_const   go to state 42


state 88

   65 expr: expr TOK_COMP_OP . expr

    TOK_IDENTIFIER         shift, and go to state 48
    TOK_U_ARITHMETICAL_OP  shift, and go to state 2
    TOK_U_LOGICAL_OP       shift, and go to state 3
    TOK_OPENPAR            shift, and go to state 5
    TOK_ROM_CONST          shift, and go to state 12
    TOK_INT_CONST          shift, and go to state 13
    TOK_FLOAT_CONST        shift, and go to state 14

    expr        go to state 122
    identifier  go to state 50
    num_const   go to state 42


state 89

   61 expr: expr TOK_B_LOGICAL_OP . expr

    TOK_IDENTIFIER         shift, and go to state 48
    TOK_U_ARITHMETICAL_OP  shift, and go to state 2
    TOK_U_LOGICAL_OP       shift, and go to state 3
    TOK_OPENPAR            shift, and go to state 5
    TOK_ROM_CONST          shift, and go to state 12
    TOK_INT_CONST          shift, and go to state 13
    TOK_FLOAT_CONST        shift, and go to state 14

    expr        go to state 123
    identifier  go to state 50
    num_const   go to state 42


state 90

   15 stmnt: expr TOK_ENDEXPR .

    $default  reduce using rule 15 (stmnt)


state 91

   72 struct_item: identifier TOK_DOT . TOK_IDENTIFIER

    TOK_IDENTIFIER  shift, and go to state 124


state 92

   84 case_head: TOK_CASE . expr TOK_DOUBLEDOT

    TOK_IDENTIFIER         shift, and go to state 48
    TOK_U_ARITHMETICAL_OP  shift, and go to state 2
    TOK_U_LOGICAL_OP       shift, and go to state 3
    TOK_OPENPAR            shift, and go to state 5
    TOK_ROM_CONST          shift, and go to state 12
    TOK_INT_CONST          shift, and go to state 13
    TOK_FLOAT_CONST        shift, and go to state 14

    expr        go to state 125
    identifier  go to state 50
    num_const   go to state 42


state 93

   77 switch_stmt: switch_head case_list . default switch_tail
   78            | switch_head case_list . switch_tail

    TOK_CLOSEBR  shift, and go to state 126
    TOK_DEFAULT  shift, and go to state 127

    switch_tail   go to state 128
    default       go to state 129
    default_head  go to state 130


state 94

   81 case_list: case_stmt .
   82          | case_stmt . case_list

    TOK_CASE  shift, and go to state 92

    $default  reduce using rule 81 (case_list)

    case_list  go to state 131
    case_stmt  go to state 94
    case_head  go to state 95


state 95

   83 case_stmt: case_head . case_body

    TOK_IDENTIFIER         shift, and go to state 75
    TOK_U_ARITHMETICAL_OP  shift, and go to state 2
    TOK_U_LOGICAL_OP       shift, and go to state 3
    TOK_IF                 shift, and go to state 4
    TOK_OPENPAR            shift, and go to state 5
    TOK_OPENBR             shift, and go to state 58
    TOK_FOR_DECL           shift, and go to state 9
    TOK_WHILE_DECL         shift, and go to state 10
    TOK_DO_DECL            shift, and go to state 11
    TOK_ROM_CONST          shift, and go to state 12
    TOK_INT_CONST          shift, and go to state 13
    TOK_FLOAT_CONST        shift, and go to state 14
    TOK_PRINT              shift, and go to state 15
    TOK_READ               shift, and go to state 16
    TOK_BREAK              shift, and go to state 17
    TOK_CONTINUE           shift, and go to state 18
    TOK_GOTO               shift, and go to state 19
    TOK_SWITCH             shift, and go to state 22
    TOK_CASE               shift, and go to state 92

    stmnt_block_start  go to state 59
    stmnt_block        go to state 132
    stmnt              go to state 133
    print_stmt         go to state 31
    read_stmt          go to state 32
    if_stmt            go to state 33
    loop_decl          go to state 34
    left_assign_expr   go to state 37
    assignment         go to state 38
    expr               go to state 39
    struct_item        go to state 40
    identifier         go to state 41
    num_const          go to state 42
    switch_stmt        go to state 43
    switch_head        go to state 44
    case_stmt          go to state 134
    case_head          go to state 95
    case_body          go to state 135


state 96

   70 array: TOK_OPENSQ error .

    $default  reduce using rule 70 (array)


state 97

   61 expr: expr . TOK_B_LOGICAL_OP expr
   64     | expr . TOK_ARITHMETICAL_OP expr
   65     | expr . TOK_COMP_OP expr
   69 array: TOK_OPENSQ expr . TOK_CLOSESQ array
   71      | TOK_OPENSQ expr . error

    error                shift, and go to state 136
    TOK_ARITHMETICAL_OP  shift, and go to state 87
    TOK_COMP_OP          shift, and go to state 88
    TOK_B_LOGICAL_OP     shift, and go to state 89
    TOK_CLOSESQ          shift, and go to state 137


state 98

   42 if_stmt: TOK_IF TOK_OPENPAR expr . TOK_CLOSEPAR stmnt
   43        | TOK_IF TOK_OPENPAR expr . TOK_CLOSEPAR stmnt TOK_ELSE stmnt
   44        | TOK_IF TOK_OPENPAR expr . error
   61 expr: expr . TOK_B_LOGICAL_OP expr
   64     | expr . TOK_ARITHMETICAL_OP expr
   65     | expr . TOK_COMP_OP expr

    error                shift, and go to state 138
    TOK_ARITHMETICAL_OP  shift, and go to state 87
    TOK_COMP_OP          shift, and go to state 88
    TOK_B_LOGICAL_OP     shift, and go to state 89
    TOK_CLOSEPAR         shift, and go to state 139


state 99

   66 expr: TOK_OPENPAR expr error .

    $default  reduce using rule 66 (expr)


state 100

   67 expr: TOK_OPENPAR expr TOK_CLOSEPAR .

    $default  reduce using rule 67 (expr)


state 101

   49 loop_for_expr: TOK_OPENPAR expr . TOK_ENDEXPR expr TOK_ENDEXPR expr TOK_CLOSEPAR
   61 expr: expr . TOK_B_LOGICAL_OP expr
   64     | expr . TOK_ARITHMETICAL_OP expr
   65     | expr . TOK_COMP_OP expr

    TOK_ARITHMETICAL_OP  shift, and go to state 87
    TOK_COMP_OP          shift, and go to state 88
    TOK_B_LOGICAL_OP     shift, and go to state 89
    TOK_ENDEXPR          shift, and go to state 140


state 102

   45 loop_decl: TOK_FOR_DECL loop_for_expr loop_body .

    $default  reduce using rule 45 (loop_decl)


state 103

   48 loop_while_expr: TOK_OPENPAR expr . TOK_CLOSEPAR
   61 expr: expr . TOK_B_LOGICAL_OP expr
   64     | expr . TOK_ARITHMETICAL_OP expr
   65     | expr . TOK_COMP_OP expr

    TOK_ARITHMETICAL_OP  shift, and go to state 87
    TOK_COMP_OP          shift, and go to state 88
    TOK_B_LOGICAL_OP     shift, and go to state 89
    TOK_CLOSEPAR         shift, and go to state 141


state 104

   46 loop_decl: TOK_WHILE_DECL loop_while_expr loop_body .

    $default  reduce using rule 46 (loop_decl)


state 105

   11 stmnt_block_start: TOK_OPENBR $@1 .

    $default  reduce using rule 11 (stmnt_block_start)


state 106

   13 stmnt_block: stmnt_block_start stmnt_list . TOK_CLOSEBR $@2
   14            | stmnt_block_start stmnt_list . error

    error        shift, and go to state 142
    TOK_CLOSEBR  shift, and go to state 143


state 107

   47 loop_decl: TOK_DO_DECL loop_body TOK_WHILE_DECL . loop_while_expr TOK_ENDEXPR

    TOK_OPENPAR  shift, and go to state 56

    loop_while_expr  go to state 144


state 108

   37 print_stmt: TOK_PRINT TOK_OPENPAR expr . TOK_CLOSEPAR TOK_ENDEXPR
   61 expr: expr . TOK_B_LOGICAL_OP expr
   64     | expr . TOK_ARITHMETICAL_OP expr
   65     | expr . TOK_COMP_OP expr

    TOK_ARITHMETICAL_OP  shift, and go to state 87
    TOK_COMP_OP          shift, and go to state 88
    TOK_B_LOGICAL_OP     shift, and go to state 89
    TOK_CLOSEPAR         shift, and go to state 145


state 109

   39 print_stmt: TOK_PRINT '(' expr . error
   40           | TOK_PRINT '(' expr . ')' error
   61 expr: expr . TOK_B_LOGICAL_OP expr
   64     | expr . TOK_ARITHMETICAL_OP expr
   65     | expr . TOK_COMP_OP expr

    error                shift, and go to state 146
    TOK_ARITHMETICAL_OP  shift, and go to state 87
    TOK_COMP_OP          shift, and go to state 88
    TOK_B_LOGICAL_OP     shift, and go to state 89
    ')'                  shift, and go to state 147


state 110

   41 read_stmt: TOK_READ TOK_OPENPAR left_assign_expr . TOK_CLOSEPAR TOK_ENDEXPR

    TOK_CLOSEPAR  shift, and go to state 148


state 111

   56 left_assign_expr: identifier .
   72 struct_item: identifier . TOK_DOT TOK_IDENTIFIER

    TOK_DOT  shift, and go to state 91

    $default  reduce using rule 56 (left_assign_expr)


state 112

   18 stmnt: TOK_GOTO TOK_IDENTIFIER TOK_ENDEXPR .

    $default  reduce using rule 18 (stmnt)


state 113

   61 expr: expr . TOK_B_LOGICAL_OP expr
   64     | expr . TOK_ARITHMETICAL_OP expr
   65     | expr . TOK_COMP_OP expr
   79 switch_head: TOK_SWITCH TOK_OPENPAR expr . TOK_CLOSEPAR TOK_OPENBR

    TOK_ARITHMETICAL_OP  shift, and go to state 87
    TOK_COMP_OP          shift, and go to state 88
    TOK_B_LOGICAL_OP     shift, and go to state 89
    TOK_CLOSEPAR         shift, and go to state 149


state 114

    6 declaration_list: declaration_list declaration_stmt ';' .

    $default  reduce using rule 6 (declaration_list)


state 115

   55 type_name: TOK_IDENTIFIER .

    $default  reduce using rule 55 (type_name)


state 116

    6 declaration_list: declaration_list . declaration_stmt ';'
   35 struct_body: TOK_OPENBR declaration_list .

    TOK_IDENTIFIER  shift, and go to state 115
    TOK_ROM_DECL    shift, and go to state 6
    TOK_INT_DECL    shift, and go to state 7
    TOK_FLOAT_DECL  shift, and go to state 8
    TOK_STRUCT      shift, and go to state 20
    TOK_UNION       shift, and go to state 21

    $default  reduce using rule 35 (struct_body)

    declaration_stmt  go to state 74
    struct_def        go to state 28
    struct_head       go to state 29
    struct_type       go to state 30
    type              go to state 35
    type_name         go to state 36


state 117

   36 struct_tail: TOK_CLOSEBR .

    $default  reduce using rule 36 (struct_tail)


state 118

   31 struct_def: struct_head struct_body struct_tail .

    $default  reduce using rule 31 (struct_def)


state 119

   29 declaration_stmt: type TOK_IDENTIFIER TOK_ENDEXPR .

    $default  reduce using rule 29 (declaration_stmt)


state 120

   58 assignment: left_assign_expr TOK_ASSIGN_OP expr .
   61 expr: expr . TOK_B_LOGICAL_OP expr
   64     | expr . TOK_ARITHMETICAL_OP expr
   65     | expr . TOK_COMP_OP expr

    TOK_ARITHMETICAL_OP  shift, and go to state 87
    TOK_COMP_OP          shift, and go to state 88
    TOK_B_LOGICAL_OP     shift, and go to state 89

    $default  reduce using rule 58 (assignment)


state 121

   61 expr: expr . TOK_B_LOGICAL_OP expr
   64     | expr . TOK_ARITHMETICAL_OP expr
   64     | expr TOK_ARITHMETICAL_OP expr .
   65     | expr . TOK_COMP_OP expr

    TOK_B_LOGICAL_OP  shift, and go to state 89

    TOK_B_LOGICAL_OP  [reduce using rule 64 (expr)]
    $default          reduce using rule 64 (expr)


state 122

   61 expr: expr . TOK_B_LOGICAL_OP expr
   64     | expr . TOK_ARITHMETICAL_OP expr
   65     | expr . TOK_COMP_OP expr
   65     | expr TOK_COMP_OP expr .

    TOK_B_LOGICAL_OP  shift, and go to state 89

    TOK_B_LOGICAL_OP  [reduce using rule 65 (expr)]
    $default          reduce using rule 65 (expr)


state 123

   61 expr: expr . TOK_B_LOGICAL_OP expr
   61     | expr TOK_B_LOGICAL_OP expr .
   64     | expr . TOK_ARITHMETICAL_OP expr
   65     | expr . TOK_COMP_OP expr

    TOK_ARITHMETICAL_OP  shift, and go to state 87
    TOK_COMP_OP          shift, and go to state 88
    TOK_B_LOGICAL_OP     shift, and go to state 89

    TOK_ARITHMETICAL_OP  [reduce using rule 61 (expr)]
    TOK_COMP_OP          [reduce using rule 61 (expr)]
    TOK_B_LOGICAL_OP     [reduce using rule 61 (expr)]
    $default             reduce using rule 61 (expr)


state 124

   72 struct_item: identifier TOK_DOT TOK_IDENTIFIER .

    $default  reduce using rule 72 (struct_item)


state 125

   61 expr: expr . TOK_B_LOGICAL_OP expr
   64     | expr . TOK_ARITHMETICAL_OP expr
   65     | expr . TOK_COMP_OP expr
   84 case_head: TOK_CASE expr . TOK_DOUBLEDOT

    TOK_ARITHMETICAL_OP  shift, and go to state 87
    TOK_COMP_OP          shift, and go to state 88
    TOK_B_LOGICAL_OP     shift, and go to state 89
    TOK_DOUBLEDOT        shift, and go to state 150


state 126

   80 switch_tail: TOK_CLOSEBR .

    $default  reduce using rule 80 (switch_tail)


state 127

   89 default_head: TOK_DEFAULT . TOK_DOUBLEDOT

    TOK_DOUBLEDOT  shift, and go to state 151


state 128

   78 switch_stmt: switch_head case_list switch_tail .

    $default  reduce using rule 78 (switch_stmt)


state 129

   77 switch_stmt: switch_head case_list default . switch_tail

    TOK_CLOSEBR  shift, and go to state 126

    switch_tail  go to state 152


state 130

   88 default: default_head . default_body

    TOK_IDENTIFIER         shift, and go to state 75
    TOK_U_ARITHMETICAL_OP  shift, and go to state 2
    TOK_U_LOGICAL_OP       shift, and go to state 3
    TOK_IF                 shift, and go to state 4
    TOK_OPENPAR            shift, and go to state 5
    TOK_OPENBR             shift, and go to state 58
    TOK_FOR_DECL           shift, and go to state 9
    TOK_WHILE_DECL         shift, and go to state 10
    TOK_DO_DECL            shift, and go to state 11
    TOK_ROM_CONST          shift, and go to state 12
    TOK_INT_CONST          shift, and go to state 13
    TOK_FLOAT_CONST        shift, and go to state 14
    TOK_PRINT              shift, and go to state 15
    TOK_READ               shift, and go to state 16
    TOK_BREAK              shift, and go to state 17
    TOK_CONTINUE           shift, and go to state 18
    TOK_GOTO               shift, and go to state 19
    TOK_SWITCH             shift, and go to state 22

    stmnt_block_start  go to state 59
    stmnt_block        go to state 153
    stmnt              go to state 154
    print_stmt         go to state 31
    read_stmt          go to state 32
    if_stmt            go to state 33
    loop_decl          go to state 34
    left_assign_expr   go to state 37
    assignment         go to state 38
    expr               go to state 39
    struct_item        go to state 40
    identifier         go to state 41
    num_const          go to state 42
    switch_stmt        go to state 43
    switch_head        go to state 44
    default_body       go to state 155


state 131

   82 case_list: case_stmt case_list .

    $default  reduce using rule 82 (case_list)


state 132

   86 case_body: stmnt_block .

    $default  reduce using rule 86 (case_body)


state 133

   85 case_body: stmnt .

    $default  reduce using rule 85 (case_body)


state 134

   87 case_body: case_stmt .

    $default  reduce using rule 87 (case_body)


state 135

   83 case_stmt: case_head case_body .

    $default  reduce using rule 83 (case_stmt)


state 136

   71 array: TOK_OPENSQ expr error .

    $default  reduce using rule 71 (array)


state 137

   69 array: TOK_OPENSQ expr TOK_CLOSESQ . array

    TOK_OPENSQ  shift, and go to state 45

    $default  reduce using rule 68 (array)

    array  go to state 156


state 138

   44 if_stmt: TOK_IF TOK_OPENPAR expr error .

    $default  reduce using rule 44 (if_stmt)


state 139

   42 if_stmt: TOK_IF TOK_OPENPAR expr TOK_CLOSEPAR . stmnt
   43        | TOK_IF TOK_OPENPAR expr TOK_CLOSEPAR . stmnt TOK_ELSE stmnt

    TOK_IDENTIFIER         shift, and go to state 75
    TOK_U_ARITHMETICAL_OP  shift, and go to state 2
    TOK_U_LOGICAL_OP       shift, and go to state 3
    TOK_IF                 shift, and go to state 4
    TOK_OPENPAR            shift, and go to state 5
    TOK_FOR_DECL           shift, and go to state 9
    TOK_WHILE_DECL         shift, and go to state 10
    TOK_DO_DECL            shift, and go to state 11
    TOK_ROM_CONST          shift, and go to state 12
    TOK_INT_CONST          shift, and go to state 13
    TOK_FLOAT_CONST        shift, and go to state 14
    TOK_PRINT              shift, and go to state 15
    TOK_READ               shift, and go to state 16
    TOK_BREAK              shift, and go to state 17
    TOK_CONTINUE           shift, and go to state 18
    TOK_GOTO               shift, and go to state 19
    TOK_SWITCH             shift, and go to state 22

    stmnt             go to state 157
    print_stmt        go to state 31
    read_stmt         go to state 32
    if_stmt           go to state 33
    loop_decl         go to state 34
    left_assign_expr  go to state 37
    assignment        go to state 38
    expr              go to state 39
    struct_item       go to state 40
    identifier        go to state 41
    num_const         go to state 42
    switch_stmt       go to state 43
    switch_head       go to state 44


state 140

   49 loop_for_expr: TOK_OPENPAR expr TOK_ENDEXPR . expr TOK_ENDEXPR expr TOK_CLOSEPAR

    TOK_IDENTIFIER         shift, and go to state 48
    TOK_U_ARITHMETICAL_OP  shift, and go to state 2
    TOK_U_LOGICAL_OP       shift, and go to state 3
    TOK_OPENPAR            shift, and go to state 5
    TOK_ROM_CONST          shift, and go to state 12
    TOK_INT_CONST          shift, and go to state 13
    TOK_FLOAT_CONST        shift, and go to state 14

    expr        go to state 158
    identifier  go to state 50
    num_const   go to state 42


state 141

   48 loop_while_expr: TOK_OPENPAR expr TOK_CLOSEPAR .

    $default  reduce using rule 48 (loop_while_expr)


state 142

   14 stmnt_block: stmnt_block_start stmnt_list error .

    $default  reduce using rule 14 (stmnt_block)


state 143

   13 stmnt_block: stmnt_block_start stmnt_list TOK_CLOSEBR . $@2

    $default  reduce using rule 12 ($@2)

    $@2  go to state 159


state 144

   47 loop_decl: TOK_DO_DECL loop_body TOK_WHILE_DECL loop_while_expr . TOK_ENDEXPR

    TOK_ENDEXPR  shift, and go to state 160


state 145

   37 print_stmt: TOK_PRINT TOK_OPENPAR expr TOK_CLOSEPAR . TOK_ENDEXPR

    TOK_ENDEXPR  shift, and go to state 161


state 146

   39 print_stmt: TOK_PRINT '(' expr error .

    $default  reduce using rule 39 (print_stmt)


state 147

   40 print_stmt: TOK_PRINT '(' expr ')' . error

    error  shift, and go to state 162


state 148

   41 read_stmt: TOK_READ TOK_OPENPAR left_assign_expr TOK_CLOSEPAR . TOK_ENDEXPR

    TOK_ENDEXPR  shift, and go to state 163


state 149

   79 switch_head: TOK_SWITCH TOK_OPENPAR expr TOK_CLOSEPAR . TOK_OPENBR

    TOK_OPENBR  shift, and go to state 164


state 150

   84 case_head: TOK_CASE expr TOK_DOUBLEDOT .

    $default  reduce using rule 84 (case_head)


state 151

   89 default_head: TOK_DEFAULT TOK_DOUBLEDOT .

    $default  reduce using rule 89 (default_head)


state 152

   77 switch_stmt: switch_head case_list default switch_tail .

    $default  reduce using rule 77 (switch_stmt)


state 153

   91 default_body: stmnt_block .

    $default  reduce using rule 91 (default_body)


state 154

   90 default_body: stmnt .

    $default  reduce using rule 90 (default_body)


state 155

   88 default: default_head default_body .

    $default  reduce using rule 88 (default)


state 156

   69 array: TOK_OPENSQ expr TOK_CLOSESQ array .

    $default  reduce using rule 69 (array)


state 157

   42 if_stmt: TOK_IF TOK_OPENPAR expr TOK_CLOSEPAR stmnt .
   43        | TOK_IF TOK_OPENPAR expr TOK_CLOSEPAR stmnt . TOK_ELSE stmnt

    TOK_ELSE  shift, and go to state 165

    $default  reduce using rule 42 (if_stmt)


state 158

   49 loop_for_expr: TOK_OPENPAR expr TOK_ENDEXPR expr . TOK_ENDEXPR expr TOK_CLOSEPAR
   61 expr: expr . TOK_B_LOGICAL_OP expr
   64     | expr . TOK_ARITHMETICAL_OP expr
   65     | expr . TOK_COMP_OP expr

    TOK_ARITHMETICAL_OP  shift, and go to state 87
    TOK_COMP_OP          shift, and go to state 88
    TOK_B_LOGICAL_OP     shift, and go to state 89
    TOK_ENDEXPR          shift, and go to state 166


state 159

   13 stmnt_block: stmnt_block_start stmnt_list TOK_CLOSEBR $@2 .

    $default  reduce using rule 13 (stmnt_block)


state 160

   47 loop_decl: TOK_DO_DECL loop_body TOK_WHILE_DECL loop_while_expr TOK_ENDEXPR .

    $default  reduce using rule 47 (loop_decl)


state 161

   37 print_stmt: TOK_PRINT TOK_OPENPAR expr TOK_CLOSEPAR TOK_ENDEXPR .

    $default  reduce using rule 37 (print_stmt)


state 162

   40 print_stmt: TOK_PRINT '(' expr ')' error .

    $default  reduce using rule 40 (print_stmt)


state 163

   41 read_stmt: TOK_READ TOK_OPENPAR left_assign_expr TOK_CLOSEPAR TOK_ENDEXPR .

    $default  reduce using rule 41 (read_stmt)


state 164

   79 switch_head: TOK_SWITCH TOK_OPENPAR expr TOK_CLOSEPAR TOK_OPENBR .

    $default  reduce using rule 79 (switch_head)


state 165

   43 if_stmt: TOK_IF TOK_OPENPAR expr TOK_CLOSEPAR stmnt TOK_ELSE . stmnt

    TOK_IDENTIFIER         shift, and go to state 75
    TOK_U_ARITHMETICAL_OP  shift, and go to state 2
    TOK_U_LOGICAL_OP       shift, and go to state 3
    TOK_IF                 shift, and go to state 4
    TOK_OPENPAR            shift, and go to state 5
    TOK_FOR_DECL           shift, and go to state 9
    TOK_WHILE_DECL         shift, and go to state 10
    TOK_DO_DECL            shift, and go to state 11
    TOK_ROM_CONST          shift, and go to state 12
    TOK_INT_CONST          shift, and go to state 13
    TOK_FLOAT_CONST        shift, and go to state 14
    TOK_PRINT              shift, and go to state 15
    TOK_READ               shift, and go to state 16
    TOK_BREAK              shift, and go to state 17
    TOK_CONTINUE           shift, and go to state 18
    TOK_GOTO               shift, and go to state 19
    TOK_SWITCH             shift, and go to state 22

    stmnt             go to state 167
    print_stmt        go to state 31
    read_stmt         go to state 32
    if_stmt           go to state 33
    loop_decl         go to state 34
    left_assign_expr  go to state 37
    assignment        go to state 38
    expr              go to state 39
    struct_item       go to state 40
    identifier        go to state 41
    num_const         go to state 42
    switch_stmt       go to state 43
    switch_head       go to state 44


state 166

   49 loop_for_expr: TOK_OPENPAR expr TOK_ENDEXPR expr TOK_ENDEXPR . expr TOK_CLOSEPAR

    TOK_IDENTIFIER         shift, and go to state 48
    TOK_U_ARITHMETICAL_OP  shift, and go to state 2
    TOK_U_LOGICAL_OP       shift, and go to state 3
    TOK_OPENPAR            shift, and go to state 5
    TOK_ROM_CONST          shift, and go to state 12
    TOK_INT_CONST          shift, and go to state 13
    TOK_FLOAT_CONST        shift, and go to state 14

    expr        go to state 168
    identifier  go to state 50
    num_const   go to state 42


state 167

   43 if_stmt: TOK_IF TOK_OPENPAR expr TOK_CLOSEPAR stmnt TOK_ELSE stmnt .

    $default  reduce using rule 43 (if_stmt)


state 168

   49 loop_for_expr: TOK_OPENPAR expr TOK_ENDEXPR expr TOK_ENDEXPR expr . TOK_CLOSEPAR
   61 expr: expr . TOK_B_LOGICAL_OP expr
   64     | expr . TOK_ARITHMETICAL_OP expr
   65     | expr . TOK_COMP_OP expr

    TOK_ARITHMETICAL_OP  shift, and go to state 87
    TOK_COMP_OP          shift, and go to state 88
    TOK_B_LOGICAL_OP     shift, and go to state 89
    TOK_CLOSEPAR         shift, and go to state 169


state 169

   49 loop_for_expr: TOK_OPENPAR expr TOK_ENDEXPR expr TOK_ENDEXPR expr TOK_CLOSEPAR .

    $default  reduce using rule 49 (loop_for_expr)
