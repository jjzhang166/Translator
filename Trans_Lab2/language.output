Terminals unused in grammar

   EXPR_ERROR


Grammar

    0 $accept: start $end

    1 start: /* empty */
    2      | declaration_list stmnt_list
    3      | declaration_list
    4      | stmnt_list
    5      | stmnt_list declaration_list

    6 declaration_list: declaration_block TOK_ENDEXPR
    7                 | declaration_list declaration_block TOK_ENDEXPR
    8                 | declaration_block error

    9 stmnt_list: stmnt
   10           | stmnt_list stmnt

   11 $@1: /* empty */

   12 stmnt_block_start: TOK_OPENBR $@1

   13 $@2: /* empty */

   14 stmnt_block: stmnt_block_start stmnt_list TOK_CLOSEBR $@2
   15            | stmnt_block_start stmnt_list error

   16 $@3: /* empty */

   17 stmnt_block: stmnt_block_start declaration_list TOK_CLOSEBR $@3

   18 $@4: /* empty */

   19 stmnt_block: stmnt_block_start declaration_list stmnt_list TOK_CLOSEBR $@4
   20            | stmnt_block_start declaration_list stmnt_list error

   21 expr_or_assignment: expr
   22                   | assignment

   23 expression_statement: TOK_ENDEXPR
   24                     | expr_or_assignment TOK_ENDEXPR
   25                     | expr error

   26 lexemes: TOK_GOTO TOK_IDENTIFIER
   27        | TOK_BREAK
   28        | TOK_CONTINUE
   29        | TOK_RETURN
   30        | TOK_RETURN expr

   31 stmnt: function_def
   32      | expression_statement
   33      | TOK_IDENTIFIER TOK_DOUBLEDOT
   34      | if_stmt
   35      | loop_decl
   36      | switch_stmt
   37      | print_stmt
   38      | read_stmt
   39      | lexemes TOK_ENDEXPR
   40      | lexemes error

   41 declaration_block: declaration_stmt
   42                  | struct_def

   43 declaration_stmt: type TOK_IDENTIFIER

   44 struct_def: struct_head struct_body struct_tail
   45           | struct_head error
   46           | struct_head struct_body error

   47 struct_head: struct_type TOK_IDENTIFIER
   48            | struct_type error

   49 struct_type: TOK_STRUCT
   50            | TOK_UNION

   51 struct_body: TOK_OPENBR declaration_list

   52 struct_tail: TOK_CLOSEBR

   53 print_stmt: TOK_PRINT TOK_OPENPAR expr TOK_CLOSEPAR TOK_ENDEXPR
   54           | TOK_PRINT error
   55           | TOK_PRINT '(' expr error
   56           | TOK_PRINT '(' expr ')' error

   57 read_stmt: TOK_READ TOK_OPENPAR left_assign_expr TOK_CLOSEPAR TOK_ENDEXPR

   58 if_stmt: TOK_IF TOK_OPENPAR expr TOK_CLOSEPAR instruction_body
   59        | TOK_IF TOK_OPENPAR expr TOK_CLOSEPAR instruction_body TOK_ELSE instruction_body
   60        | TOK_IF TOK_OPENPAR expr error

   61 loop_decl: for_decl loop_for_expr instruction_body
   62          | while_decl loop_while_expr instruction_body
   63          | do_while_decl instruction_body TOK_WHILE_DECL loop_while_expr TOK_ENDEXPR

   64 loop_while_expr: TOK_OPENPAR expr TOK_CLOSEPAR

   65 loop_for_expr: TOK_OPENPAR expression_statement expression_statement TOK_CLOSEPAR
   66              | TOK_OPENPAR expression_statement expression_statement expr_or_assignment TOK_CLOSEPAR

   67 for_decl: TOK_FOR_DECL

   68 while_decl: TOK_WHILE_DECL

   69 do_while_decl: TOK_DO_DECL

   70 instruction_body: stmnt_block
   71                 | stmnt

   72 type: type_name array

   73 type_name: TOK_ROM_DECL
   74          | TOK_FLOAT_DECL
   75          | TOK_INT_DECL
   76          | TOK_VOID_DECL
   77          | struct_type TOK_IDENTIFIER

   78 left_assign_expr: identifier
   79                 | struct_item

   80 assignment: left_assign_expr TOK_ASSIGN_OP expr

   81 expr: left_assign_expr
   82     | const
   83     | function_call
   84     | expr TOK_B_AND expr
   85     | expr TOK_B_OR expr
   86     | expr TOK_B_XOR expr
   87     | TOK_B_NOT expr
   88     | TOK_AR_MINUS expr
   89     | expr TOK_AR_PLUS expr
   90     | expr TOK_AR_MINUS expr
   91     | expr TOK_AR_MUL expr
   92     | expr TOK_AR_DIV expr
   93     | expr TOK_AR_MOD expr
   94     | expr TOK_COMP_OP expr
   95     | TOK_OPENPAR expr error
   96     | TOK_OPENPAR expr TOK_CLOSEPAR

   97 array: /* empty */
   98      | TOK_OPENSQ expr TOK_CLOSESQ array
   99      | TOK_OPENSQ error
  100      | TOK_OPENSQ expr error

  101 struct_item: identifier TOK_DOT TOK_IDENTIFIER

  102 identifier: TOK_IDENTIFIER array

  103 const: TOK_INT_CONST
  104      | TOK_ROM_CONST
  105      | TOK_FLOAT_CONST
  106      | TOK_STRING_LITERAL

  107 switch_stmt: switch_head case_list default TOK_CLOSEBR
  108            | switch_head case_list TOK_CLOSEBR

  109 switch_head: TOK_SWITCH TOK_OPENPAR expr TOK_CLOSEPAR TOK_OPENBR

  110 case_list: case_stmt
  111          | case_stmt case_list

  112 case_stmt: case_head case_body

  113 case_head: TOK_CASE expr TOK_DOUBLEDOT

  114 case_body: instruction_body
  115          | case_stmt

  116 default: default_head instruction_body

  117 default_head: TOK_DEFAULT TOK_DOUBLEDOT

  118 parameter: declaration_stmt
  119          | expr

  120 parameter_list: parameter
  121               | parameter_list TOK_COMMA parameter

  122 parameter_type_list: parameter_list

  123 declarator: TOK_OPENPAR parameter_type_list TOK_CLOSEPAR
  124           | TOK_OPENPAR TOK_CLOSEPAR

  125 function_call: TOK_IDENTIFIER declarator

  126 function_def_head: type TOK_IDENTIFIER

  127 func_declarator: declarator

  128 function_def: function_def_head func_declarator stmnt_block
  129             | function_def_head func_declarator error


Terminals, with rules where they appear

$end (0) 0
'(' (40) 55 56
')' (41) 56
error (256) 8 15 20 25 40 45 46 48 54 55 56 60 95 99 100 129
TOK_IDENTIFIER (258) 26 33 43 47 77 101 102 125 126
TOK_B_AND (259) 84
TOK_B_OR (260) 85
TOK_B_XOR (261) 86
TOK_B_NOT (262) 87
TOK_AR_PLUS (263) 89
TOK_AR_MINUS (264) 88 90
TOK_AR_MUL (265) 91
TOK_AR_DIV (266) 92
TOK_AR_MOD (267) 93
TOK_ASSIGN_OP (268) 80
TOK_COMP_OP (269) 94
TOK_IF (270) 58 59 60
TOK_ELSE (271) 59
TOK_ENDEXPR (272) 6 7 23 24 39 53 57 63
TOK_OPENPAR (273) 53 57 58 59 60 64 65 66 95 96 109 123 124
TOK_CLOSEPAR (274) 53 57 58 59 64 65 66 96 109 123 124
TOK_OPENBR (275) 12 51 109
TOK_CLOSEBR (276) 14 17 19 52 107 108
TOK_OPENSQ (277) 98 99 100
TOK_CLOSESQ (278) 98
TOK_DOT (279) 101
TOK_COMMA (280) 121
TOK_DOUBLEDOT (281) 33 113 117
TOK_ROM_DECL (282) 73
TOK_INT_DECL (283) 75
TOK_FLOAT_DECL (284) 74
TOK_VOID_DECL (285) 76
TOK_FOR_DECL (286) 67
TOK_WHILE_DECL (287) 63 68
TOK_DO_DECL (288) 69
TOK_ROM_CONST (289) 104
TOK_INT_CONST (290) 103
TOK_FLOAT_CONST (291) 105
TOK_PRINT (292) 53 54 55 56
TOK_READ (293) 57
TOK_BREAK (294) 27
TOK_CONTINUE (295) 28
TOK_GOTO (296) 26
TOK_RETURN (297) 29 30
TOK_STRUCT (298) 49
TOK_UNION (299) 50
TOK_SWITCH (300) 109
TOK_CASE (301) 113
TOK_DEFAULT (302) 117
TOK_STRING_LITERAL (303) 106
EXPR_ERROR (304)
STMNT_BLOCK_ERROR (305)
IF_WITHOUT_ELSE (306)
NOTX (307)
UMINUS (308)


Nonterminals, with rules where they appear

$accept (56)
    on left: 0
start (57)
    on left: 1 2 3 4 5, on right: 0
declaration_list (58)
    on left: 6 7 8, on right: 2 3 5 7 17 19 20 51
stmnt_list (59)
    on left: 9 10, on right: 2 4 5 10 14 15 19 20
stmnt_block_start (60)
    on left: 12, on right: 14 15 17 19 20
$@1 (61)
    on left: 11, on right: 12
stmnt_block (62)
    on left: 14 15 17 19 20, on right: 70 128
$@2 (63)
    on left: 13, on right: 14
$@3 (64)
    on left: 16, on right: 17
$@4 (65)
    on left: 18, on right: 19
expr_or_assignment (66)
    on left: 21 22, on right: 24 66
expression_statement (67)
    on left: 23 24 25, on right: 32 65 66
lexemes (68)
    on left: 26 27 28 29 30, on right: 39 40
stmnt (69)
    on left: 31 32 33 34 35 36 37 38 39 40, on right: 9 10 71
declaration_block (70)
    on left: 41 42, on right: 6 7 8
declaration_stmt (71)
    on left: 43, on right: 41 118
struct_def (72)
    on left: 44 45 46, on right: 42
struct_head (73)
    on left: 47 48, on right: 44 45 46
struct_type (74)
    on left: 49 50, on right: 47 48 77
struct_body (75)
    on left: 51, on right: 44 46
struct_tail (76)
    on left: 52, on right: 44
print_stmt (77)
    on left: 53 54 55 56, on right: 37
read_stmt (78)
    on left: 57, on right: 38
if_stmt (79)
    on left: 58 59 60, on right: 34
loop_decl (80)
    on left: 61 62 63, on right: 35
loop_while_expr (81)
    on left: 64, on right: 62 63
loop_for_expr (82)
    on left: 65 66, on right: 61
for_decl (83)
    on left: 67, on right: 61
while_decl (84)
    on left: 68, on right: 62
do_while_decl (85)
    on left: 69, on right: 63
instruction_body (86)
    on left: 70 71, on right: 58 59 61 62 63 114 116
type (87)
    on left: 72, on right: 43 126
type_name (88)
    on left: 73 74 75 76 77, on right: 72
left_assign_expr (89)
    on left: 78 79, on right: 57 80 81
assignment (90)
    on left: 80, on right: 22
expr (91)
    on left: 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96, on right:
    21 25 30 53 55 56 58 59 60 64 80 84 85 86 87 88 89 90 91 92 93
    94 95 96 98 100 109 113 119
array (92)
    on left: 97 98 99 100, on right: 72 98 102
struct_item (93)
    on left: 101, on right: 79
identifier (94)
    on left: 102, on right: 78 101
const (95)
    on left: 103 104 105 106, on right: 82
switch_stmt (96)
    on left: 107 108, on right: 36
switch_head (97)
    on left: 109, on right: 107 108
case_list (98)
    on left: 110 111, on right: 107 108 111
case_stmt (99)
    on left: 112, on right: 110 111 115
case_head (100)
    on left: 113, on right: 112
case_body (101)
    on left: 114 115, on right: 112
default (102)
    on left: 116, on right: 107
default_head (103)
    on left: 117, on right: 116
parameter (104)
    on left: 118 119, on right: 120 121
parameter_list (105)
    on left: 120 121, on right: 121 122
parameter_type_list (106)
    on left: 122, on right: 123
declarator (107)
    on left: 123 124, on right: 125 127
function_call (108)
    on left: 125, on right: 83
function_def_head (109)
    on left: 126, on right: 128 129
func_declarator (110)
    on left: 127, on right: 128 129
function_def (111)
    on left: 128 129, on right: 31


state 0

    0 $accept: . start $end

    TOK_IDENTIFIER      shift, and go to state 1
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_IF              shift, and go to state 4
    TOK_ENDEXPR         shift, and go to state 5
    TOK_OPENPAR         shift, and go to state 6
    TOK_ROM_DECL        shift, and go to state 7
    TOK_INT_DECL        shift, and go to state 8
    TOK_FLOAT_DECL      shift, and go to state 9
    TOK_VOID_DECL       shift, and go to state 10
    TOK_FOR_DECL        shift, and go to state 11
    TOK_WHILE_DECL      shift, and go to state 12
    TOK_DO_DECL         shift, and go to state 13
    TOK_ROM_CONST       shift, and go to state 14
    TOK_INT_CONST       shift, and go to state 15
    TOK_FLOAT_CONST     shift, and go to state 16
    TOK_PRINT           shift, and go to state 17
    TOK_READ            shift, and go to state 18
    TOK_BREAK           shift, and go to state 19
    TOK_CONTINUE        shift, and go to state 20
    TOK_GOTO            shift, and go to state 21
    TOK_RETURN          shift, and go to state 22
    TOK_STRUCT          shift, and go to state 23
    TOK_UNION           shift, and go to state 24
    TOK_SWITCH          shift, and go to state 25
    TOK_STRING_LITERAL  shift, and go to state 26

    $default  reduce using rule 1 (start)

    start                 go to state 27
    declaration_list      go to state 28
    stmnt_list            go to state 29
    expr_or_assignment    go to state 30
    expression_statement  go to state 31
    lexemes               go to state 32
    stmnt                 go to state 33
    declaration_block     go to state 34
    declaration_stmt      go to state 35
    struct_def            go to state 36
    struct_head           go to state 37
    struct_type           go to state 38
    print_stmt            go to state 39
    read_stmt             go to state 40
    if_stmt               go to state 41
    loop_decl             go to state 42
    for_decl              go to state 43
    while_decl            go to state 44
    do_while_decl         go to state 45
    type                  go to state 46
    type_name             go to state 47
    left_assign_expr      go to state 48
    assignment            go to state 49
    expr                  go to state 50
    struct_item           go to state 51
    identifier            go to state 52
    const                 go to state 53
    switch_stmt           go to state 54
    switch_head           go to state 55
    function_call         go to state 56
    function_def_head     go to state 57
    function_def          go to state 58


state 1

   33 stmnt: TOK_IDENTIFIER . TOK_DOUBLEDOT
  102 identifier: TOK_IDENTIFIER . array
  125 function_call: TOK_IDENTIFIER . declarator

    TOK_OPENPAR    shift, and go to state 59
    TOK_OPENSQ     shift, and go to state 60
    TOK_DOUBLEDOT  shift, and go to state 61

    $default  reduce using rule 97 (array)

    array       go to state 62
    declarator  go to state 63


state 2

   87 expr: TOK_B_NOT . expr

    TOK_IDENTIFIER      shift, and go to state 64
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_OPENPAR         shift, and go to state 6
    TOK_ROM_CONST       shift, and go to state 14
    TOK_INT_CONST       shift, and go to state 15
    TOK_FLOAT_CONST     shift, and go to state 16
    TOK_STRING_LITERAL  shift, and go to state 26

    left_assign_expr  go to state 65
    expr              go to state 66
    struct_item       go to state 51
    identifier        go to state 52
    const             go to state 53
    function_call     go to state 56


state 3

   88 expr: TOK_AR_MINUS . expr

    TOK_IDENTIFIER      shift, and go to state 64
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_OPENPAR         shift, and go to state 6
    TOK_ROM_CONST       shift, and go to state 14
    TOK_INT_CONST       shift, and go to state 15
    TOK_FLOAT_CONST     shift, and go to state 16
    TOK_STRING_LITERAL  shift, and go to state 26

    left_assign_expr  go to state 65
    expr              go to state 67
    struct_item       go to state 51
    identifier        go to state 52
    const             go to state 53
    function_call     go to state 56


state 4

   58 if_stmt: TOK_IF . TOK_OPENPAR expr TOK_CLOSEPAR instruction_body
   59        | TOK_IF . TOK_OPENPAR expr TOK_CLOSEPAR instruction_body TOK_ELSE instruction_body
   60        | TOK_IF . TOK_OPENPAR expr error

    TOK_OPENPAR  shift, and go to state 68


state 5

   23 expression_statement: TOK_ENDEXPR .

    $default  reduce using rule 23 (expression_statement)


state 6

   95 expr: TOK_OPENPAR . expr error
   96     | TOK_OPENPAR . expr TOK_CLOSEPAR

    TOK_IDENTIFIER      shift, and go to state 64
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_OPENPAR         shift, and go to state 6
    TOK_ROM_CONST       shift, and go to state 14
    TOK_INT_CONST       shift, and go to state 15
    TOK_FLOAT_CONST     shift, and go to state 16
    TOK_STRING_LITERAL  shift, and go to state 26

    left_assign_expr  go to state 65
    expr              go to state 69
    struct_item       go to state 51
    identifier        go to state 52
    const             go to state 53
    function_call     go to state 56


state 7

   73 type_name: TOK_ROM_DECL .

    $default  reduce using rule 73 (type_name)


state 8

   75 type_name: TOK_INT_DECL .

    $default  reduce using rule 75 (type_name)


state 9

   74 type_name: TOK_FLOAT_DECL .

    $default  reduce using rule 74 (type_name)


state 10

   76 type_name: TOK_VOID_DECL .

    $default  reduce using rule 76 (type_name)


state 11

   67 for_decl: TOK_FOR_DECL .

    $default  reduce using rule 67 (for_decl)


state 12

   68 while_decl: TOK_WHILE_DECL .

    $default  reduce using rule 68 (while_decl)


state 13

   69 do_while_decl: TOK_DO_DECL .

    $default  reduce using rule 69 (do_while_decl)


state 14

  104 const: TOK_ROM_CONST .

    $default  reduce using rule 104 (const)


state 15

  103 const: TOK_INT_CONST .

    $default  reduce using rule 103 (const)


state 16

  105 const: TOK_FLOAT_CONST .

    $default  reduce using rule 105 (const)


state 17

   53 print_stmt: TOK_PRINT . TOK_OPENPAR expr TOK_CLOSEPAR TOK_ENDEXPR
   54           | TOK_PRINT . error
   55           | TOK_PRINT . '(' expr error
   56           | TOK_PRINT . '(' expr ')' error

    error        shift, and go to state 70
    TOK_OPENPAR  shift, and go to state 71
    '('          shift, and go to state 72


state 18

   57 read_stmt: TOK_READ . TOK_OPENPAR left_assign_expr TOK_CLOSEPAR TOK_ENDEXPR

    TOK_OPENPAR  shift, and go to state 73


state 19

   27 lexemes: TOK_BREAK .

    $default  reduce using rule 27 (lexemes)


state 20

   28 lexemes: TOK_CONTINUE .

    $default  reduce using rule 28 (lexemes)


state 21

   26 lexemes: TOK_GOTO . TOK_IDENTIFIER

    TOK_IDENTIFIER  shift, and go to state 74


state 22

   29 lexemes: TOK_RETURN .
   30        | TOK_RETURN . expr

    TOK_IDENTIFIER      shift, and go to state 64
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_OPENPAR         shift, and go to state 6
    TOK_ROM_CONST       shift, and go to state 14
    TOK_INT_CONST       shift, and go to state 15
    TOK_FLOAT_CONST     shift, and go to state 16
    TOK_STRING_LITERAL  shift, and go to state 26

    $default  reduce using rule 29 (lexemes)

    left_assign_expr  go to state 65
    expr              go to state 75
    struct_item       go to state 51
    identifier        go to state 52
    const             go to state 53
    function_call     go to state 56


state 23

   49 struct_type: TOK_STRUCT .

    $default  reduce using rule 49 (struct_type)


state 24

   50 struct_type: TOK_UNION .

    $default  reduce using rule 50 (struct_type)


state 25

  109 switch_head: TOK_SWITCH . TOK_OPENPAR expr TOK_CLOSEPAR TOK_OPENBR

    TOK_OPENPAR  shift, and go to state 76


state 26

  106 const: TOK_STRING_LITERAL .

    $default  reduce using rule 106 (const)


state 27

    0 $accept: start . $end

    $end  shift, and go to state 77


state 28

    2 start: declaration_list . stmnt_list
    3      | declaration_list .
    7 declaration_list: declaration_list . declaration_block TOK_ENDEXPR

    TOK_IDENTIFIER      shift, and go to state 1
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_IF              shift, and go to state 4
    TOK_ENDEXPR         shift, and go to state 5
    TOK_OPENPAR         shift, and go to state 6
    TOK_ROM_DECL        shift, and go to state 7
    TOK_INT_DECL        shift, and go to state 8
    TOK_FLOAT_DECL      shift, and go to state 9
    TOK_VOID_DECL       shift, and go to state 10
    TOK_FOR_DECL        shift, and go to state 11
    TOK_WHILE_DECL      shift, and go to state 12
    TOK_DO_DECL         shift, and go to state 13
    TOK_ROM_CONST       shift, and go to state 14
    TOK_INT_CONST       shift, and go to state 15
    TOK_FLOAT_CONST     shift, and go to state 16
    TOK_PRINT           shift, and go to state 17
    TOK_READ            shift, and go to state 18
    TOK_BREAK           shift, and go to state 19
    TOK_CONTINUE        shift, and go to state 20
    TOK_GOTO            shift, and go to state 21
    TOK_RETURN          shift, and go to state 22
    TOK_STRUCT          shift, and go to state 23
    TOK_UNION           shift, and go to state 24
    TOK_SWITCH          shift, and go to state 25
    TOK_STRING_LITERAL  shift, and go to state 26

    $default  reduce using rule 3 (start)

    stmnt_list            go to state 78
    expr_or_assignment    go to state 30
    expression_statement  go to state 31
    lexemes               go to state 32
    stmnt                 go to state 33
    declaration_block     go to state 79
    declaration_stmt      go to state 35
    struct_def            go to state 36
    struct_head           go to state 37
    struct_type           go to state 38
    print_stmt            go to state 39
    read_stmt             go to state 40
    if_stmt               go to state 41
    loop_decl             go to state 42
    for_decl              go to state 43
    while_decl            go to state 44
    do_while_decl         go to state 45
    type                  go to state 46
    type_name             go to state 47
    left_assign_expr      go to state 48
    assignment            go to state 49
    expr                  go to state 50
    struct_item           go to state 51
    identifier            go to state 52
    const                 go to state 53
    switch_stmt           go to state 54
    switch_head           go to state 55
    function_call         go to state 56
    function_def_head     go to state 57
    function_def          go to state 58


state 29

    4 start: stmnt_list .
    5      | stmnt_list . declaration_list
   10 stmnt_list: stmnt_list . stmnt

    TOK_IDENTIFIER      shift, and go to state 1
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_IF              shift, and go to state 4
    TOK_ENDEXPR         shift, and go to state 5
    TOK_OPENPAR         shift, and go to state 6
    TOK_ROM_DECL        shift, and go to state 7
    TOK_INT_DECL        shift, and go to state 8
    TOK_FLOAT_DECL      shift, and go to state 9
    TOK_VOID_DECL       shift, and go to state 10
    TOK_FOR_DECL        shift, and go to state 11
    TOK_WHILE_DECL      shift, and go to state 12
    TOK_DO_DECL         shift, and go to state 13
    TOK_ROM_CONST       shift, and go to state 14
    TOK_INT_CONST       shift, and go to state 15
    TOK_FLOAT_CONST     shift, and go to state 16
    TOK_PRINT           shift, and go to state 17
    TOK_READ            shift, and go to state 18
    TOK_BREAK           shift, and go to state 19
    TOK_CONTINUE        shift, and go to state 20
    TOK_GOTO            shift, and go to state 21
    TOK_RETURN          shift, and go to state 22
    TOK_STRUCT          shift, and go to state 23
    TOK_UNION           shift, and go to state 24
    TOK_SWITCH          shift, and go to state 25
    TOK_STRING_LITERAL  shift, and go to state 26

    $default  reduce using rule 4 (start)

    declaration_list      go to state 80
    expr_or_assignment    go to state 30
    expression_statement  go to state 31
    lexemes               go to state 32
    stmnt                 go to state 81
    declaration_block     go to state 34
    declaration_stmt      go to state 35
    struct_def            go to state 36
    struct_head           go to state 37
    struct_type           go to state 38
    print_stmt            go to state 39
    read_stmt             go to state 40
    if_stmt               go to state 41
    loop_decl             go to state 42
    for_decl              go to state 43
    while_decl            go to state 44
    do_while_decl         go to state 45
    type                  go to state 46
    type_name             go to state 47
    left_assign_expr      go to state 48
    assignment            go to state 49
    expr                  go to state 50
    struct_item           go to state 51
    identifier            go to state 52
    const                 go to state 53
    switch_stmt           go to state 54
    switch_head           go to state 55
    function_call         go to state 56
    function_def_head     go to state 57
    function_def          go to state 58


state 30

   24 expression_statement: expr_or_assignment . TOK_ENDEXPR

    TOK_ENDEXPR  shift, and go to state 82


state 31

   32 stmnt: expression_statement .

    $default  reduce using rule 32 (stmnt)


state 32

   39 stmnt: lexemes . TOK_ENDEXPR
   40      | lexemes . error

    error        shift, and go to state 83
    TOK_ENDEXPR  shift, and go to state 84


state 33

    9 stmnt_list: stmnt .

    $default  reduce using rule 9 (stmnt_list)


state 34

    6 declaration_list: declaration_block . TOK_ENDEXPR
    8                 | declaration_block . error

    error        shift, and go to state 85
    TOK_ENDEXPR  shift, and go to state 86


state 35

   41 declaration_block: declaration_stmt .

    $default  reduce using rule 41 (declaration_block)


state 36

   42 declaration_block: struct_def .

    $default  reduce using rule 42 (declaration_block)


state 37

   44 struct_def: struct_head . struct_body struct_tail
   45           | struct_head . error
   46           | struct_head . struct_body error

    error       shift, and go to state 87
    TOK_OPENBR  shift, and go to state 88

    struct_body  go to state 89


state 38

   47 struct_head: struct_type . TOK_IDENTIFIER
   48            | struct_type . error
   77 type_name: struct_type . TOK_IDENTIFIER

    error           shift, and go to state 90
    TOK_IDENTIFIER  shift, and go to state 91


state 39

   37 stmnt: print_stmt .

    $default  reduce using rule 37 (stmnt)


state 40

   38 stmnt: read_stmt .

    $default  reduce using rule 38 (stmnt)


state 41

   34 stmnt: if_stmt .

    $default  reduce using rule 34 (stmnt)


state 42

   35 stmnt: loop_decl .

    $default  reduce using rule 35 (stmnt)


state 43

   61 loop_decl: for_decl . loop_for_expr instruction_body

    TOK_OPENPAR  shift, and go to state 92

    loop_for_expr  go to state 93


state 44

   62 loop_decl: while_decl . loop_while_expr instruction_body

    TOK_OPENPAR  shift, and go to state 94

    loop_while_expr  go to state 95


state 45

   63 loop_decl: do_while_decl . instruction_body TOK_WHILE_DECL loop_while_expr TOK_ENDEXPR

    TOK_IDENTIFIER      shift, and go to state 1
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_IF              shift, and go to state 4
    TOK_ENDEXPR         shift, and go to state 5
    TOK_OPENPAR         shift, and go to state 6
    TOK_OPENBR          shift, and go to state 96
    TOK_ROM_DECL        shift, and go to state 7
    TOK_INT_DECL        shift, and go to state 8
    TOK_FLOAT_DECL      shift, and go to state 9
    TOK_VOID_DECL       shift, and go to state 10
    TOK_FOR_DECL        shift, and go to state 11
    TOK_WHILE_DECL      shift, and go to state 12
    TOK_DO_DECL         shift, and go to state 13
    TOK_ROM_CONST       shift, and go to state 14
    TOK_INT_CONST       shift, and go to state 15
    TOK_FLOAT_CONST     shift, and go to state 16
    TOK_PRINT           shift, and go to state 17
    TOK_READ            shift, and go to state 18
    TOK_BREAK           shift, and go to state 19
    TOK_CONTINUE        shift, and go to state 20
    TOK_GOTO            shift, and go to state 21
    TOK_RETURN          shift, and go to state 22
    TOK_STRUCT          shift, and go to state 23
    TOK_UNION           shift, and go to state 24
    TOK_SWITCH          shift, and go to state 25
    TOK_STRING_LITERAL  shift, and go to state 26

    stmnt_block_start     go to state 97
    stmnt_block           go to state 98
    expr_or_assignment    go to state 30
    expression_statement  go to state 31
    lexemes               go to state 32
    stmnt                 go to state 99
    struct_type           go to state 100
    print_stmt            go to state 39
    read_stmt             go to state 40
    if_stmt               go to state 41
    loop_decl             go to state 42
    for_decl              go to state 43
    while_decl            go to state 44
    do_while_decl         go to state 45
    instruction_body      go to state 101
    type                  go to state 102
    type_name             go to state 47
    left_assign_expr      go to state 48
    assignment            go to state 49
    expr                  go to state 50
    struct_item           go to state 51
    identifier            go to state 52
    const                 go to state 53
    switch_stmt           go to state 54
    switch_head           go to state 55
    function_call         go to state 56
    function_def_head     go to state 57
    function_def          go to state 58


state 46

   43 declaration_stmt: type . TOK_IDENTIFIER
  126 function_def_head: type . TOK_IDENTIFIER

    TOK_IDENTIFIER  shift, and go to state 103


state 47

   72 type: type_name . array

    TOK_OPENSQ  shift, and go to state 60

    $default  reduce using rule 97 (array)

    array  go to state 104


state 48

   80 assignment: left_assign_expr . TOK_ASSIGN_OP expr
   81 expr: left_assign_expr .

    TOK_ASSIGN_OP  shift, and go to state 105

    $default  reduce using rule 81 (expr)


state 49

   22 expr_or_assignment: assignment .

    $default  reduce using rule 22 (expr_or_assignment)


state 50

   21 expr_or_assignment: expr .
   25 expression_statement: expr . error
   84 expr: expr . TOK_B_AND expr
   85     | expr . TOK_B_OR expr
   86     | expr . TOK_B_XOR expr
   89     | expr . TOK_AR_PLUS expr
   90     | expr . TOK_AR_MINUS expr
   91     | expr . TOK_AR_MUL expr
   92     | expr . TOK_AR_DIV expr
   93     | expr . TOK_AR_MOD expr
   94     | expr . TOK_COMP_OP expr

    error         shift, and go to state 106
    TOK_B_AND     shift, and go to state 107
    TOK_B_OR      shift, and go to state 108
    TOK_B_XOR     shift, and go to state 109
    TOK_AR_PLUS   shift, and go to state 110
    TOK_AR_MINUS  shift, and go to state 111
    TOK_AR_MUL    shift, and go to state 112
    TOK_AR_DIV    shift, and go to state 113
    TOK_AR_MOD    shift, and go to state 114
    TOK_COMP_OP   shift, and go to state 115

    TOK_ENDEXPR  reduce using rule 21 (expr_or_assignment)


state 51

   79 left_assign_expr: struct_item .

    $default  reduce using rule 79 (left_assign_expr)


state 52

   78 left_assign_expr: identifier .
  101 struct_item: identifier . TOK_DOT TOK_IDENTIFIER

    TOK_DOT  shift, and go to state 116

    $default  reduce using rule 78 (left_assign_expr)


state 53

   82 expr: const .

    $default  reduce using rule 82 (expr)


state 54

   36 stmnt: switch_stmt .

    $default  reduce using rule 36 (stmnt)


state 55

  107 switch_stmt: switch_head . case_list default TOK_CLOSEBR
  108            | switch_head . case_list TOK_CLOSEBR

    TOK_CASE  shift, and go to state 117

    case_list  go to state 118
    case_stmt  go to state 119
    case_head  go to state 120


state 56

   83 expr: function_call .

    $default  reduce using rule 83 (expr)


state 57

  128 function_def: function_def_head . func_declarator stmnt_block
  129             | function_def_head . func_declarator error

    TOK_OPENPAR  shift, and go to state 59

    declarator       go to state 121
    func_declarator  go to state 122


state 58

   31 stmnt: function_def .

    $default  reduce using rule 31 (stmnt)


state 59

  123 declarator: TOK_OPENPAR . parameter_type_list TOK_CLOSEPAR
  124           | TOK_OPENPAR . TOK_CLOSEPAR

    TOK_IDENTIFIER      shift, and go to state 64
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_OPENPAR         shift, and go to state 6
    TOK_CLOSEPAR        shift, and go to state 123
    TOK_ROM_DECL        shift, and go to state 7
    TOK_INT_DECL        shift, and go to state 8
    TOK_FLOAT_DECL      shift, and go to state 9
    TOK_VOID_DECL       shift, and go to state 10
    TOK_ROM_CONST       shift, and go to state 14
    TOK_INT_CONST       shift, and go to state 15
    TOK_FLOAT_CONST     shift, and go to state 16
    TOK_STRUCT          shift, and go to state 23
    TOK_UNION           shift, and go to state 24
    TOK_STRING_LITERAL  shift, and go to state 26

    declaration_stmt     go to state 124
    struct_type          go to state 100
    type                 go to state 125
    type_name            go to state 47
    left_assign_expr     go to state 65
    expr                 go to state 126
    struct_item          go to state 51
    identifier           go to state 52
    const                go to state 53
    parameter            go to state 127
    parameter_list       go to state 128
    parameter_type_list  go to state 129
    function_call        go to state 56


state 60

   98 array: TOK_OPENSQ . expr TOK_CLOSESQ array
   99      | TOK_OPENSQ . error
  100      | TOK_OPENSQ . expr error

    error               shift, and go to state 130
    TOK_IDENTIFIER      shift, and go to state 64
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_OPENPAR         shift, and go to state 6
    TOK_ROM_CONST       shift, and go to state 14
    TOK_INT_CONST       shift, and go to state 15
    TOK_FLOAT_CONST     shift, and go to state 16
    TOK_STRING_LITERAL  shift, and go to state 26

    left_assign_expr  go to state 65
    expr              go to state 131
    struct_item       go to state 51
    identifier        go to state 52
    const             go to state 53
    function_call     go to state 56


state 61

   33 stmnt: TOK_IDENTIFIER TOK_DOUBLEDOT .

    $default  reduce using rule 33 (stmnt)


state 62

  102 identifier: TOK_IDENTIFIER array .

    $default  reduce using rule 102 (identifier)


state 63

  125 function_call: TOK_IDENTIFIER declarator .

    $default  reduce using rule 125 (function_call)


state 64

  102 identifier: TOK_IDENTIFIER . array
  125 function_call: TOK_IDENTIFIER . declarator

    TOK_OPENPAR  shift, and go to state 59
    TOK_OPENSQ   shift, and go to state 60

    $default  reduce using rule 97 (array)

    array       go to state 62
    declarator  go to state 63


state 65

   81 expr: left_assign_expr .

    $default  reduce using rule 81 (expr)


state 66

   84 expr: expr . TOK_B_AND expr
   85     | expr . TOK_B_OR expr
   86     | expr . TOK_B_XOR expr
   87     | TOK_B_NOT expr .
   89     | expr . TOK_AR_PLUS expr
   90     | expr . TOK_AR_MINUS expr
   91     | expr . TOK_AR_MUL expr
   92     | expr . TOK_AR_DIV expr
   93     | expr . TOK_AR_MOD expr
   94     | expr . TOK_COMP_OP expr

    $default  reduce using rule 87 (expr)


state 67

   84 expr: expr . TOK_B_AND expr
   85     | expr . TOK_B_OR expr
   86     | expr . TOK_B_XOR expr
   88     | TOK_AR_MINUS expr .
   89     | expr . TOK_AR_PLUS expr
   90     | expr . TOK_AR_MINUS expr
   91     | expr . TOK_AR_MUL expr
   92     | expr . TOK_AR_DIV expr
   93     | expr . TOK_AR_MOD expr
   94     | expr . TOK_COMP_OP expr

    $default  reduce using rule 88 (expr)


state 68

   58 if_stmt: TOK_IF TOK_OPENPAR . expr TOK_CLOSEPAR instruction_body
   59        | TOK_IF TOK_OPENPAR . expr TOK_CLOSEPAR instruction_body TOK_ELSE instruction_body
   60        | TOK_IF TOK_OPENPAR . expr error

    TOK_IDENTIFIER      shift, and go to state 64
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_OPENPAR         shift, and go to state 6
    TOK_ROM_CONST       shift, and go to state 14
    TOK_INT_CONST       shift, and go to state 15
    TOK_FLOAT_CONST     shift, and go to state 16
    TOK_STRING_LITERAL  shift, and go to state 26

    left_assign_expr  go to state 65
    expr              go to state 132
    struct_item       go to state 51
    identifier        go to state 52
    const             go to state 53
    function_call     go to state 56


state 69

   84 expr: expr . TOK_B_AND expr
   85     | expr . TOK_B_OR expr
   86     | expr . TOK_B_XOR expr
   89     | expr . TOK_AR_PLUS expr
   90     | expr . TOK_AR_MINUS expr
   91     | expr . TOK_AR_MUL expr
   92     | expr . TOK_AR_DIV expr
   93     | expr . TOK_AR_MOD expr
   94     | expr . TOK_COMP_OP expr
   95     | TOK_OPENPAR expr . error
   96     | TOK_OPENPAR expr . TOK_CLOSEPAR

    error         shift, and go to state 133
    TOK_B_AND     shift, and go to state 107
    TOK_B_OR      shift, and go to state 108
    TOK_B_XOR     shift, and go to state 109
    TOK_AR_PLUS   shift, and go to state 110
    TOK_AR_MINUS  shift, and go to state 111
    TOK_AR_MUL    shift, and go to state 112
    TOK_AR_DIV    shift, and go to state 113
    TOK_AR_MOD    shift, and go to state 114
    TOK_COMP_OP   shift, and go to state 115
    TOK_CLOSEPAR  shift, and go to state 134


state 70

   54 print_stmt: TOK_PRINT error .

    $default  reduce using rule 54 (print_stmt)


state 71

   53 print_stmt: TOK_PRINT TOK_OPENPAR . expr TOK_CLOSEPAR TOK_ENDEXPR

    TOK_IDENTIFIER      shift, and go to state 64
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_OPENPAR         shift, and go to state 6
    TOK_ROM_CONST       shift, and go to state 14
    TOK_INT_CONST       shift, and go to state 15
    TOK_FLOAT_CONST     shift, and go to state 16
    TOK_STRING_LITERAL  shift, and go to state 26

    left_assign_expr  go to state 65
    expr              go to state 135
    struct_item       go to state 51
    identifier        go to state 52
    const             go to state 53
    function_call     go to state 56


state 72

   55 print_stmt: TOK_PRINT '(' . expr error
   56           | TOK_PRINT '(' . expr ')' error

    TOK_IDENTIFIER      shift, and go to state 64
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_OPENPAR         shift, and go to state 6
    TOK_ROM_CONST       shift, and go to state 14
    TOK_INT_CONST       shift, and go to state 15
    TOK_FLOAT_CONST     shift, and go to state 16
    TOK_STRING_LITERAL  shift, and go to state 26

    left_assign_expr  go to state 65
    expr              go to state 136
    struct_item       go to state 51
    identifier        go to state 52
    const             go to state 53
    function_call     go to state 56


state 73

   57 read_stmt: TOK_READ TOK_OPENPAR . left_assign_expr TOK_CLOSEPAR TOK_ENDEXPR

    TOK_IDENTIFIER  shift, and go to state 137

    left_assign_expr  go to state 138
    struct_item       go to state 51
    identifier        go to state 52


state 74

   26 lexemes: TOK_GOTO TOK_IDENTIFIER .

    $default  reduce using rule 26 (lexemes)


state 75

   30 lexemes: TOK_RETURN expr .
   84 expr: expr . TOK_B_AND expr
   85     | expr . TOK_B_OR expr
   86     | expr . TOK_B_XOR expr
   89     | expr . TOK_AR_PLUS expr
   90     | expr . TOK_AR_MINUS expr
   91     | expr . TOK_AR_MUL expr
   92     | expr . TOK_AR_DIV expr
   93     | expr . TOK_AR_MOD expr
   94     | expr . TOK_COMP_OP expr

    TOK_B_AND     shift, and go to state 107
    TOK_B_OR      shift, and go to state 108
    TOK_B_XOR     shift, and go to state 109
    TOK_AR_PLUS   shift, and go to state 110
    TOK_AR_MINUS  shift, and go to state 111
    TOK_AR_MUL    shift, and go to state 112
    TOK_AR_DIV    shift, and go to state 113
    TOK_AR_MOD    shift, and go to state 114
    TOK_COMP_OP   shift, and go to state 115

    $default  reduce using rule 30 (lexemes)


state 76

  109 switch_head: TOK_SWITCH TOK_OPENPAR . expr TOK_CLOSEPAR TOK_OPENBR

    TOK_IDENTIFIER      shift, and go to state 64
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_OPENPAR         shift, and go to state 6
    TOK_ROM_CONST       shift, and go to state 14
    TOK_INT_CONST       shift, and go to state 15
    TOK_FLOAT_CONST     shift, and go to state 16
    TOK_STRING_LITERAL  shift, and go to state 26

    left_assign_expr  go to state 65
    expr              go to state 139
    struct_item       go to state 51
    identifier        go to state 52
    const             go to state 53
    function_call     go to state 56


state 77

    0 $accept: start $end .

    $default  accept


state 78

    2 start: declaration_list stmnt_list .
   10 stmnt_list: stmnt_list . stmnt

    TOK_IDENTIFIER      shift, and go to state 1
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_IF              shift, and go to state 4
    TOK_ENDEXPR         shift, and go to state 5
    TOK_OPENPAR         shift, and go to state 6
    TOK_ROM_DECL        shift, and go to state 7
    TOK_INT_DECL        shift, and go to state 8
    TOK_FLOAT_DECL      shift, and go to state 9
    TOK_VOID_DECL       shift, and go to state 10
    TOK_FOR_DECL        shift, and go to state 11
    TOK_WHILE_DECL      shift, and go to state 12
    TOK_DO_DECL         shift, and go to state 13
    TOK_ROM_CONST       shift, and go to state 14
    TOK_INT_CONST       shift, and go to state 15
    TOK_FLOAT_CONST     shift, and go to state 16
    TOK_PRINT           shift, and go to state 17
    TOK_READ            shift, and go to state 18
    TOK_BREAK           shift, and go to state 19
    TOK_CONTINUE        shift, and go to state 20
    TOK_GOTO            shift, and go to state 21
    TOK_RETURN          shift, and go to state 22
    TOK_STRUCT          shift, and go to state 23
    TOK_UNION           shift, and go to state 24
    TOK_SWITCH          shift, and go to state 25
    TOK_STRING_LITERAL  shift, and go to state 26

    $default  reduce using rule 2 (start)

    expr_or_assignment    go to state 30
    expression_statement  go to state 31
    lexemes               go to state 32
    stmnt                 go to state 81
    struct_type           go to state 100
    print_stmt            go to state 39
    read_stmt             go to state 40
    if_stmt               go to state 41
    loop_decl             go to state 42
    for_decl              go to state 43
    while_decl            go to state 44
    do_while_decl         go to state 45
    type                  go to state 102
    type_name             go to state 47
    left_assign_expr      go to state 48
    assignment            go to state 49
    expr                  go to state 50
    struct_item           go to state 51
    identifier            go to state 52
    const                 go to state 53
    switch_stmt           go to state 54
    switch_head           go to state 55
    function_call         go to state 56
    function_def_head     go to state 57
    function_def          go to state 58


state 79

    7 declaration_list: declaration_list declaration_block . TOK_ENDEXPR

    TOK_ENDEXPR  shift, and go to state 140


state 80

    5 start: stmnt_list declaration_list .
    7 declaration_list: declaration_list . declaration_block TOK_ENDEXPR

    TOK_ROM_DECL    shift, and go to state 7
    TOK_INT_DECL    shift, and go to state 8
    TOK_FLOAT_DECL  shift, and go to state 9
    TOK_VOID_DECL   shift, and go to state 10
    TOK_STRUCT      shift, and go to state 23
    TOK_UNION       shift, and go to state 24

    $default  reduce using rule 5 (start)

    declaration_block  go to state 79
    declaration_stmt   go to state 35
    struct_def         go to state 36
    struct_head        go to state 37
    struct_type        go to state 38
    type               go to state 125
    type_name          go to state 47


state 81

   10 stmnt_list: stmnt_list stmnt .

    $default  reduce using rule 10 (stmnt_list)


state 82

   24 expression_statement: expr_or_assignment TOK_ENDEXPR .

    $default  reduce using rule 24 (expression_statement)


state 83

   40 stmnt: lexemes error .

    $default  reduce using rule 40 (stmnt)


state 84

   39 stmnt: lexemes TOK_ENDEXPR .

    $default  reduce using rule 39 (stmnt)


state 85

    8 declaration_list: declaration_block error .

    $default  reduce using rule 8 (declaration_list)


state 86

    6 declaration_list: declaration_block TOK_ENDEXPR .

    $default  reduce using rule 6 (declaration_list)


state 87

   45 struct_def: struct_head error .

    $default  reduce using rule 45 (struct_def)


state 88

   51 struct_body: TOK_OPENBR . declaration_list

    TOK_ROM_DECL    shift, and go to state 7
    TOK_INT_DECL    shift, and go to state 8
    TOK_FLOAT_DECL  shift, and go to state 9
    TOK_VOID_DECL   shift, and go to state 10
    TOK_STRUCT      shift, and go to state 23
    TOK_UNION       shift, and go to state 24

    declaration_list   go to state 141
    declaration_block  go to state 34
    declaration_stmt   go to state 35
    struct_def         go to state 36
    struct_head        go to state 37
    struct_type        go to state 38
    type               go to state 125
    type_name          go to state 47


state 89

   44 struct_def: struct_head struct_body . struct_tail
   46           | struct_head struct_body . error

    error        shift, and go to state 142
    TOK_CLOSEBR  shift, and go to state 143

    struct_tail  go to state 144


state 90

   48 struct_head: struct_type error .

    $default  reduce using rule 48 (struct_head)


state 91

   47 struct_head: struct_type TOK_IDENTIFIER .
   77 type_name: struct_type TOK_IDENTIFIER .

    TOK_IDENTIFIER  reduce using rule 77 (type_name)
    TOK_OPENSQ      reduce using rule 77 (type_name)
    $default        reduce using rule 47 (struct_head)


state 92

   65 loop_for_expr: TOK_OPENPAR . expression_statement expression_statement TOK_CLOSEPAR
   66              | TOK_OPENPAR . expression_statement expression_statement expr_or_assignment TOK_CLOSEPAR

    TOK_IDENTIFIER      shift, and go to state 64
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_ENDEXPR         shift, and go to state 5
    TOK_OPENPAR         shift, and go to state 6
    TOK_ROM_CONST       shift, and go to state 14
    TOK_INT_CONST       shift, and go to state 15
    TOK_FLOAT_CONST     shift, and go to state 16
    TOK_STRING_LITERAL  shift, and go to state 26

    expr_or_assignment    go to state 30
    expression_statement  go to state 145
    left_assign_expr      go to state 48
    assignment            go to state 49
    expr                  go to state 50
    struct_item           go to state 51
    identifier            go to state 52
    const                 go to state 53
    function_call         go to state 56


state 93

   61 loop_decl: for_decl loop_for_expr . instruction_body

    TOK_IDENTIFIER      shift, and go to state 1
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_IF              shift, and go to state 4
    TOK_ENDEXPR         shift, and go to state 5
    TOK_OPENPAR         shift, and go to state 6
    TOK_OPENBR          shift, and go to state 96
    TOK_ROM_DECL        shift, and go to state 7
    TOK_INT_DECL        shift, and go to state 8
    TOK_FLOAT_DECL      shift, and go to state 9
    TOK_VOID_DECL       shift, and go to state 10
    TOK_FOR_DECL        shift, and go to state 11
    TOK_WHILE_DECL      shift, and go to state 12
    TOK_DO_DECL         shift, and go to state 13
    TOK_ROM_CONST       shift, and go to state 14
    TOK_INT_CONST       shift, and go to state 15
    TOK_FLOAT_CONST     shift, and go to state 16
    TOK_PRINT           shift, and go to state 17
    TOK_READ            shift, and go to state 18
    TOK_BREAK           shift, and go to state 19
    TOK_CONTINUE        shift, and go to state 20
    TOK_GOTO            shift, and go to state 21
    TOK_RETURN          shift, and go to state 22
    TOK_STRUCT          shift, and go to state 23
    TOK_UNION           shift, and go to state 24
    TOK_SWITCH          shift, and go to state 25
    TOK_STRING_LITERAL  shift, and go to state 26

    stmnt_block_start     go to state 97
    stmnt_block           go to state 98
    expr_or_assignment    go to state 30
    expression_statement  go to state 31
    lexemes               go to state 32
    stmnt                 go to state 99
    struct_type           go to state 100
    print_stmt            go to state 39
    read_stmt             go to state 40
    if_stmt               go to state 41
    loop_decl             go to state 42
    for_decl              go to state 43
    while_decl            go to state 44
    do_while_decl         go to state 45
    instruction_body      go to state 146
    type                  go to state 102
    type_name             go to state 47
    left_assign_expr      go to state 48
    assignment            go to state 49
    expr                  go to state 50
    struct_item           go to state 51
    identifier            go to state 52
    const                 go to state 53
    switch_stmt           go to state 54
    switch_head           go to state 55
    function_call         go to state 56
    function_def_head     go to state 57
    function_def          go to state 58


state 94

   64 loop_while_expr: TOK_OPENPAR . expr TOK_CLOSEPAR

    TOK_IDENTIFIER      shift, and go to state 64
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_OPENPAR         shift, and go to state 6
    TOK_ROM_CONST       shift, and go to state 14
    TOK_INT_CONST       shift, and go to state 15
    TOK_FLOAT_CONST     shift, and go to state 16
    TOK_STRING_LITERAL  shift, and go to state 26

    left_assign_expr  go to state 65
    expr              go to state 147
    struct_item       go to state 51
    identifier        go to state 52
    const             go to state 53
    function_call     go to state 56


state 95

   62 loop_decl: while_decl loop_while_expr . instruction_body

    TOK_IDENTIFIER      shift, and go to state 1
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_IF              shift, and go to state 4
    TOK_ENDEXPR         shift, and go to state 5
    TOK_OPENPAR         shift, and go to state 6
    TOK_OPENBR          shift, and go to state 96
    TOK_ROM_DECL        shift, and go to state 7
    TOK_INT_DECL        shift, and go to state 8
    TOK_FLOAT_DECL      shift, and go to state 9
    TOK_VOID_DECL       shift, and go to state 10
    TOK_FOR_DECL        shift, and go to state 11
    TOK_WHILE_DECL      shift, and go to state 12
    TOK_DO_DECL         shift, and go to state 13
    TOK_ROM_CONST       shift, and go to state 14
    TOK_INT_CONST       shift, and go to state 15
    TOK_FLOAT_CONST     shift, and go to state 16
    TOK_PRINT           shift, and go to state 17
    TOK_READ            shift, and go to state 18
    TOK_BREAK           shift, and go to state 19
    TOK_CONTINUE        shift, and go to state 20
    TOK_GOTO            shift, and go to state 21
    TOK_RETURN          shift, and go to state 22
    TOK_STRUCT          shift, and go to state 23
    TOK_UNION           shift, and go to state 24
    TOK_SWITCH          shift, and go to state 25
    TOK_STRING_LITERAL  shift, and go to state 26

    stmnt_block_start     go to state 97
    stmnt_block           go to state 98
    expr_or_assignment    go to state 30
    expression_statement  go to state 31
    lexemes               go to state 32
    stmnt                 go to state 99
    struct_type           go to state 100
    print_stmt            go to state 39
    read_stmt             go to state 40
    if_stmt               go to state 41
    loop_decl             go to state 42
    for_decl              go to state 43
    while_decl            go to state 44
    do_while_decl         go to state 45
    instruction_body      go to state 148
    type                  go to state 102
    type_name             go to state 47
    left_assign_expr      go to state 48
    assignment            go to state 49
    expr                  go to state 50
    struct_item           go to state 51
    identifier            go to state 52
    const                 go to state 53
    switch_stmt           go to state 54
    switch_head           go to state 55
    function_call         go to state 56
    function_def_head     go to state 57
    function_def          go to state 58


state 96

   12 stmnt_block_start: TOK_OPENBR . $@1

    $default  reduce using rule 11 ($@1)

    $@1  go to state 149


state 97

   14 stmnt_block: stmnt_block_start . stmnt_list TOK_CLOSEBR $@2
   15            | stmnt_block_start . stmnt_list error
   17            | stmnt_block_start . declaration_list TOK_CLOSEBR $@3
   19            | stmnt_block_start . declaration_list stmnt_list TOK_CLOSEBR $@4
   20            | stmnt_block_start . declaration_list stmnt_list error

    TOK_IDENTIFIER      shift, and go to state 1
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_IF              shift, and go to state 4
    TOK_ENDEXPR         shift, and go to state 5
    TOK_OPENPAR         shift, and go to state 6
    TOK_ROM_DECL        shift, and go to state 7
    TOK_INT_DECL        shift, and go to state 8
    TOK_FLOAT_DECL      shift, and go to state 9
    TOK_VOID_DECL       shift, and go to state 10
    TOK_FOR_DECL        shift, and go to state 11
    TOK_WHILE_DECL      shift, and go to state 12
    TOK_DO_DECL         shift, and go to state 13
    TOK_ROM_CONST       shift, and go to state 14
    TOK_INT_CONST       shift, and go to state 15
    TOK_FLOAT_CONST     shift, and go to state 16
    TOK_PRINT           shift, and go to state 17
    TOK_READ            shift, and go to state 18
    TOK_BREAK           shift, and go to state 19
    TOK_CONTINUE        shift, and go to state 20
    TOK_GOTO            shift, and go to state 21
    TOK_RETURN          shift, and go to state 22
    TOK_STRUCT          shift, and go to state 23
    TOK_UNION           shift, and go to state 24
    TOK_SWITCH          shift, and go to state 25
    TOK_STRING_LITERAL  shift, and go to state 26

    declaration_list      go to state 150
    stmnt_list            go to state 151
    expr_or_assignment    go to state 30
    expression_statement  go to state 31
    lexemes               go to state 32
    stmnt                 go to state 33
    declaration_block     go to state 34
    declaration_stmt      go to state 35
    struct_def            go to state 36
    struct_head           go to state 37
    struct_type           go to state 38
    print_stmt            go to state 39
    read_stmt             go to state 40
    if_stmt               go to state 41
    loop_decl             go to state 42
    for_decl              go to state 43
    while_decl            go to state 44
    do_while_decl         go to state 45
    type                  go to state 46
    type_name             go to state 47
    left_assign_expr      go to state 48
    assignment            go to state 49
    expr                  go to state 50
    struct_item           go to state 51
    identifier            go to state 52
    const                 go to state 53
    switch_stmt           go to state 54
    switch_head           go to state 55
    function_call         go to state 56
    function_def_head     go to state 57
    function_def          go to state 58


state 98

   70 instruction_body: stmnt_block .

    $default  reduce using rule 70 (instruction_body)


state 99

   71 instruction_body: stmnt .

    $default  reduce using rule 71 (instruction_body)


state 100

   77 type_name: struct_type . TOK_IDENTIFIER

    TOK_IDENTIFIER  shift, and go to state 152


state 101

   63 loop_decl: do_while_decl instruction_body . TOK_WHILE_DECL loop_while_expr TOK_ENDEXPR

    TOK_WHILE_DECL  shift, and go to state 153


state 102

  126 function_def_head: type . TOK_IDENTIFIER

    TOK_IDENTIFIER  shift, and go to state 154


state 103

   43 declaration_stmt: type TOK_IDENTIFIER .
  126 function_def_head: type TOK_IDENTIFIER .

    TOK_OPENPAR  reduce using rule 126 (function_def_head)
    $default     reduce using rule 43 (declaration_stmt)


state 104

   72 type: type_name array .

    $default  reduce using rule 72 (type)


state 105

   80 assignment: left_assign_expr TOK_ASSIGN_OP . expr

    TOK_IDENTIFIER      shift, and go to state 64
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_OPENPAR         shift, and go to state 6
    TOK_ROM_CONST       shift, and go to state 14
    TOK_INT_CONST       shift, and go to state 15
    TOK_FLOAT_CONST     shift, and go to state 16
    TOK_STRING_LITERAL  shift, and go to state 26

    left_assign_expr  go to state 65
    expr              go to state 155
    struct_item       go to state 51
    identifier        go to state 52
    const             go to state 53
    function_call     go to state 56


state 106

   25 expression_statement: expr error .

    $default  reduce using rule 25 (expression_statement)


state 107

   84 expr: expr TOK_B_AND . expr

    TOK_IDENTIFIER      shift, and go to state 64
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_OPENPAR         shift, and go to state 6
    TOK_ROM_CONST       shift, and go to state 14
    TOK_INT_CONST       shift, and go to state 15
    TOK_FLOAT_CONST     shift, and go to state 16
    TOK_STRING_LITERAL  shift, and go to state 26

    left_assign_expr  go to state 65
    expr              go to state 156
    struct_item       go to state 51
    identifier        go to state 52
    const             go to state 53
    function_call     go to state 56


state 108

   85 expr: expr TOK_B_OR . expr

    TOK_IDENTIFIER      shift, and go to state 64
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_OPENPAR         shift, and go to state 6
    TOK_ROM_CONST       shift, and go to state 14
    TOK_INT_CONST       shift, and go to state 15
    TOK_FLOAT_CONST     shift, and go to state 16
    TOK_STRING_LITERAL  shift, and go to state 26

    left_assign_expr  go to state 65
    expr              go to state 157
    struct_item       go to state 51
    identifier        go to state 52
    const             go to state 53
    function_call     go to state 56


state 109

   86 expr: expr TOK_B_XOR . expr

    TOK_IDENTIFIER      shift, and go to state 64
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_OPENPAR         shift, and go to state 6
    TOK_ROM_CONST       shift, and go to state 14
    TOK_INT_CONST       shift, and go to state 15
    TOK_FLOAT_CONST     shift, and go to state 16
    TOK_STRING_LITERAL  shift, and go to state 26

    left_assign_expr  go to state 65
    expr              go to state 158
    struct_item       go to state 51
    identifier        go to state 52
    const             go to state 53
    function_call     go to state 56


state 110

   89 expr: expr TOK_AR_PLUS . expr

    TOK_IDENTIFIER      shift, and go to state 64
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_OPENPAR         shift, and go to state 6
    TOK_ROM_CONST       shift, and go to state 14
    TOK_INT_CONST       shift, and go to state 15
    TOK_FLOAT_CONST     shift, and go to state 16
    TOK_STRING_LITERAL  shift, and go to state 26

    left_assign_expr  go to state 65
    expr              go to state 159
    struct_item       go to state 51
    identifier        go to state 52
    const             go to state 53
    function_call     go to state 56


state 111

   90 expr: expr TOK_AR_MINUS . expr

    TOK_IDENTIFIER      shift, and go to state 64
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_OPENPAR         shift, and go to state 6
    TOK_ROM_CONST       shift, and go to state 14
    TOK_INT_CONST       shift, and go to state 15
    TOK_FLOAT_CONST     shift, and go to state 16
    TOK_STRING_LITERAL  shift, and go to state 26

    left_assign_expr  go to state 65
    expr              go to state 160
    struct_item       go to state 51
    identifier        go to state 52
    const             go to state 53
    function_call     go to state 56


state 112

   91 expr: expr TOK_AR_MUL . expr

    TOK_IDENTIFIER      shift, and go to state 64
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_OPENPAR         shift, and go to state 6
    TOK_ROM_CONST       shift, and go to state 14
    TOK_INT_CONST       shift, and go to state 15
    TOK_FLOAT_CONST     shift, and go to state 16
    TOK_STRING_LITERAL  shift, and go to state 26

    left_assign_expr  go to state 65
    expr              go to state 161
    struct_item       go to state 51
    identifier        go to state 52
    const             go to state 53
    function_call     go to state 56


state 113

   92 expr: expr TOK_AR_DIV . expr

    TOK_IDENTIFIER      shift, and go to state 64
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_OPENPAR         shift, and go to state 6
    TOK_ROM_CONST       shift, and go to state 14
    TOK_INT_CONST       shift, and go to state 15
    TOK_FLOAT_CONST     shift, and go to state 16
    TOK_STRING_LITERAL  shift, and go to state 26

    left_assign_expr  go to state 65
    expr              go to state 162
    struct_item       go to state 51
    identifier        go to state 52
    const             go to state 53
    function_call     go to state 56


state 114

   93 expr: expr TOK_AR_MOD . expr

    TOK_IDENTIFIER      shift, and go to state 64
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_OPENPAR         shift, and go to state 6
    TOK_ROM_CONST       shift, and go to state 14
    TOK_INT_CONST       shift, and go to state 15
    TOK_FLOAT_CONST     shift, and go to state 16
    TOK_STRING_LITERAL  shift, and go to state 26

    left_assign_expr  go to state 65
    expr              go to state 163
    struct_item       go to state 51
    identifier        go to state 52
    const             go to state 53
    function_call     go to state 56


state 115

   94 expr: expr TOK_COMP_OP . expr

    TOK_IDENTIFIER      shift, and go to state 64
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_OPENPAR         shift, and go to state 6
    TOK_ROM_CONST       shift, and go to state 14
    TOK_INT_CONST       shift, and go to state 15
    TOK_FLOAT_CONST     shift, and go to state 16
    TOK_STRING_LITERAL  shift, and go to state 26

    left_assign_expr  go to state 65
    expr              go to state 164
    struct_item       go to state 51
    identifier        go to state 52
    const             go to state 53
    function_call     go to state 56


state 116

  101 struct_item: identifier TOK_DOT . TOK_IDENTIFIER

    TOK_IDENTIFIER  shift, and go to state 165


state 117

  113 case_head: TOK_CASE . expr TOK_DOUBLEDOT

    TOK_IDENTIFIER      shift, and go to state 64
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_OPENPAR         shift, and go to state 6
    TOK_ROM_CONST       shift, and go to state 14
    TOK_INT_CONST       shift, and go to state 15
    TOK_FLOAT_CONST     shift, and go to state 16
    TOK_STRING_LITERAL  shift, and go to state 26

    left_assign_expr  go to state 65
    expr              go to state 166
    struct_item       go to state 51
    identifier        go to state 52
    const             go to state 53
    function_call     go to state 56


state 118

  107 switch_stmt: switch_head case_list . default TOK_CLOSEBR
  108            | switch_head case_list . TOK_CLOSEBR

    TOK_CLOSEBR  shift, and go to state 167
    TOK_DEFAULT  shift, and go to state 168

    default       go to state 169
    default_head  go to state 170


state 119

  110 case_list: case_stmt .
  111          | case_stmt . case_list

    TOK_CASE  shift, and go to state 117

    $default  reduce using rule 110 (case_list)

    case_list  go to state 171
    case_stmt  go to state 119
    case_head  go to state 120


state 120

  112 case_stmt: case_head . case_body

    TOK_IDENTIFIER      shift, and go to state 1
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_IF              shift, and go to state 4
    TOK_ENDEXPR         shift, and go to state 5
    TOK_OPENPAR         shift, and go to state 6
    TOK_OPENBR          shift, and go to state 96
    TOK_ROM_DECL        shift, and go to state 7
    TOK_INT_DECL        shift, and go to state 8
    TOK_FLOAT_DECL      shift, and go to state 9
    TOK_VOID_DECL       shift, and go to state 10
    TOK_FOR_DECL        shift, and go to state 11
    TOK_WHILE_DECL      shift, and go to state 12
    TOK_DO_DECL         shift, and go to state 13
    TOK_ROM_CONST       shift, and go to state 14
    TOK_INT_CONST       shift, and go to state 15
    TOK_FLOAT_CONST     shift, and go to state 16
    TOK_PRINT           shift, and go to state 17
    TOK_READ            shift, and go to state 18
    TOK_BREAK           shift, and go to state 19
    TOK_CONTINUE        shift, and go to state 20
    TOK_GOTO            shift, and go to state 21
    TOK_RETURN          shift, and go to state 22
    TOK_STRUCT          shift, and go to state 23
    TOK_UNION           shift, and go to state 24
    TOK_SWITCH          shift, and go to state 25
    TOK_CASE            shift, and go to state 117
    TOK_STRING_LITERAL  shift, and go to state 26

    stmnt_block_start     go to state 97
    stmnt_block           go to state 98
    expr_or_assignment    go to state 30
    expression_statement  go to state 31
    lexemes               go to state 32
    stmnt                 go to state 99
    struct_type           go to state 100
    print_stmt            go to state 39
    read_stmt             go to state 40
    if_stmt               go to state 41
    loop_decl             go to state 42
    for_decl              go to state 43
    while_decl            go to state 44
    do_while_decl         go to state 45
    instruction_body      go to state 172
    type                  go to state 102
    type_name             go to state 47
    left_assign_expr      go to state 48
    assignment            go to state 49
    expr                  go to state 50
    struct_item           go to state 51
    identifier            go to state 52
    const                 go to state 53
    switch_stmt           go to state 54
    switch_head           go to state 55
    case_stmt             go to state 173
    case_head             go to state 120
    case_body             go to state 174
    function_call         go to state 56
    function_def_head     go to state 57
    function_def          go to state 58


state 121

  127 func_declarator: declarator .

    $default  reduce using rule 127 (func_declarator)


state 122

  128 function_def: function_def_head func_declarator . stmnt_block
  129             | function_def_head func_declarator . error

    error       shift, and go to state 175
    TOK_OPENBR  shift, and go to state 96

    stmnt_block_start  go to state 97
    stmnt_block        go to state 176


state 123

  124 declarator: TOK_OPENPAR TOK_CLOSEPAR .

    $default  reduce using rule 124 (declarator)


state 124

  118 parameter: declaration_stmt .

    $default  reduce using rule 118 (parameter)


state 125

   43 declaration_stmt: type . TOK_IDENTIFIER

    TOK_IDENTIFIER  shift, and go to state 177


state 126

   84 expr: expr . TOK_B_AND expr
   85     | expr . TOK_B_OR expr
   86     | expr . TOK_B_XOR expr
   89     | expr . TOK_AR_PLUS expr
   90     | expr . TOK_AR_MINUS expr
   91     | expr . TOK_AR_MUL expr
   92     | expr . TOK_AR_DIV expr
   93     | expr . TOK_AR_MOD expr
   94     | expr . TOK_COMP_OP expr
  119 parameter: expr .

    TOK_B_AND     shift, and go to state 107
    TOK_B_OR      shift, and go to state 108
    TOK_B_XOR     shift, and go to state 109
    TOK_AR_PLUS   shift, and go to state 110
    TOK_AR_MINUS  shift, and go to state 111
    TOK_AR_MUL    shift, and go to state 112
    TOK_AR_DIV    shift, and go to state 113
    TOK_AR_MOD    shift, and go to state 114
    TOK_COMP_OP   shift, and go to state 115

    $default  reduce using rule 119 (parameter)


state 127

  120 parameter_list: parameter .

    $default  reduce using rule 120 (parameter_list)


state 128

  121 parameter_list: parameter_list . TOK_COMMA parameter
  122 parameter_type_list: parameter_list .

    TOK_COMMA  shift, and go to state 178

    $default  reduce using rule 122 (parameter_type_list)


state 129

  123 declarator: TOK_OPENPAR parameter_type_list . TOK_CLOSEPAR

    TOK_CLOSEPAR  shift, and go to state 179


state 130

   99 array: TOK_OPENSQ error .

    $default  reduce using rule 99 (array)


state 131

   84 expr: expr . TOK_B_AND expr
   85     | expr . TOK_B_OR expr
   86     | expr . TOK_B_XOR expr
   89     | expr . TOK_AR_PLUS expr
   90     | expr . TOK_AR_MINUS expr
   91     | expr . TOK_AR_MUL expr
   92     | expr . TOK_AR_DIV expr
   93     | expr . TOK_AR_MOD expr
   94     | expr . TOK_COMP_OP expr
   98 array: TOK_OPENSQ expr . TOK_CLOSESQ array
  100      | TOK_OPENSQ expr . error

    error         shift, and go to state 180
    TOK_B_AND     shift, and go to state 107
    TOK_B_OR      shift, and go to state 108
    TOK_B_XOR     shift, and go to state 109
    TOK_AR_PLUS   shift, and go to state 110
    TOK_AR_MINUS  shift, and go to state 111
    TOK_AR_MUL    shift, and go to state 112
    TOK_AR_DIV    shift, and go to state 113
    TOK_AR_MOD    shift, and go to state 114
    TOK_COMP_OP   shift, and go to state 115
    TOK_CLOSESQ   shift, and go to state 181


state 132

   58 if_stmt: TOK_IF TOK_OPENPAR expr . TOK_CLOSEPAR instruction_body
   59        | TOK_IF TOK_OPENPAR expr . TOK_CLOSEPAR instruction_body TOK_ELSE instruction_body
   60        | TOK_IF TOK_OPENPAR expr . error
   84 expr: expr . TOK_B_AND expr
   85     | expr . TOK_B_OR expr
   86     | expr . TOK_B_XOR expr
   89     | expr . TOK_AR_PLUS expr
   90     | expr . TOK_AR_MINUS expr
   91     | expr . TOK_AR_MUL expr
   92     | expr . TOK_AR_DIV expr
   93     | expr . TOK_AR_MOD expr
   94     | expr . TOK_COMP_OP expr

    error         shift, and go to state 182
    TOK_B_AND     shift, and go to state 107
    TOK_B_OR      shift, and go to state 108
    TOK_B_XOR     shift, and go to state 109
    TOK_AR_PLUS   shift, and go to state 110
    TOK_AR_MINUS  shift, and go to state 111
    TOK_AR_MUL    shift, and go to state 112
    TOK_AR_DIV    shift, and go to state 113
    TOK_AR_MOD    shift, and go to state 114
    TOK_COMP_OP   shift, and go to state 115
    TOK_CLOSEPAR  shift, and go to state 183


state 133

   95 expr: TOK_OPENPAR expr error .

    $default  reduce using rule 95 (expr)


state 134

   96 expr: TOK_OPENPAR expr TOK_CLOSEPAR .

    $default  reduce using rule 96 (expr)


state 135

   53 print_stmt: TOK_PRINT TOK_OPENPAR expr . TOK_CLOSEPAR TOK_ENDEXPR
   84 expr: expr . TOK_B_AND expr
   85     | expr . TOK_B_OR expr
   86     | expr . TOK_B_XOR expr
   89     | expr . TOK_AR_PLUS expr
   90     | expr . TOK_AR_MINUS expr
   91     | expr . TOK_AR_MUL expr
   92     | expr . TOK_AR_DIV expr
   93     | expr . TOK_AR_MOD expr
   94     | expr . TOK_COMP_OP expr

    TOK_B_AND     shift, and go to state 107
    TOK_B_OR      shift, and go to state 108
    TOK_B_XOR     shift, and go to state 109
    TOK_AR_PLUS   shift, and go to state 110
    TOK_AR_MINUS  shift, and go to state 111
    TOK_AR_MUL    shift, and go to state 112
    TOK_AR_DIV    shift, and go to state 113
    TOK_AR_MOD    shift, and go to state 114
    TOK_COMP_OP   shift, and go to state 115
    TOK_CLOSEPAR  shift, and go to state 184


state 136

   55 print_stmt: TOK_PRINT '(' expr . error
   56           | TOK_PRINT '(' expr . ')' error
   84 expr: expr . TOK_B_AND expr
   85     | expr . TOK_B_OR expr
   86     | expr . TOK_B_XOR expr
   89     | expr . TOK_AR_PLUS expr
   90     | expr . TOK_AR_MINUS expr
   91     | expr . TOK_AR_MUL expr
   92     | expr . TOK_AR_DIV expr
   93     | expr . TOK_AR_MOD expr
   94     | expr . TOK_COMP_OP expr

    error         shift, and go to state 185
    TOK_B_AND     shift, and go to state 107
    TOK_B_OR      shift, and go to state 108
    TOK_B_XOR     shift, and go to state 109
    TOK_AR_PLUS   shift, and go to state 110
    TOK_AR_MINUS  shift, and go to state 111
    TOK_AR_MUL    shift, and go to state 112
    TOK_AR_DIV    shift, and go to state 113
    TOK_AR_MOD    shift, and go to state 114
    TOK_COMP_OP   shift, and go to state 115
    ')'           shift, and go to state 186


state 137

  102 identifier: TOK_IDENTIFIER . array

    TOK_OPENSQ  shift, and go to state 60

    $default  reduce using rule 97 (array)

    array  go to state 62


state 138

   57 read_stmt: TOK_READ TOK_OPENPAR left_assign_expr . TOK_CLOSEPAR TOK_ENDEXPR

    TOK_CLOSEPAR  shift, and go to state 187


state 139

   84 expr: expr . TOK_B_AND expr
   85     | expr . TOK_B_OR expr
   86     | expr . TOK_B_XOR expr
   89     | expr . TOK_AR_PLUS expr
   90     | expr . TOK_AR_MINUS expr
   91     | expr . TOK_AR_MUL expr
   92     | expr . TOK_AR_DIV expr
   93     | expr . TOK_AR_MOD expr
   94     | expr . TOK_COMP_OP expr
  109 switch_head: TOK_SWITCH TOK_OPENPAR expr . TOK_CLOSEPAR TOK_OPENBR

    TOK_B_AND     shift, and go to state 107
    TOK_B_OR      shift, and go to state 108
    TOK_B_XOR     shift, and go to state 109
    TOK_AR_PLUS   shift, and go to state 110
    TOK_AR_MINUS  shift, and go to state 111
    TOK_AR_MUL    shift, and go to state 112
    TOK_AR_DIV    shift, and go to state 113
    TOK_AR_MOD    shift, and go to state 114
    TOK_COMP_OP   shift, and go to state 115
    TOK_CLOSEPAR  shift, and go to state 188


state 140

    7 declaration_list: declaration_list declaration_block TOK_ENDEXPR .

    $default  reduce using rule 7 (declaration_list)


state 141

    7 declaration_list: declaration_list . declaration_block TOK_ENDEXPR
   51 struct_body: TOK_OPENBR declaration_list .

    TOK_ROM_DECL    shift, and go to state 7
    TOK_INT_DECL    shift, and go to state 8
    TOK_FLOAT_DECL  shift, and go to state 9
    TOK_VOID_DECL   shift, and go to state 10
    TOK_STRUCT      shift, and go to state 23
    TOK_UNION       shift, and go to state 24

    $default  reduce using rule 51 (struct_body)

    declaration_block  go to state 79
    declaration_stmt   go to state 35
    struct_def         go to state 36
    struct_head        go to state 37
    struct_type        go to state 38
    type               go to state 125
    type_name          go to state 47


state 142

   46 struct_def: struct_head struct_body error .

    $default  reduce using rule 46 (struct_def)


state 143

   52 struct_tail: TOK_CLOSEBR .

    $default  reduce using rule 52 (struct_tail)


state 144

   44 struct_def: struct_head struct_body struct_tail .

    $default  reduce using rule 44 (struct_def)


state 145

   65 loop_for_expr: TOK_OPENPAR expression_statement . expression_statement TOK_CLOSEPAR
   66              | TOK_OPENPAR expression_statement . expression_statement expr_or_assignment TOK_CLOSEPAR

    TOK_IDENTIFIER      shift, and go to state 64
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_ENDEXPR         shift, and go to state 5
    TOK_OPENPAR         shift, and go to state 6
    TOK_ROM_CONST       shift, and go to state 14
    TOK_INT_CONST       shift, and go to state 15
    TOK_FLOAT_CONST     shift, and go to state 16
    TOK_STRING_LITERAL  shift, and go to state 26

    expr_or_assignment    go to state 30
    expression_statement  go to state 189
    left_assign_expr      go to state 48
    assignment            go to state 49
    expr                  go to state 50
    struct_item           go to state 51
    identifier            go to state 52
    const                 go to state 53
    function_call         go to state 56


state 146

   61 loop_decl: for_decl loop_for_expr instruction_body .

    $default  reduce using rule 61 (loop_decl)


state 147

   64 loop_while_expr: TOK_OPENPAR expr . TOK_CLOSEPAR
   84 expr: expr . TOK_B_AND expr
   85     | expr . TOK_B_OR expr
   86     | expr . TOK_B_XOR expr
   89     | expr . TOK_AR_PLUS expr
   90     | expr . TOK_AR_MINUS expr
   91     | expr . TOK_AR_MUL expr
   92     | expr . TOK_AR_DIV expr
   93     | expr . TOK_AR_MOD expr
   94     | expr . TOK_COMP_OP expr

    TOK_B_AND     shift, and go to state 107
    TOK_B_OR      shift, and go to state 108
    TOK_B_XOR     shift, and go to state 109
    TOK_AR_PLUS   shift, and go to state 110
    TOK_AR_MINUS  shift, and go to state 111
    TOK_AR_MUL    shift, and go to state 112
    TOK_AR_DIV    shift, and go to state 113
    TOK_AR_MOD    shift, and go to state 114
    TOK_COMP_OP   shift, and go to state 115
    TOK_CLOSEPAR  shift, and go to state 190


state 148

   62 loop_decl: while_decl loop_while_expr instruction_body .

    $default  reduce using rule 62 (loop_decl)


state 149

   12 stmnt_block_start: TOK_OPENBR $@1 .

    $default  reduce using rule 12 (stmnt_block_start)


state 150

    7 declaration_list: declaration_list . declaration_block TOK_ENDEXPR
   17 stmnt_block: stmnt_block_start declaration_list . TOK_CLOSEBR $@3
   19            | stmnt_block_start declaration_list . stmnt_list TOK_CLOSEBR $@4
   20            | stmnt_block_start declaration_list . stmnt_list error

    TOK_IDENTIFIER      shift, and go to state 1
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_IF              shift, and go to state 4
    TOK_ENDEXPR         shift, and go to state 5
    TOK_OPENPAR         shift, and go to state 6
    TOK_CLOSEBR         shift, and go to state 191
    TOK_ROM_DECL        shift, and go to state 7
    TOK_INT_DECL        shift, and go to state 8
    TOK_FLOAT_DECL      shift, and go to state 9
    TOK_VOID_DECL       shift, and go to state 10
    TOK_FOR_DECL        shift, and go to state 11
    TOK_WHILE_DECL      shift, and go to state 12
    TOK_DO_DECL         shift, and go to state 13
    TOK_ROM_CONST       shift, and go to state 14
    TOK_INT_CONST       shift, and go to state 15
    TOK_FLOAT_CONST     shift, and go to state 16
    TOK_PRINT           shift, and go to state 17
    TOK_READ            shift, and go to state 18
    TOK_BREAK           shift, and go to state 19
    TOK_CONTINUE        shift, and go to state 20
    TOK_GOTO            shift, and go to state 21
    TOK_RETURN          shift, and go to state 22
    TOK_STRUCT          shift, and go to state 23
    TOK_UNION           shift, and go to state 24
    TOK_SWITCH          shift, and go to state 25
    TOK_STRING_LITERAL  shift, and go to state 26

    stmnt_list            go to state 192
    expr_or_assignment    go to state 30
    expression_statement  go to state 31
    lexemes               go to state 32
    stmnt                 go to state 33
    declaration_block     go to state 79
    declaration_stmt      go to state 35
    struct_def            go to state 36
    struct_head           go to state 37
    struct_type           go to state 38
    print_stmt            go to state 39
    read_stmt             go to state 40
    if_stmt               go to state 41
    loop_decl             go to state 42
    for_decl              go to state 43
    while_decl            go to state 44
    do_while_decl         go to state 45
    type                  go to state 46
    type_name             go to state 47
    left_assign_expr      go to state 48
    assignment            go to state 49
    expr                  go to state 50
    struct_item           go to state 51
    identifier            go to state 52
    const                 go to state 53
    switch_stmt           go to state 54
    switch_head           go to state 55
    function_call         go to state 56
    function_def_head     go to state 57
    function_def          go to state 58


state 151

   10 stmnt_list: stmnt_list . stmnt
   14 stmnt_block: stmnt_block_start stmnt_list . TOK_CLOSEBR $@2
   15            | stmnt_block_start stmnt_list . error

    error               shift, and go to state 193
    TOK_IDENTIFIER      shift, and go to state 1
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_IF              shift, and go to state 4
    TOK_ENDEXPR         shift, and go to state 5
    TOK_OPENPAR         shift, and go to state 6
    TOK_CLOSEBR         shift, and go to state 194
    TOK_ROM_DECL        shift, and go to state 7
    TOK_INT_DECL        shift, and go to state 8
    TOK_FLOAT_DECL      shift, and go to state 9
    TOK_VOID_DECL       shift, and go to state 10
    TOK_FOR_DECL        shift, and go to state 11
    TOK_WHILE_DECL      shift, and go to state 12
    TOK_DO_DECL         shift, and go to state 13
    TOK_ROM_CONST       shift, and go to state 14
    TOK_INT_CONST       shift, and go to state 15
    TOK_FLOAT_CONST     shift, and go to state 16
    TOK_PRINT           shift, and go to state 17
    TOK_READ            shift, and go to state 18
    TOK_BREAK           shift, and go to state 19
    TOK_CONTINUE        shift, and go to state 20
    TOK_GOTO            shift, and go to state 21
    TOK_RETURN          shift, and go to state 22
    TOK_STRUCT          shift, and go to state 23
    TOK_UNION           shift, and go to state 24
    TOK_SWITCH          shift, and go to state 25
    TOK_STRING_LITERAL  shift, and go to state 26

    expr_or_assignment    go to state 30
    expression_statement  go to state 31
    lexemes               go to state 32
    stmnt                 go to state 81
    struct_type           go to state 100
    print_stmt            go to state 39
    read_stmt             go to state 40
    if_stmt               go to state 41
    loop_decl             go to state 42
    for_decl              go to state 43
    while_decl            go to state 44
    do_while_decl         go to state 45
    type                  go to state 102
    type_name             go to state 47
    left_assign_expr      go to state 48
    assignment            go to state 49
    expr                  go to state 50
    struct_item           go to state 51
    identifier            go to state 52
    const                 go to state 53
    switch_stmt           go to state 54
    switch_head           go to state 55
    function_call         go to state 56
    function_def_head     go to state 57
    function_def          go to state 58


state 152

   77 type_name: struct_type TOK_IDENTIFIER .

    $default  reduce using rule 77 (type_name)


state 153

   63 loop_decl: do_while_decl instruction_body TOK_WHILE_DECL . loop_while_expr TOK_ENDEXPR

    TOK_OPENPAR  shift, and go to state 94

    loop_while_expr  go to state 195


state 154

  126 function_def_head: type TOK_IDENTIFIER .

    $default  reduce using rule 126 (function_def_head)


state 155

   80 assignment: left_assign_expr TOK_ASSIGN_OP expr .
   84 expr: expr . TOK_B_AND expr
   85     | expr . TOK_B_OR expr
   86     | expr . TOK_B_XOR expr
   89     | expr . TOK_AR_PLUS expr
   90     | expr . TOK_AR_MINUS expr
   91     | expr . TOK_AR_MUL expr
   92     | expr . TOK_AR_DIV expr
   93     | expr . TOK_AR_MOD expr
   94     | expr . TOK_COMP_OP expr

    TOK_B_AND     shift, and go to state 107
    TOK_B_OR      shift, and go to state 108
    TOK_B_XOR     shift, and go to state 109
    TOK_AR_PLUS   shift, and go to state 110
    TOK_AR_MINUS  shift, and go to state 111
    TOK_AR_MUL    shift, and go to state 112
    TOK_AR_DIV    shift, and go to state 113
    TOK_AR_MOD    shift, and go to state 114
    TOK_COMP_OP   shift, and go to state 115

    $default  reduce using rule 80 (assignment)


state 156

   84 expr: expr . TOK_B_AND expr
   84     | expr TOK_B_AND expr .
   85     | expr . TOK_B_OR expr
   86     | expr . TOK_B_XOR expr
   89     | expr . TOK_AR_PLUS expr
   90     | expr . TOK_AR_MINUS expr
   91     | expr . TOK_AR_MUL expr
   92     | expr . TOK_AR_DIV expr
   93     | expr . TOK_AR_MOD expr
   94     | expr . TOK_COMP_OP expr

    $default  reduce using rule 84 (expr)


state 157

   84 expr: expr . TOK_B_AND expr
   85     | expr . TOK_B_OR expr
   85     | expr TOK_B_OR expr .
   86     | expr . TOK_B_XOR expr
   89     | expr . TOK_AR_PLUS expr
   90     | expr . TOK_AR_MINUS expr
   91     | expr . TOK_AR_MUL expr
   92     | expr . TOK_AR_DIV expr
   93     | expr . TOK_AR_MOD expr
   94     | expr . TOK_COMP_OP expr

    TOK_B_AND   shift, and go to state 107
    TOK_AR_MUL  shift, and go to state 112
    TOK_AR_DIV  shift, and go to state 113

    $default  reduce using rule 85 (expr)


state 158

   84 expr: expr . TOK_B_AND expr
   85     | expr . TOK_B_OR expr
   86     | expr . TOK_B_XOR expr
   86     | expr TOK_B_XOR expr .
   89     | expr . TOK_AR_PLUS expr
   90     | expr . TOK_AR_MINUS expr
   91     | expr . TOK_AR_MUL expr
   92     | expr . TOK_AR_DIV expr
   93     | expr . TOK_AR_MOD expr
   94     | expr . TOK_COMP_OP expr

    TOK_B_AND   shift, and go to state 107
    TOK_AR_MUL  shift, and go to state 112
    TOK_AR_DIV  shift, and go to state 113

    $default  reduce using rule 86 (expr)


state 159

   84 expr: expr . TOK_B_AND expr
   85     | expr . TOK_B_OR expr
   86     | expr . TOK_B_XOR expr
   89     | expr . TOK_AR_PLUS expr
   89     | expr TOK_AR_PLUS expr .
   90     | expr . TOK_AR_MINUS expr
   91     | expr . TOK_AR_MUL expr
   92     | expr . TOK_AR_DIV expr
   93     | expr . TOK_AR_MOD expr
   94     | expr . TOK_COMP_OP expr

    TOK_B_AND   shift, and go to state 107
    TOK_AR_MUL  shift, and go to state 112
    TOK_AR_DIV  shift, and go to state 113

    $default  reduce using rule 89 (expr)


state 160

   84 expr: expr . TOK_B_AND expr
   85     | expr . TOK_B_OR expr
   86     | expr . TOK_B_XOR expr
   89     | expr . TOK_AR_PLUS expr
   90     | expr . TOK_AR_MINUS expr
   90     | expr TOK_AR_MINUS expr .
   91     | expr . TOK_AR_MUL expr
   92     | expr . TOK_AR_DIV expr
   93     | expr . TOK_AR_MOD expr
   94     | expr . TOK_COMP_OP expr

    TOK_B_AND   shift, and go to state 107
    TOK_AR_MUL  shift, and go to state 112
    TOK_AR_DIV  shift, and go to state 113

    $default  reduce using rule 90 (expr)


state 161

   84 expr: expr . TOK_B_AND expr
   85     | expr . TOK_B_OR expr
   86     | expr . TOK_B_XOR expr
   89     | expr . TOK_AR_PLUS expr
   90     | expr . TOK_AR_MINUS expr
   91     | expr . TOK_AR_MUL expr
   91     | expr TOK_AR_MUL expr .
   92     | expr . TOK_AR_DIV expr
   93     | expr . TOK_AR_MOD expr
   94     | expr . TOK_COMP_OP expr

    $default  reduce using rule 91 (expr)


state 162

   84 expr: expr . TOK_B_AND expr
   85     | expr . TOK_B_OR expr
   86     | expr . TOK_B_XOR expr
   89     | expr . TOK_AR_PLUS expr
   90     | expr . TOK_AR_MINUS expr
   91     | expr . TOK_AR_MUL expr
   92     | expr . TOK_AR_DIV expr
   92     | expr TOK_AR_DIV expr .
   93     | expr . TOK_AR_MOD expr
   94     | expr . TOK_COMP_OP expr

    $default  reduce using rule 92 (expr)


state 163

   84 expr: expr . TOK_B_AND expr
   85     | expr . TOK_B_OR expr
   86     | expr . TOK_B_XOR expr
   89     | expr . TOK_AR_PLUS expr
   90     | expr . TOK_AR_MINUS expr
   91     | expr . TOK_AR_MUL expr
   92     | expr . TOK_AR_DIV expr
   93     | expr . TOK_AR_MOD expr
   93     | expr TOK_AR_MOD expr .
   94     | expr . TOK_COMP_OP expr

    TOK_B_AND     shift, and go to state 107
    TOK_B_OR      shift, and go to state 108
    TOK_B_XOR     shift, and go to state 109
    TOK_AR_PLUS   shift, and go to state 110
    TOK_AR_MINUS  shift, and go to state 111
    TOK_AR_MUL    shift, and go to state 112
    TOK_AR_DIV    shift, and go to state 113

    $default  reduce using rule 93 (expr)


state 164

   84 expr: expr . TOK_B_AND expr
   85     | expr . TOK_B_OR expr
   86     | expr . TOK_B_XOR expr
   89     | expr . TOK_AR_PLUS expr
   90     | expr . TOK_AR_MINUS expr
   91     | expr . TOK_AR_MUL expr
   92     | expr . TOK_AR_DIV expr
   93     | expr . TOK_AR_MOD expr
   94     | expr . TOK_COMP_OP expr
   94     | expr TOK_COMP_OP expr .

    TOK_B_AND     shift, and go to state 107
    TOK_B_OR      shift, and go to state 108
    TOK_B_XOR     shift, and go to state 109
    TOK_AR_PLUS   shift, and go to state 110
    TOK_AR_MINUS  shift, and go to state 111
    TOK_AR_MUL    shift, and go to state 112
    TOK_AR_DIV    shift, and go to state 113
    TOK_AR_MOD    shift, and go to state 114

    $default  reduce using rule 94 (expr)


state 165

  101 struct_item: identifier TOK_DOT TOK_IDENTIFIER .

    $default  reduce using rule 101 (struct_item)


state 166

   84 expr: expr . TOK_B_AND expr
   85     | expr . TOK_B_OR expr
   86     | expr . TOK_B_XOR expr
   89     | expr . TOK_AR_PLUS expr
   90     | expr . TOK_AR_MINUS expr
   91     | expr . TOK_AR_MUL expr
   92     | expr . TOK_AR_DIV expr
   93     | expr . TOK_AR_MOD expr
   94     | expr . TOK_COMP_OP expr
  113 case_head: TOK_CASE expr . TOK_DOUBLEDOT

    TOK_B_AND      shift, and go to state 107
    TOK_B_OR       shift, and go to state 108
    TOK_B_XOR      shift, and go to state 109
    TOK_AR_PLUS    shift, and go to state 110
    TOK_AR_MINUS   shift, and go to state 111
    TOK_AR_MUL     shift, and go to state 112
    TOK_AR_DIV     shift, and go to state 113
    TOK_AR_MOD     shift, and go to state 114
    TOK_COMP_OP    shift, and go to state 115
    TOK_DOUBLEDOT  shift, and go to state 196


state 167

  108 switch_stmt: switch_head case_list TOK_CLOSEBR .

    $default  reduce using rule 108 (switch_stmt)


state 168

  117 default_head: TOK_DEFAULT . TOK_DOUBLEDOT

    TOK_DOUBLEDOT  shift, and go to state 197


state 169

  107 switch_stmt: switch_head case_list default . TOK_CLOSEBR

    TOK_CLOSEBR  shift, and go to state 198


state 170

  116 default: default_head . instruction_body

    TOK_IDENTIFIER      shift, and go to state 1
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_IF              shift, and go to state 4
    TOK_ENDEXPR         shift, and go to state 5
    TOK_OPENPAR         shift, and go to state 6
    TOK_OPENBR          shift, and go to state 96
    TOK_ROM_DECL        shift, and go to state 7
    TOK_INT_DECL        shift, and go to state 8
    TOK_FLOAT_DECL      shift, and go to state 9
    TOK_VOID_DECL       shift, and go to state 10
    TOK_FOR_DECL        shift, and go to state 11
    TOK_WHILE_DECL      shift, and go to state 12
    TOK_DO_DECL         shift, and go to state 13
    TOK_ROM_CONST       shift, and go to state 14
    TOK_INT_CONST       shift, and go to state 15
    TOK_FLOAT_CONST     shift, and go to state 16
    TOK_PRINT           shift, and go to state 17
    TOK_READ            shift, and go to state 18
    TOK_BREAK           shift, and go to state 19
    TOK_CONTINUE        shift, and go to state 20
    TOK_GOTO            shift, and go to state 21
    TOK_RETURN          shift, and go to state 22
    TOK_STRUCT          shift, and go to state 23
    TOK_UNION           shift, and go to state 24
    TOK_SWITCH          shift, and go to state 25
    TOK_STRING_LITERAL  shift, and go to state 26

    stmnt_block_start     go to state 97
    stmnt_block           go to state 98
    expr_or_assignment    go to state 30
    expression_statement  go to state 31
    lexemes               go to state 32
    stmnt                 go to state 99
    struct_type           go to state 100
    print_stmt            go to state 39
    read_stmt             go to state 40
    if_stmt               go to state 41
    loop_decl             go to state 42
    for_decl              go to state 43
    while_decl            go to state 44
    do_while_decl         go to state 45
    instruction_body      go to state 199
    type                  go to state 102
    type_name             go to state 47
    left_assign_expr      go to state 48
    assignment            go to state 49
    expr                  go to state 50
    struct_item           go to state 51
    identifier            go to state 52
    const                 go to state 53
    switch_stmt           go to state 54
    switch_head           go to state 55
    function_call         go to state 56
    function_def_head     go to state 57
    function_def          go to state 58


state 171

  111 case_list: case_stmt case_list .

    $default  reduce using rule 111 (case_list)


state 172

  114 case_body: instruction_body .

    $default  reduce using rule 114 (case_body)


state 173

  115 case_body: case_stmt .

    $default  reduce using rule 115 (case_body)


state 174

  112 case_stmt: case_head case_body .

    $default  reduce using rule 112 (case_stmt)


state 175

  129 function_def: function_def_head func_declarator error .

    $default  reduce using rule 129 (function_def)


state 176

  128 function_def: function_def_head func_declarator stmnt_block .

    $default  reduce using rule 128 (function_def)


state 177

   43 declaration_stmt: type TOK_IDENTIFIER .

    $default  reduce using rule 43 (declaration_stmt)


state 178

  121 parameter_list: parameter_list TOK_COMMA . parameter

    TOK_IDENTIFIER      shift, and go to state 64
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_OPENPAR         shift, and go to state 6
    TOK_ROM_DECL        shift, and go to state 7
    TOK_INT_DECL        shift, and go to state 8
    TOK_FLOAT_DECL      shift, and go to state 9
    TOK_VOID_DECL       shift, and go to state 10
    TOK_ROM_CONST       shift, and go to state 14
    TOK_INT_CONST       shift, and go to state 15
    TOK_FLOAT_CONST     shift, and go to state 16
    TOK_STRUCT          shift, and go to state 23
    TOK_UNION           shift, and go to state 24
    TOK_STRING_LITERAL  shift, and go to state 26

    declaration_stmt  go to state 124
    struct_type       go to state 100
    type              go to state 125
    type_name         go to state 47
    left_assign_expr  go to state 65
    expr              go to state 126
    struct_item       go to state 51
    identifier        go to state 52
    const             go to state 53
    parameter         go to state 200
    function_call     go to state 56


state 179

  123 declarator: TOK_OPENPAR parameter_type_list TOK_CLOSEPAR .

    $default  reduce using rule 123 (declarator)


state 180

  100 array: TOK_OPENSQ expr error .

    $default  reduce using rule 100 (array)


state 181

   98 array: TOK_OPENSQ expr TOK_CLOSESQ . array

    TOK_OPENSQ  shift, and go to state 60

    $default  reduce using rule 97 (array)

    array  go to state 201


state 182

   60 if_stmt: TOK_IF TOK_OPENPAR expr error .

    $default  reduce using rule 60 (if_stmt)


state 183

   58 if_stmt: TOK_IF TOK_OPENPAR expr TOK_CLOSEPAR . instruction_body
   59        | TOK_IF TOK_OPENPAR expr TOK_CLOSEPAR . instruction_body TOK_ELSE instruction_body

    TOK_IDENTIFIER      shift, and go to state 1
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_IF              shift, and go to state 4
    TOK_ENDEXPR         shift, and go to state 5
    TOK_OPENPAR         shift, and go to state 6
    TOK_OPENBR          shift, and go to state 96
    TOK_ROM_DECL        shift, and go to state 7
    TOK_INT_DECL        shift, and go to state 8
    TOK_FLOAT_DECL      shift, and go to state 9
    TOK_VOID_DECL       shift, and go to state 10
    TOK_FOR_DECL        shift, and go to state 11
    TOK_WHILE_DECL      shift, and go to state 12
    TOK_DO_DECL         shift, and go to state 13
    TOK_ROM_CONST       shift, and go to state 14
    TOK_INT_CONST       shift, and go to state 15
    TOK_FLOAT_CONST     shift, and go to state 16
    TOK_PRINT           shift, and go to state 17
    TOK_READ            shift, and go to state 18
    TOK_BREAK           shift, and go to state 19
    TOK_CONTINUE        shift, and go to state 20
    TOK_GOTO            shift, and go to state 21
    TOK_RETURN          shift, and go to state 22
    TOK_STRUCT          shift, and go to state 23
    TOK_UNION           shift, and go to state 24
    TOK_SWITCH          shift, and go to state 25
    TOK_STRING_LITERAL  shift, and go to state 26

    stmnt_block_start     go to state 97
    stmnt_block           go to state 98
    expr_or_assignment    go to state 30
    expression_statement  go to state 31
    lexemes               go to state 32
    stmnt                 go to state 99
    struct_type           go to state 100
    print_stmt            go to state 39
    read_stmt             go to state 40
    if_stmt               go to state 41
    loop_decl             go to state 42
    for_decl              go to state 43
    while_decl            go to state 44
    do_while_decl         go to state 45
    instruction_body      go to state 202
    type                  go to state 102
    type_name             go to state 47
    left_assign_expr      go to state 48
    assignment            go to state 49
    expr                  go to state 50
    struct_item           go to state 51
    identifier            go to state 52
    const                 go to state 53
    switch_stmt           go to state 54
    switch_head           go to state 55
    function_call         go to state 56
    function_def_head     go to state 57
    function_def          go to state 58


state 184

   53 print_stmt: TOK_PRINT TOK_OPENPAR expr TOK_CLOSEPAR . TOK_ENDEXPR

    TOK_ENDEXPR  shift, and go to state 203


state 185

   55 print_stmt: TOK_PRINT '(' expr error .

    $default  reduce using rule 55 (print_stmt)


state 186

   56 print_stmt: TOK_PRINT '(' expr ')' . error

    error  shift, and go to state 204


state 187

   57 read_stmt: TOK_READ TOK_OPENPAR left_assign_expr TOK_CLOSEPAR . TOK_ENDEXPR

    TOK_ENDEXPR  shift, and go to state 205


state 188

  109 switch_head: TOK_SWITCH TOK_OPENPAR expr TOK_CLOSEPAR . TOK_OPENBR

    TOK_OPENBR  shift, and go to state 206


state 189

   65 loop_for_expr: TOK_OPENPAR expression_statement expression_statement . TOK_CLOSEPAR
   66              | TOK_OPENPAR expression_statement expression_statement . expr_or_assignment TOK_CLOSEPAR

    TOK_IDENTIFIER      shift, and go to state 64
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_OPENPAR         shift, and go to state 6
    TOK_CLOSEPAR        shift, and go to state 207
    TOK_ROM_CONST       shift, and go to state 14
    TOK_INT_CONST       shift, and go to state 15
    TOK_FLOAT_CONST     shift, and go to state 16
    TOK_STRING_LITERAL  shift, and go to state 26

    expr_or_assignment  go to state 208
    left_assign_expr    go to state 48
    assignment          go to state 49
    expr                go to state 209
    struct_item         go to state 51
    identifier          go to state 52
    const               go to state 53
    function_call       go to state 56


state 190

   64 loop_while_expr: TOK_OPENPAR expr TOK_CLOSEPAR .

    $default  reduce using rule 64 (loop_while_expr)


state 191

   17 stmnt_block: stmnt_block_start declaration_list TOK_CLOSEBR . $@3

    $default  reduce using rule 16 ($@3)

    $@3  go to state 210


state 192

   10 stmnt_list: stmnt_list . stmnt
   19 stmnt_block: stmnt_block_start declaration_list stmnt_list . TOK_CLOSEBR $@4
   20            | stmnt_block_start declaration_list stmnt_list . error

    error               shift, and go to state 211
    TOK_IDENTIFIER      shift, and go to state 1
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_IF              shift, and go to state 4
    TOK_ENDEXPR         shift, and go to state 5
    TOK_OPENPAR         shift, and go to state 6
    TOK_CLOSEBR         shift, and go to state 212
    TOK_ROM_DECL        shift, and go to state 7
    TOK_INT_DECL        shift, and go to state 8
    TOK_FLOAT_DECL      shift, and go to state 9
    TOK_VOID_DECL       shift, and go to state 10
    TOK_FOR_DECL        shift, and go to state 11
    TOK_WHILE_DECL      shift, and go to state 12
    TOK_DO_DECL         shift, and go to state 13
    TOK_ROM_CONST       shift, and go to state 14
    TOK_INT_CONST       shift, and go to state 15
    TOK_FLOAT_CONST     shift, and go to state 16
    TOK_PRINT           shift, and go to state 17
    TOK_READ            shift, and go to state 18
    TOK_BREAK           shift, and go to state 19
    TOK_CONTINUE        shift, and go to state 20
    TOK_GOTO            shift, and go to state 21
    TOK_RETURN          shift, and go to state 22
    TOK_STRUCT          shift, and go to state 23
    TOK_UNION           shift, and go to state 24
    TOK_SWITCH          shift, and go to state 25
    TOK_STRING_LITERAL  shift, and go to state 26

    expr_or_assignment    go to state 30
    expression_statement  go to state 31
    lexemes               go to state 32
    stmnt                 go to state 81
    struct_type           go to state 100
    print_stmt            go to state 39
    read_stmt             go to state 40
    if_stmt               go to state 41
    loop_decl             go to state 42
    for_decl              go to state 43
    while_decl            go to state 44
    do_while_decl         go to state 45
    type                  go to state 102
    type_name             go to state 47
    left_assign_expr      go to state 48
    assignment            go to state 49
    expr                  go to state 50
    struct_item           go to state 51
    identifier            go to state 52
    const                 go to state 53
    switch_stmt           go to state 54
    switch_head           go to state 55
    function_call         go to state 56
    function_def_head     go to state 57
    function_def          go to state 58


state 193

   15 stmnt_block: stmnt_block_start stmnt_list error .

    $default  reduce using rule 15 (stmnt_block)


state 194

   14 stmnt_block: stmnt_block_start stmnt_list TOK_CLOSEBR . $@2

    $default  reduce using rule 13 ($@2)

    $@2  go to state 213


state 195

   63 loop_decl: do_while_decl instruction_body TOK_WHILE_DECL loop_while_expr . TOK_ENDEXPR

    TOK_ENDEXPR  shift, and go to state 214


state 196

  113 case_head: TOK_CASE expr TOK_DOUBLEDOT .

    $default  reduce using rule 113 (case_head)


state 197

  117 default_head: TOK_DEFAULT TOK_DOUBLEDOT .

    $default  reduce using rule 117 (default_head)


state 198

  107 switch_stmt: switch_head case_list default TOK_CLOSEBR .

    $default  reduce using rule 107 (switch_stmt)


state 199

  116 default: default_head instruction_body .

    $default  reduce using rule 116 (default)


state 200

  121 parameter_list: parameter_list TOK_COMMA parameter .

    $default  reduce using rule 121 (parameter_list)


state 201

   98 array: TOK_OPENSQ expr TOK_CLOSESQ array .

    $default  reduce using rule 98 (array)


state 202

   58 if_stmt: TOK_IF TOK_OPENPAR expr TOK_CLOSEPAR instruction_body .
   59        | TOK_IF TOK_OPENPAR expr TOK_CLOSEPAR instruction_body . TOK_ELSE instruction_body

    TOK_ELSE  shift, and go to state 215

    $default  reduce using rule 58 (if_stmt)


state 203

   53 print_stmt: TOK_PRINT TOK_OPENPAR expr TOK_CLOSEPAR TOK_ENDEXPR .

    $default  reduce using rule 53 (print_stmt)


state 204

   56 print_stmt: TOK_PRINT '(' expr ')' error .

    $default  reduce using rule 56 (print_stmt)


state 205

   57 read_stmt: TOK_READ TOK_OPENPAR left_assign_expr TOK_CLOSEPAR TOK_ENDEXPR .

    $default  reduce using rule 57 (read_stmt)


state 206

  109 switch_head: TOK_SWITCH TOK_OPENPAR expr TOK_CLOSEPAR TOK_OPENBR .

    $default  reduce using rule 109 (switch_head)


state 207

   65 loop_for_expr: TOK_OPENPAR expression_statement expression_statement TOK_CLOSEPAR .

    $default  reduce using rule 65 (loop_for_expr)


state 208

   66 loop_for_expr: TOK_OPENPAR expression_statement expression_statement expr_or_assignment . TOK_CLOSEPAR

    TOK_CLOSEPAR  shift, and go to state 216


state 209

   21 expr_or_assignment: expr .
   84 expr: expr . TOK_B_AND expr
   85     | expr . TOK_B_OR expr
   86     | expr . TOK_B_XOR expr
   89     | expr . TOK_AR_PLUS expr
   90     | expr . TOK_AR_MINUS expr
   91     | expr . TOK_AR_MUL expr
   92     | expr . TOK_AR_DIV expr
   93     | expr . TOK_AR_MOD expr
   94     | expr . TOK_COMP_OP expr

    TOK_B_AND     shift, and go to state 107
    TOK_B_OR      shift, and go to state 108
    TOK_B_XOR     shift, and go to state 109
    TOK_AR_PLUS   shift, and go to state 110
    TOK_AR_MINUS  shift, and go to state 111
    TOK_AR_MUL    shift, and go to state 112
    TOK_AR_DIV    shift, and go to state 113
    TOK_AR_MOD    shift, and go to state 114
    TOK_COMP_OP   shift, and go to state 115

    $default  reduce using rule 21 (expr_or_assignment)


state 210

   17 stmnt_block: stmnt_block_start declaration_list TOK_CLOSEBR $@3 .

    $default  reduce using rule 17 (stmnt_block)


state 211

   20 stmnt_block: stmnt_block_start declaration_list stmnt_list error .

    $default  reduce using rule 20 (stmnt_block)


state 212

   19 stmnt_block: stmnt_block_start declaration_list stmnt_list TOK_CLOSEBR . $@4

    $default  reduce using rule 18 ($@4)

    $@4  go to state 217


state 213

   14 stmnt_block: stmnt_block_start stmnt_list TOK_CLOSEBR $@2 .

    $default  reduce using rule 14 (stmnt_block)


state 214

   63 loop_decl: do_while_decl instruction_body TOK_WHILE_DECL loop_while_expr TOK_ENDEXPR .

    $default  reduce using rule 63 (loop_decl)


state 215

   59 if_stmt: TOK_IF TOK_OPENPAR expr TOK_CLOSEPAR instruction_body TOK_ELSE . instruction_body

    TOK_IDENTIFIER      shift, and go to state 1
    TOK_B_NOT           shift, and go to state 2
    TOK_AR_MINUS        shift, and go to state 3
    TOK_IF              shift, and go to state 4
    TOK_ENDEXPR         shift, and go to state 5
    TOK_OPENPAR         shift, and go to state 6
    TOK_OPENBR          shift, and go to state 96
    TOK_ROM_DECL        shift, and go to state 7
    TOK_INT_DECL        shift, and go to state 8
    TOK_FLOAT_DECL      shift, and go to state 9
    TOK_VOID_DECL       shift, and go to state 10
    TOK_FOR_DECL        shift, and go to state 11
    TOK_WHILE_DECL      shift, and go to state 12
    TOK_DO_DECL         shift, and go to state 13
    TOK_ROM_CONST       shift, and go to state 14
    TOK_INT_CONST       shift, and go to state 15
    TOK_FLOAT_CONST     shift, and go to state 16
    TOK_PRINT           shift, and go to state 17
    TOK_READ            shift, and go to state 18
    TOK_BREAK           shift, and go to state 19
    TOK_CONTINUE        shift, and go to state 20
    TOK_GOTO            shift, and go to state 21
    TOK_RETURN          shift, and go to state 22
    TOK_STRUCT          shift, and go to state 23
    TOK_UNION           shift, and go to state 24
    TOK_SWITCH          shift, and go to state 25
    TOK_STRING_LITERAL  shift, and go to state 26

    stmnt_block_start     go to state 97
    stmnt_block           go to state 98
    expr_or_assignment    go to state 30
    expression_statement  go to state 31
    lexemes               go to state 32
    stmnt                 go to state 99
    struct_type           go to state 100
    print_stmt            go to state 39
    read_stmt             go to state 40
    if_stmt               go to state 41
    loop_decl             go to state 42
    for_decl              go to state 43
    while_decl            go to state 44
    do_while_decl         go to state 45
    instruction_body      go to state 218
    type                  go to state 102
    type_name             go to state 47
    left_assign_expr      go to state 48
    assignment            go to state 49
    expr                  go to state 50
    struct_item           go to state 51
    identifier            go to state 52
    const                 go to state 53
    switch_stmt           go to state 54
    switch_head           go to state 55
    function_call         go to state 56
    function_def_head     go to state 57
    function_def          go to state 58


state 216

   66 loop_for_expr: TOK_OPENPAR expression_statement expression_statement expr_or_assignment TOK_CLOSEPAR .

    $default  reduce using rule 66 (loop_for_expr)


state 217

   19 stmnt_block: stmnt_block_start declaration_list stmnt_list TOK_CLOSEBR $@4 .

    $default  reduce using rule 19 (stmnt_block)


state 218

   59 if_stmt: TOK_IF TOK_OPENPAR expr TOK_CLOSEPAR instruction_body TOK_ELSE instruction_body .

    $default  reduce using rule 59 (if_stmt)
